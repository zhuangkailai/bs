<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.tjpu.sp.dao.environmentalprotection.taskmanagement.AlarmTaskDisposeManagementMapper">
    <resultMap id="BaseResultMap"
               type="com.tjpu.sp.model.environmentalprotection.taskmanagement.AlarmTaskDisposeManagementVO">
        <id column="PK_TaskID" jdbcType="VARCHAR" property="pkTaskid"/>
        <result column="FK_Pollutionid" jdbcType="VARCHAR" property="fkPollutionid"/>
        <result column="FK_TaskType" jdbcType="VARCHAR" property="fkTasktype"/>
        <result column="TaskName" jdbcType="VARCHAR" property="taskname"/>
        <result column="TaskCreateTime" jdbcType="TIMESTAMP" property="taskcreatetime"/>
        <result column="TaskStatus" jdbcType="NUMERIC" property="taskstatus"/>
        <result column="TaskRemark" jdbcType="VARCHAR" property="taskremark"/>
        <result column="FK_ProblemType" jdbcType="VARCHAR" property="fkProblemtype"/>
        <result column="FeedbackResults" jdbcType="VARCHAR" property="feedbackresults"/>
        <result column="IsSampling" jdbcType="NUMERIC" property="issampling"/>
        <result column="FileID" jdbcType="VARCHAR" property="fileid"/>
        <result column="UpdateTime" jdbcType="TIMESTAMP" property="updatetime"/>
        <result column="UpdateUser" jdbcType="VARCHAR" property="updateuser"/>
        <result column="FK_TaskSource" property="fkTasksource" jdbcType="VARCHAR"/>
        <result column="TaskStartDate" property="taskstartdate" jdbcType="DATE"/>
        <result column="TaskEndDate" property="taskenddate" jdbcType="DATE"/>
        <result column="TaskRealStartDate" property="taskrealstartdate" jdbcType="DATE"/>
        <result column="TaskRealEndDate" property="taskrealenddate" jdbcType="DATE"/>
        <result column="FK_MonitorPointTypeCode" property="fkmonitorpointtypecode" jdbcType="VARCHAR"/>
        <result column="Disposer" property="disposer" jdbcType="VARCHAR"/>
        <result column="TaskEndTime" jdbcType="TIMESTAMP" property="taskendtime"/>
        <result column="AlarmStartTime" jdbcType="TIMESTAMP" property="alarmstarttime"/>
        <result column="OverLevelCode" jdbcType="VARCHAR" property="overlevelcode"/>
        <result column="RecoveryStatus" jdbcType="NUMERIC" property="recoverystatus"/>
        <result column="RecoveryTime" jdbcType="TIMESTAMP" property="recoverytime"/>

    </resultMap>
    <resultMap id="DaliyResultMap" type="map">
        <id column="PK_TaskID" jdbcType="VARCHAR" property="pkTaskid"/>
        <result column="PK_TaskID" jdbcType="VARCHAR" property="pk_taskid"/>
        <result column="FK_Pollutionid" jdbcType="VARCHAR" property="fkPollutionid"/>
        <result column="FK_TaskType" jdbcType="VARCHAR" property="fkTasktype"/>
        <result column="TaskName" jdbcType="VARCHAR" property="taskname"/>
        <result column="TaskCreateTime" jdbcType="TIMESTAMP" property="taskcreatetime"/>
        <result column="TaskStatus" jdbcType="NUMERIC" property="taskstatus"/>
        <result column="TaskRemark" jdbcType="VARCHAR" property="taskremark"/>
        <result column="FK_ProblemType" jdbcType="VARCHAR" property="fkProblemtype"/>
        <result column="FeedbackResults" jdbcType="VARCHAR" property="feedbackresults"/>
        <result column="IsSampling" jdbcType="NUMERIC" property="issampling"/>
        <result column="FileID" jdbcType="VARCHAR" property="fileid"/>
        <result column="UpdateTime" jdbcType="TIMESTAMP" property="updatetime"/>
        <result column="UpdateUser" jdbcType="VARCHAR" property="updateuser"/>
        <result column="FK_TaskSource" property="fkTasksource" jdbcType="VARCHAR"/>
        <result column="TaskStartDate" property="taskstartdate" jdbcType="DATE"/>
        <result column="TaskEndDate" property="taskenddate" jdbcType="DATE"/>
        <result column="TaskRealStartDate" property="taskrealstartdate" jdbcType="DATE"/>
        <result column="TaskRealEndDate" property="taskrealenddate" jdbcType="DATE"/>
        <association property="fenpairen" javaType="string" column="{PK_TaskID=PK_TaskID,FK_TaskType=FK_TaskType}"
                     select="getFenPaiRen">
            <result property="fenpairen" column="User_Name"/>
        </association>
        <association property="fenpaidate" javaType="string" column="{PK_TaskID=PK_TaskID,FK_TaskType=FK_TaskType}"
                     select="getFenPaiDate">
            <result property="fenpaidate" column="TaskHandleTime"/>
        </association>
        <collection property="zhixingren" ofType="string" javaType="java.util.Set"
                    column="{PK_TaskID=PK_TaskID,FK_TaskType=FK_TaskType}"
                    select="getZhiXingRen">
            <result property="zhixingren" column="User_Name"/>
        </collection>
    </resultMap>
    <resultMap id="RecordInfoDetailResultMap" type="map">
        <id column="PK_TaskID" jdbcType="VARCHAR" property="pkTaskid"/>
        <result column="FK_Pollutionid" jdbcType="VARCHAR" property="fkPollutionid"/>
        <result column="FK_TaskType" jdbcType="VARCHAR" property="fkTasktype"/>
        <result column="TaskName" jdbcType="VARCHAR" property="taskname"/>
        <result column="TaskCreateTime" jdbcType="TIMESTAMP" property="taskcreatetime"/>
        <result column="TaskStatus" jdbcType="NUMERIC" property="taskstatus"/>
        <result column="TaskRemark" jdbcType="VARCHAR" property="taskremark"/>
        <result column="FK_ProblemType" jdbcType="VARCHAR" property="fkProblemtype"/>
        <result column="FeedbackResults" jdbcType="VARCHAR" property="feedbackresults"/>
        <result column="IsSampling" jdbcType="NUMERIC" property="issampling"/>
        <result column="FileID" jdbcType="VARCHAR" property="fileid"/>
        <result column="UpdateTime" jdbcType="TIMESTAMP" property="updatetime"/>
        <result column="UpdateUser" jdbcType="VARCHAR" property="updateuser"/>
        <result column="FK_TaskSource" property="fkTasksource" jdbcType="VARCHAR"/>
        <result column="TaskStartDate" property="taskstartdate" jdbcType="DATE"/>
        <result column="TaskEndDate" property="taskenddate" jdbcType="DATE"/>
        <result column="TaskRealStartDate" property="taskrealstartdate" jdbcType="DATE"/>
        <result column="TaskRealEndDate" property="taskrealenddate" jdbcType="DATE"/>
        <collection property="taskflow" ofType="map" javaType="java.util.List"
                    column="{PK_TaskID=PK_TaskID,FK_TaskType=FK_TaskType}"
                    select="getRecordInfoDetail">
            <result property="username" column="User_Name"/>
            <result property="taskstatus" column="CurrentTaskStatus"/>
            <result property="taskhandletimestr" column="TaskHandleTime"/>
        </collection>
    </resultMap>
    <resultMap id="DaliyDetailResultMap" type="map">
        <id column="PK_TaskID" jdbcType="VARCHAR" property="pkTaskid"/>
        <result column="FK_Pollutionid" jdbcType="VARCHAR" property="fkPollutionid"/>
        <result column="FK_TaskType" jdbcType="VARCHAR" property="fkTasktype"/>
        <result column="TaskName" jdbcType="VARCHAR" property="taskname"/>
        <result column="TaskCreateTime" jdbcType="TIMESTAMP" property="taskcreatetime"/>
        <result column="TaskStatus" jdbcType="NUMERIC" property="taskstatus"/>
        <result column="TaskRemark" jdbcType="VARCHAR" property="taskremark"/>
        <result column="FK_ProblemType" jdbcType="VARCHAR" property="fkProblemtype"/>
        <result column="FeedbackResults" jdbcType="VARCHAR" property="feedbackresults"/>
        <result column="IsSampling" jdbcType="NUMERIC" property="issampling"/>
        <result column="FileID" jdbcType="VARCHAR" property="fileid"/>
        <result column="UpdateTime" jdbcType="TIMESTAMP" property="updatetime"/>
        <result column="UpdateUser" jdbcType="VARCHAR" property="updateuser"/>
        <result column="FK_TaskSource" property="fkTasksource" jdbcType="VARCHAR"/>
        <result column="TaskStartDate" property="taskstartdate" jdbcType="DATE"/>
        <result column="TaskEndDate" property="taskenddate" jdbcType="DATE"/>
        <result column="TaskRealStartDate" property="taskrealstartdate" jdbcType="DATE"/>
        <result column="TaskRealEndDate" property="taskrealenddate" jdbcType="DATE"/>
        <result column="TaskRealEndDate" property="taskrealenddate" jdbcType="DATE"/>
        <association property="fenpairen" javaType="string" column="{PK_TaskID=PK_TaskID,FK_TaskType=FK_TaskType}"
                     select="getFenPaiRen">
            <result property="fenpairen" column="User_Name"/>
        </association>
        <!-- <association property="problem" javaType="java.util.Set" column="FK_ProblemType" select="getProblemType">
             <result property="problem" column="name"/>
         </association>-->
        <collection property="zhixingren" ofType="string" javaType="java.util.Set"
                    column="{PK_TaskID=PK_TaskID,FK_TaskType=FK_TaskType}"
                    select="getZhiXingRen">
            <result property="zhixingren" column="User_Name"/>
        </collection>
    </resultMap>

    <resultMap id="MonitorTaskResultMap" type="map">
        <id column="PK_TaskID" jdbcType="VARCHAR" property="pkTaskid"/>
        <result column="MonitorPointName" jdbcType="VARCHAR" property="monitorpointname"/>
        <result column="monitorpointid" jdbcType="VARCHAR" property="monitorpointid"/>
        <result column="TaskCreateTime" jdbcType="VARCHAR" property="taskcreatetime"/>
        <result column="TaskStatus" jdbcType="VARCHAR" property="TaskStatus"/>
        <result column="TaskStatusName" jdbcType="VARCHAR" property="TaskStatusName"/>
        <result column="dgimn" jdbcType="VARCHAR" property="dgimn"/>
        <result column="FK_MonitorPointTypeCode" jdbcType="VARCHAR" property="FK_MonitorPointTypeCode"/>
        <collection property="users" ofType="map" javaType="java.util.Set">
            <id property="userid" column="FK_TaskHandleUserID" jdbcType="VARCHAR"/>
            <result property="username" column="User_Name" jdbcType="VARCHAR"/>
        </collection>
    </resultMap>

    <resultMap id="TaskManagementResultMap" type="map">
        <id column="PK_TaskID" jdbcType="VARCHAR" property="pk_taskid"/>
        <result column="PK_TaskID" jdbcType="VARCHAR" property="pk_id"/>
        <result column="outputname" jdbcType="VARCHAR" property="monitorpointname"/>
        <result column="PointName" jdbcType="VARCHAR" property="pointname"/>
        <result column="PollutionName" jdbcType="VARCHAR" property="pollutionname"/>
        <result column="TaskName" jdbcType="VARCHAR" property="taskname"/>
        <result column="TaskRemark" jdbcType="VARCHAR" property="taskremark"/>
        <result column="dgimn" jdbcType="VARCHAR" property="dgimn"/>
        <result column="monitorpointid" jdbcType="VARCHAR" property="monitorpointid"/>
        <result column="TaskCreateTime" jdbcType="VARCHAR" property="taskcreatetime"/>
        <result column="PolluteStartTime" jdbcType="VARCHAR" property="PolluteStartTime"/>
        <result column="PolluteEndTime" jdbcType="VARCHAR" property="PolluteEndTime"/>
        <result column="TaskEndTime" jdbcType="VARCHAR" property="taskendtime"/>
        <result column="Duration" jdbcType="NUMERIC" property="Duration"/>
        <result column="TaskStatus" jdbcType="VARCHAR" property="taskstatus"/>
        <result column="FK_TaskType" jdbcType="VARCHAR" property="FK_TaskType"/>
        <result column="TaskStatusName" jdbcType="VARCHAR" property="taskstatusname"/>
        <result column="alarmstarttime" jdbcType="VARCHAR" property="alarmstarttime"/>
        <result column="OverLevelname" jdbcType="VARCHAR" property="overlevelname"/>
        <result column="fk_vedioalarmtypecode" jdbcType="VARCHAR" property="fk_vedioalarmtypecode"/>
        <result column="PK_PollutionID" jdbcType="VARCHAR" property="fk_pollutionid"/>
        <result column="PK_PollutionID" jdbcType="VARCHAR" property="pollutionid"/>
        <result column="dgimn" jdbcType="VARCHAR" property="dgimn"/>
        <result column="recoverystatus" jdbcType="VARCHAR" property="recoverystatus"/>
        <result column="recoverystatusname" jdbcType="VARCHAR" property="recoverystatusname"/>
        <result column="recoverytime" jdbcType="VARCHAR" property="recoverytime"/>
        <result column="FK_MonitorPointTypeCode" jdbcType="VARCHAR" property="fk_monitorpointtypecode"/>
        <result column="fkmonitorpointtypename" jdbcType="VARCHAR" property="fkmonitorpointtypename"/>
        <collection property="taskrecordlist" ofType="map" javaType="java.util.List">
            <discriminator javaType="string" column="currenttaskstatus">
                <case value="转办" resultMap="TransferResultMap"></case>
                <case value="转办任务" resultMap="TransferResultMap"></case>
                <case value="抄送" resultMap="otherResultMap"></case>
                <case value="抄送已读" resultMap="otherResultMap"></case>
                <case value="处理中" resultMap="otherResultMap"></case>
                <case value="待处理" resultMap="otherResultMap"></case>
                <case value="反馈信息" resultMap="otherResultMap"></case>
                <case value="分派任务" resultMap="otherResultMap"></case>
                <case value="忽略任务" resultMap="otherResultMap"></case>
                <case value="审核" resultMap="TransferResultMap"></case>
            </discriminator>
        </collection>
        <collection property="pollutants" ofType="map" javaType="java.util.Set">
            <result property="pollutantname" column="pollutantname" jdbcType="VARCHAR"/>
            <result property="alarmtype" column="AlarmType" jdbcType="VARCHAR"/>
            <result property="alarmtypename" column="alarmtypename" jdbcType="VARCHAR"/>
        </collection>
    </resultMap>

    <resultMap id="TaskFlowRecordMap" type="map">
        <id column="PK_TaskID" jdbcType="VARCHAR" property="pk_taskid"/>
        <result column="PK_TaskID" jdbcType="VARCHAR" property="pk_id"/>
        <result column="TaskCreateTime" jdbcType="VARCHAR" property="taskcreatetime"/>
        <result column="PolluteStartTime" jdbcType="VARCHAR" property="PolluteStartTime"/>
        <result column="PolluteEndTime" jdbcType="VARCHAR" property="PolluteEndTime"/>
        <result column="TaskEndTime" jdbcType="VARCHAR" property="taskendtime"/>
        <result column="TaskStatus" jdbcType="VARCHAR" property="taskstatus"/>
        <result column="FK_TaskType" jdbcType="VARCHAR" property="FK_TaskType"/>
        <result column="TaskStatusName" jdbcType="VARCHAR" property="taskstatusname"/>
        <result column="alarmstarttime" jdbcType="VARCHAR" property="alarmstarttime"/>
        <result column="OverLevelname" jdbcType="VARCHAR" property="overlevelname"/>
        <result column="fk_vedioalarmtypecode" jdbcType="VARCHAR" property="fk_vedioalarmtypecode"/>
        <result column="recoverystatus" jdbcType="VARCHAR" property="recoverystatus"/>
        <result column="recoverystatusname" jdbcType="VARCHAR" property="recoverystatusname"/>
        <result column="recoverytime" jdbcType="VARCHAR" property="recoverytime"/>
        <result column="FK_MonitorPointTypeCode" jdbcType="VARCHAR" property="fk_monitorpointtypecode"/>
        <result column="fkmonitorpointtypename" jdbcType="VARCHAR" property="fkmonitorpointtypename"/>
        <collection property="taskrecordlist" ofType="map" javaType="java.util.List">
            <discriminator javaType="string" column="currenttaskstatus">
                <case value="转办" resultMap="TransferResultMap"></case>
                <case value="转办任务" resultMap="TransferResultMap"></case>
                <case value="抄送" resultMap="otherResultMap"></case>
                <case value="抄送已读" resultMap="otherResultMap"></case>
                <case value="处理中" resultMap="otherResultMap"></case>
                <case value="待处理" resultMap="otherResultMap"></case>
                <case value="反馈信息" resultMap="otherResultMap"></case>
                <case value="分派任务" resultMap="otherResultMap"></case>
                <case value="忽略任务" resultMap="otherResultMap"></case>
                <case value="审核" resultMap="TransferResultMap"></case>
            </discriminator>
        </collection>
        <collection property="pollutants" ofType="map" javaType="java.util.Set">
            <result property="pollutantname" column="pollutantname" jdbcType="VARCHAR"/>
            <result property="alarmtype" column="AlarmType" jdbcType="VARCHAR"/>
            <result property="alarmtypename" column="alarmtypename" jdbcType="VARCHAR"/>
        </collection>
    </resultMap>

    <resultMap id="TaskPollutantMap" type="map">
        <id column="PK_TaskID" jdbcType="VARCHAR" property="pk_taskid"/>
        <result column="PK_TaskID" jdbcType="VARCHAR" property="pk_id"/>
        <result column="alarmstarttime" jdbcType="VARCHAR" property="alarmstarttime"/>
        <result column="TaskCreateTime" jdbcType="VARCHAR" property="taskcreatetime"/>
        <result column="TaskEndTime" jdbcType="VARCHAR" property="taskendtime"/>
        <collection property="pollutants" ofType="map" javaType="java.util.Set">
            <result property="pollutantname" column="pollutantname" jdbcType="VARCHAR"/>
            <result property="alarmtype" column="AlarmType" jdbcType="VARCHAR"/>
            <result property="alarmtypename" column="alarmtypename" jdbcType="VARCHAR"/>
        </collection>
    </resultMap>

    <!--
        author:chengzq
        description: 转办
        param:
        date: 2021/04/01 16:29
    -->
    <resultMap id="TransferResultMap" type="map">
        <id property="statusandtime" column="statusandtime" jdbcType="VARCHAR"/>
        <result property="currenttaskstatus" column="CurrentTaskStatus" jdbcType="VARCHAR"/>
        <result column="TaskHandleTime" jdbcType="VARCHAR" property="taskhandletime"/>
        <result column="TaskComment" jdbcType="VARCHAR" property="taskcomment"/>
        <collection property="users" ofType="string" javaType="java.util.Set">
            <result property="username" column="user_name" jdbcType="VARCHAR"/>
        </collection>
    </resultMap>

    <resultMap id="otherResultMap" type="map">
        <id property="currenttaskstatus" column="CurrentTaskStatus" jdbcType="VARCHAR"/>
        <result column="TaskHandleTime" jdbcType="VARCHAR" property="taskhandletime"/>
        <result column="TaskComment" jdbcType="VARCHAR" property="taskcomment"/>
        <collection property="users" ofType="string" javaType="java.util.Set">
            <result property="username" column="user_name" jdbcType="VARCHAR"/>
        </collection>
    </resultMap>

    <sql id="Base_Column_List">
    PK_TaskID, FK_Pollutionid, FK_TaskType, TaskName, convert (varchar(19),TaskCreateTime,120)TaskCreateTime, TaskStatus, TaskRemark,
    FK_ProblemType, FeedbackResults, IsSampling, FileID, UpdateTime, UpdateUser, FK_TaskSource,
    convert (varchar(19),TaskStartDate,120)TaskStartDate , convert (varchar(19),TaskEndDate,120)TaskEndDate,convert (varchar(19),TaskRealStartDate,120)TaskRealStartDate ,convert (varchar(19),TaskRealEndDate,120)TaskRealEndDate,
    FK_MonitorPointTypeCode,Disposer,convert (varchar(10),DisposalTime,120)DisposalTime,convert (varchar(10),ReportingTime,120)ReportingTime,convert (varchar(19),TaskEndTime,120)TaskEndTime,convert (varchar(19),AlarmStartTime,120)AlarmStartTime,
    OverLevelCode,RecoveryStatus,convert (varchar(19),RecoveryTime,120)RecoveryTime
  </sql>
    <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.String">
        select
        <include refid="Base_Column_List"/>
        from T_BAS_TaskDisposeManagement
        where PK_TaskID = #{pkTaskid,jdbcType=VARCHAR}
    </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.String">
    delete from T_BAS_TaskDisposeManagement
    where PK_TaskID = #{pkTaskid,jdbcType=VARCHAR}
  </delete>
    <insert id="insert"
            parameterType="com.tjpu.sp.model.environmentalprotection.taskmanagement.AlarmTaskDisposeManagementVO">
    insert into T_BAS_TaskDisposeManagement (PK_TaskID, FK_Pollutionid, FK_TaskType,
      TaskName, TaskCreateTime, TaskStatus,
      TaskRemark, FK_ProblemType, FeedbackResults,
      IsSampling, FileID, UpdateTime,
      UpdateUser, FK_TaskSource, TaskStartDate,
      TaskEndDate, TaskRealStartDate, TaskRealEndDate,FK_MonitorPointTypeCode,TaskEndTime,AlarmStartTime,
      OverLevelCode,RecoveryStatus,RecoveryTime
      )
    values (#{pkTaskid,jdbcType=VARCHAR}, #{fkPollutionid,jdbcType=VARCHAR}, #{fkTasktype,jdbcType=VARCHAR},
      #{taskname,jdbcType=VARCHAR}, #{taskcreatetime,jdbcType=TIMESTAMP}, #{taskstatus,jdbcType=NUMERIC},
      #{taskremark,jdbcType=VARCHAR}, #{fkProblemtype,jdbcType=VARCHAR}, #{feedbackresults,jdbcType=VARCHAR},
      #{issampling,jdbcType=NUMERIC}, #{fileid,jdbcType=VARCHAR}, #{updatetime,jdbcType=TIMESTAMP},
      #{updateuser,jdbcType=VARCHAR}, #{fkTasksource,jdbcType=VARCHAR}, #{taskstartdate,jdbcType=DATE},
      #{taskenddate,jdbcType=DATE}, #{taskrealstartdate,jdbcType=DATE}, #{taskrealenddate,jdbcType=DATE},
       #{fkmonitorpointtypecode,jdbcType=VARCHAR},#{taskendtime,jdbcType=TIMESTAMP},#{alarmstarttime,jdbcType=TIMESTAMP},
       #{overlevelcode,jdbcType=VARCHAR},#{recoverystatus,jdbcType=NUMERIC},#{recoverytime,jdbcType=TIMESTAMP}
      )
  </insert>
    <insert id="insertSelective"
            parameterType="com.tjpu.sp.model.environmentalprotection.taskmanagement.AlarmTaskDisposeManagementVO">
        insert into T_BAS_TaskDisposeManagement
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="pkTaskid != null">
                PK_TaskID,
            </if>
            <if test="fkPollutionid != null">
                FK_Pollutionid,
            </if>
            <if test="fkTasktype != null">
                FK_TaskType,
            </if>
            <if test="taskname != null">
                TaskName,
            </if>
            <if test="taskcreatetime != null">
                TaskCreateTime,
            </if>
            <if test="taskstatus != null">
                TaskStatus,
            </if>
            <if test="taskremark != null">
                TaskRemark,
            </if>
            <if test="fkProblemtype != null">
                FK_ProblemType,
            </if>
            <if test="feedbackresults != null">
                FeedbackResults,
            </if>
            <if test="issampling != null">
                IsSampling,
            </if>
            <if test="fileid != null">
                FileID,
            </if>
            <if test="updatetime != null">
                UpdateTime,
            </if>
            <if test="updateuser != null">
                UpdateUser,
            </if>
            <if test="fkTasksource != null">
                FK_TaskSource,
            </if>
            <if test="taskstartdate != null">
                TaskStartDate,
            </if>
            <if test="taskenddate != null">
                TaskEndDate,
            </if>
            <if test="taskrealstartdate != null">
                TaskRealStartDate,
            </if>
            <if test="taskrealenddate != null">
                TaskRealEndDate,
            </if>
            <if test="fkmonitorpointtypecode != null">
                FK_MonitorPointTypeCode,
            </if>
            <if test="taskendtime != null">
                TaskEndTime,
            </if>
            <if test="alarmstarttime != null">
                AlarmStartTime,
            </if>
            <if test="overlevelcode != null">
                OverLevelCode,
            </if>
            <if test="recoverystatus != null">
                RecoveryStatus,
            </if>
            <if test="recoverytime != null">
                RecoveryTime,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="pkTaskid != null">
                #{pkTaskid,jdbcType=VARCHAR},
            </if>
            <if test="fkPollutionid != null">
                #{fkPollutionid,jdbcType=VARCHAR},
            </if>
            <if test="fkTasktype != null">
                #{fkTasktype,jdbcType=VARCHAR},
            </if>
            <if test="taskname != null">
                #{taskname,jdbcType=VARCHAR},
            </if>
            <if test="taskcreatetime != null">
                #{taskcreatetime,jdbcType=TIMESTAMP},
            </if>
            <if test="taskstatus != null">
                #{taskstatus,jdbcType=NUMERIC},
            </if>
            <if test="taskremark != null">
                #{taskremark,jdbcType=VARCHAR},
            </if>
            <if test="fkProblemtype != null">
                #{fkProblemtype,jdbcType=VARCHAR},
            </if>
            <if test="feedbackresults != null">
                #{feedbackresults,jdbcType=VARCHAR},
            </if>
            <if test="issampling != null">
                #{issampling,jdbcType=NUMERIC},
            </if>
            <if test="fileid != null">
                #{fileid,jdbcType=VARCHAR},
            </if>
            <if test="updatetime != null">
                #{updatetime,jdbcType=TIMESTAMP},
            </if>
            <if test="updateuser != null">
                #{updateuser,jdbcType=VARCHAR},
            </if>
            <if test="fkTasksource != null">
                #{fkTasksource,jdbcType=VARCHAR},
            </if>
            <if test="taskstartdate != null">
                #{taskstartdate,jdbcType=DATE},
            </if>
            <if test="taskenddate != null">
                #{taskenddate,jdbcType=DATE},
            </if>
            <if test="taskrealstartdate != null">
                #{taskrealstartdate,jdbcType=DATE},
            </if>
            <if test="taskrealenddate != null">
                #{taskrealenddate,jdbcType=DATE},
            </if>
            <if test="fkmonitorpointtypecode != null">
                #{fkmonitorpointtypecode,jdbcType=VARCHAR},
            </if>
            <if test="taskendtime != null">
                #{taskendtime,jdbcType=TIMESTAMP},
            </if>
            <if test="alarmstarttime != null">
                #{alarmstarttime,jdbcType=TIMESTAMP},
            </if>
            <if test="overlevelcode != null">
                #{overlevelcode,jdbcType=VARCHAR},
            </if>
            <if test="recoverystatus != null">
                #{recoverystatus,jdbcType=NUMERIC},
            </if>
            <if test="recoverytime != null">
                #{recoverytime,jdbcType=TIMESTAMP},
            </if>
        </trim>
    </insert>
    <update id="updateByPrimaryKeySelective"
            parameterType="com.tjpu.sp.model.environmentalprotection.taskmanagement.AlarmTaskDisposeManagementVO">
        update T_BAS_TaskDisposeManagement
        <set>
            <if test="fkPollutionid != null">
                FK_Pollutionid = #{fkPollutionid,jdbcType=VARCHAR},
            </if>
            <if test="fkTasktype != null">
                FK_TaskType = #{fkTasktype,jdbcType=VARCHAR},
            </if>
            <if test="taskname != null">
                TaskName = #{taskname,jdbcType=VARCHAR},
            </if>
            <if test="taskcreatetime != null">
                TaskCreateTime = #{taskcreatetime,jdbcType=TIMESTAMP},
            </if>
            <if test="taskstatus != null">
                TaskStatus = #{taskstatus,jdbcType=NUMERIC},
            </if>
            <if test="taskremark != null">
                TaskRemark = #{taskremark,jdbcType=VARCHAR},
            </if>
            <if test="fkProblemtype != null">
                FK_ProblemType = #{fkProblemtype,jdbcType=VARCHAR},
            </if>
            <if test="feedbackresults != null">
                FeedbackResults = #{feedbackresults,jdbcType=VARCHAR},
            </if>
            <if test="issampling != null">
                IsSampling = #{issampling,jdbcType=NUMERIC},
            </if>
            <if test="fileid != null">
                FileID = #{fileid,jdbcType=VARCHAR},
            </if>
            <if test="updatetime != null">
                UpdateTime = #{updatetime,jdbcType=TIMESTAMP},
            </if>
            <if test="updateuser != null">
                UpdateUser = #{updateuser,jdbcType=VARCHAR},
            </if>
            <if test="fkTasksource != null">
                FK_TaskSource = #{fkTasksource,jdbcType=VARCHAR},
            </if>
            <if test="taskstartdate != null">
                TaskStartDate = #{taskstartdate,jdbcType=DATE},
            </if>
            <if test="taskenddate != null">
                TaskEndDate = #{taskenddate,jdbcType=DATE},
            </if>
            <if test="taskrealstartdate != null">
                TaskRealStartDate = #{taskrealstartdate,jdbcType=DATE},
            </if>
            <if test="taskrealenddate != null">
                TaskRealEndDate = #{taskrealenddate,jdbcType=DATE},
            </if>
            <if test="fkmonitorpointtypecode != null">
                FK_MonitorPointTypeCode = #{fkmonitorpointtypecode,jdbcType=VARCHAR},
            </if>
            <if test="taskendtime != null">
                TaskEndTime = #{taskendtime,jdbcType=TIMESTAMP},
            </if>
            <if test="alarmstarttime != null">
                AlarmStartTime = #{alarmstarttime,jdbcType=TIMESTAMP},
            </if>
            <if test="overlevelcode != null">
                OverLevelCode = #{overlevelcode,jdbcType=VARCHAR},
            </if>
        </set>
        where PK_TaskID = #{pkTaskid,jdbcType=VARCHAR}
    </update>
    <update id="updateByPrimaryKey"
            parameterType="com.tjpu.sp.model.environmentalprotection.taskmanagement.AlarmTaskDisposeManagementVO">
    update T_BAS_TaskDisposeManagement
    set FK_Pollutionid = #{fkPollutionid,jdbcType=VARCHAR},
      FK_TaskType = #{fkTasktype,jdbcType=VARCHAR},
      TaskName = #{taskname,jdbcType=VARCHAR},
      TaskCreateTime = #{taskcreatetime,jdbcType=TIMESTAMP},
      TaskStatus = #{taskstatus,jdbcType=NUMERIC},
      TaskRemark = #{taskremark,jdbcType=VARCHAR},
      FK_ProblemType = #{fkProblemtype,jdbcType=VARCHAR},
      FeedbackResults = #{feedbackresults,jdbcType=VARCHAR},
      IsSampling = #{issampling,jdbcType=NUMERIC},
      FileID = #{fileid,jdbcType=VARCHAR},
      UpdateTime = #{updatetime,jdbcType=TIMESTAMP},
      UpdateUser = #{updateuser,jdbcType=VARCHAR},
      FK_TaskSource = #{fkTasksource,jdbcType=VARCHAR},
      TaskStartDate = #{taskstartdate,jdbcType=DATE},
      TaskEndDate = #{taskenddate,jdbcType=DATE},
      TaskRealStartDate = #{taskrealstartdate,jdbcType=DATE},
      TaskRealEndDate = #{taskrealenddate,jdbcType=DATE},
      Disposer = #{disposer,jdbcType=VARCHAR},
      DisposalTime = #{disposaltime,jdbcType=VARCHAR},
      ReportingTime = #{reportingtime,jdbcType=VARCHAR},
       FK_MonitorPointTypeCode = #{fkmonitorpointtypecode,jdbcType=VARCHAR},
       TaskEndTime = #{taskendtime,jdbcType=TIMESTAMP},
       AlarmStartTime = #{alarmstarttime,jdbcType=TIMESTAMP},
        OverLevelCode = #{overlevelcode,jdbcType=VARCHAR},
       RecoveryStatus = #{recoverystatus,jdbcType=NUMERIC},
        RecoveryTime = #{recoverytime,jdbcType=TIMESTAMP}
    where PK_TaskID = #{pkTaskid,jdbcType=VARCHAR}
  </update>


    <!-- author:xsm description: 获取企业下排口的MN号  date: 2019/07/16 13:20-->
    <select id="getAllOutputMn" parameterType="map" resultType="map">
        SELECT datas.* FROM(
        SELECT T_BAS_GASOutPutInfo.FK_Pollutionid
        Pollutionid,T_BAS_Pollution.PollutionName,T_BAS_Pollution.ShorterName,T_BAS_DeviceStatus.DGIMN,T_BAS_GASOutPutInfo.OutPutName
        outputname,T_BAS_GASOutPutInfo.PK_ID outputid,T_BAS_GASOutPutInfo.FK_MonitorPointTypeCode type
        FROM
        T_BAS_GASOutPutInfo JOIN T_BAS_DeviceStatus ON T_BAS_GASOutPutInfo.DGIMN = T_BAS_DeviceStatus.DGIMN
        JOIN T_BAS_Pollution ON T_BAS_GASOutPutInfo.FK_PollutionID = T_BAS_Pollution.PK_PollutionID
        UNION ALL
        SELECT T_BAS_WaterOutputInfo.FK_Pollutionid
        Pollutionid,T_BAS_Pollution.PollutionName,T_BAS_Pollution.ShorterName,T_BAS_DeviceStatus.DGIMN,T_BAS_WaterOutputInfo.OutputName
        outputname,T_BAS_WaterOutputInfo.PK_ID outputid,'1' type
        FROM
        T_BAS_WaterOutputInfo JOIN T_BAS_DeviceStatus ON T_BAS_WaterOutputInfo.DGIMN = T_BAS_DeviceStatus.DGIMN
        JOIN T_BAS_Pollution ON T_BAS_WaterOutputInfo.FK_PollutionID = T_BAS_Pollution.PK_PollutionID
        WHERE (T_BAS_WaterOutputInfo.OutPutType !=3 or T_BAS_WaterOutputInfo.OutPutType is null)
        UNION ALL
        SELECT T_BAS_WaterOutputInfo.FK_Pollutionid
        Pollutionid,T_BAS_Pollution.PollutionName,T_BAS_Pollution.ShorterName,T_BAS_DeviceStatus.DGIMN,T_BAS_WaterOutputInfo.OutputName
        outputname,T_BAS_WaterOutputInfo.PK_ID outputid,'37' type
        FROM
        T_BAS_WaterOutputInfo JOIN T_BAS_DeviceStatus ON T_BAS_WaterOutputInfo.DGIMN = T_BAS_DeviceStatus.DGIMN
        JOIN T_BAS_Pollution ON T_BAS_WaterOutputInfo.FK_PollutionID = T_BAS_Pollution.PK_PollutionID
        WHERE T_BAS_WaterOutputInfo.OutPutType =3
        UNION ALL
        SELECT T_BAS_UnorganizedMonitorPointInfo.FK_Pollutionid
        Pollutionid,T_BAS_Pollution.PollutionName,T_BAS_Pollution.ShorterName,T_BAS_DeviceStatus.DGIMN,T_BAS_UnorganizedMonitorPointInfo.MonitorPointName
        outputname,T_BAS_UnorganizedMonitorPointInfo.PK_ID
        outputid,T_BAS_UnorganizedMonitorPointInfo.FK_MonitorPointTypeCode type
        FROM
        T_BAS_UnorganizedMonitorPointInfo JOIN T_BAS_DeviceStatus ON T_BAS_UnorganizedMonitorPointInfo.DGIMN =
        T_BAS_DeviceStatus.DGIMN
        JOIN T_BAS_Pollution ON T_BAS_UnorganizedMonitorPointInfo.FK_PollutionID = T_BAS_Pollution.PK_PollutionID
        )datas
        <trim prefix="where" prefixOverrides="AND|OR">
            <if test="pollutions != null and pollutions.size>0 ">
                and datas.Pollutionid in
                <foreach item="item" index="index" collection="pollutions"
                         open="(" separator="," close=")">
                    #{item}
                </foreach>
            </if>
            <if test="monitorpointtype!=null and monitorpointtype!='' ">
                and datas.type = #{monitorpointtype}
            </if>
            <if test="monitorpointtypes != null and monitorpointtypes.size>0 ">
                and datas.type in
                <foreach item="item" index="index" collection="monitorpointtypes"
                         open="(" separator="," close=")">
                    #{item}
                </foreach>
            </if>
            <if test="dgimns != null and dgimns.size>0 ">
                and datas.DGIMN in
                <foreach item="item" index="index" collection="dgimns"
                         open="(" separator="," close=")">
                    #{item}
                </foreach>
            </if>
            <if test="pollutionid!=null and pollutionid!='' ">
                and datas.Pollutionid = #{pollutionid}
            </if>
            <if test="pollutionname!=null and pollutionname!='' ">
                and datas.PollutionName like concat('%',#{pollutionname},'%')
            </if>
            <if test="dgimn!=null and dgimn!='' ">
                and datas.DGIMN = #{dgimn}
            </if>
        </trim>
        ORDER BY datas.Pollutionid
    </select>

    <select id="getZhiXingRen" parameterType="map" resultType="string">
        select
          User_Name
          from T_BAS_TaskFlowRecordInfo
          join (SELECT MAX
                ( TaskHandleTime ) TaskHandleTime
            FROM
                T_BAS_TaskFlowRecordInfo
            WHERE
                FK_TaskID=#{PK_TaskID}
                AND FK_TaskType = #{FK_TaskType}
                AND CurrentTaskStatus in ('转办','转办任务','待处理'))t on T_BAS_TaskFlowRecordInfo.TaskHandleTime=t.TaskHandleTime
          LEFT JOIN Base_UserInfo on Base_UserInfo.User_ID=T_BAS_TaskFlowRecordInfo.FK_TaskHandleUserID
          where
          FK_TaskID=#{PK_TaskID}
          AND FK_TaskType = #{FK_TaskType}
    </select>
    <select id="getFenPaiRen" parameterType="map" resultType="string">
        select User_Name from T_BAS_TaskFlowRecordInfo LEFT JOIN Base_UserInfo on Base_UserInfo.User_ID=T_BAS_TaskFlowRecordInfo.FK_TaskHandleUserID where T_BAS_TaskFlowRecordInfo.CurrentTaskStatus='分派任务' and  T_BAS_TaskFlowRecordInfo.FK_TaskType= #{FK_TaskType}  and FK_TaskID=#{PK_TaskID}
    </select>
    <select id="getFenPaiDate" parameterType="map" resultType="string">
        select convert (varchar(19),TaskHandleTime,120) TaskHandleTime  from T_BAS_TaskFlowRecordInfo  where T_BAS_TaskFlowRecordInfo.CurrentTaskStatus='分派任务' and  T_BAS_TaskFlowRecordInfo.FK_TaskType= #{FK_TaskType}  and FK_TaskID=#{PK_TaskID}
    </select>
    <select id="getRecordInfoDetail" parameterType="map" resultType="map">
        select User_Name username,convert (varchar(19),TaskHandleTime,120) taskhandletimestr,CurrentTaskStatus taskstatus,TaskComment from T_BAS_TaskFlowRecordInfo LEFT JOIN Base_UserInfo on Base_UserInfo.User_ID=T_BAS_TaskFlowRecordInfo.FK_TaskHandleUserID  where T_BAS_TaskFlowRecordInfo.FK_TaskType= #{FK_TaskType}  and FK_TaskID=#{PK_TaskID} order by TaskHandleTime
    </select>
    <!--<select id="getProblemType" resultType="string">
        select name from PUB_CODE_ProblemType
        <trim prefix="where" prefixOverrides="AND||OR">
            code in
            <if test="_parameter!=null and _parameter!='' ">
                <foreach collection="_parameter.split(',')" separator="," open="(" close=")" item="item">
                    #{item}
                </foreach>
            </if>
        </trim>
    </select>-->


    <!-- author:xsm description: 获取企业下排口监测的污染物  date: 2019/07/16 13:20-->
    <select id="getAllEntPollutants" resultType="map">
        SELECT DISTINCT PUB_CODE_PollutantFactor.Code,PUB_CODE_PollutantFactor.Name
        FROM
        PUB_CODE_PollutantFactor
        WHERE PUB_CODE_PollutantFactor.PollutantType in('1','22','2','37','40','30')
        AND  PUB_CODE_PollutantFactor.IsUsed = '1'
        ORDER BY PUB_CODE_PollutantFactor.Code
    </select>


    <!-- author:xsm description: 获取企业下排口监测的污染物  date: 2019/07/16 13:20-->
    <select id="getAllPollutants" parameterType="map" resultType="map">
        SELECT DISTINCT datas.* FROM(
        SELECT T_BAS_DeviceStatus.DGIMN,PUB_CODE_PollutantFactor.Code,PUB_CODE_PollutantFactor.Name
        FROM
        T_BAS_GASOutPutInfo JOIN T_BAS_DeviceStatus ON T_BAS_GASOutPutInfo.DGIMN = T_BAS_DeviceStatus.DGIMN
        JOIN T_BAS_Pollution ON T_BAS_GASOutPutInfo.FK_PollutionID = T_BAS_Pollution.PK_PollutionID
        JOIN T_BAS_GasOutPutPollutantSet ON T_BAS_GASOutPutInfo.PK_ID = T_BAS_GasOutPutPollutantSet.FK_GasOutPutID AND
        T_BAS_GASOutPutInfo.FK_PollutionID=T_BAS_GasOutPutPollutantSet.FK_PollutionID
        JOIN PUB_CODE_PollutantFactor ON T_BAS_GasOutPutPollutantSet.FK_PollutantCode = PUB_CODE_PollutantFactor.Code
        WHERE
        PUB_CODE_PollutantFactor.IsUsed = 1
        UNION ALL
        SELECT T_BAS_DeviceStatus.DGIMN,T_BAS_WaterOutputInfo.PK_ID
        outputid,PUB_CODE_PollutantFactor.Code,PUB_CODE_PollutantFactor.Name
        FROM
        T_BAS_WaterOutputInfo JOIN T_BAS_DeviceStatus ON T_BAS_WaterOutputInfo.DGIMN = T_BAS_DeviceStatus.DGIMN
        JOIN T_BAS_Pollution ON T_BAS_WaterOutputInfo.FK_PollutionID = T_BAS_Pollution.PK_PollutionID
        JOIN T_BAS_WaterOutPutPollutantSet ON T_BAS_WaterOutputInfo.PK_ID =
        T_BAS_WaterOutPutPollutantSet.FK_WaterOutPutID AND
        T_BAS_WaterOutputInfo.FK_PollutionID=T_BAS_WaterOutPutPollutantSet.FK_PollutionID
        JOIN PUB_CODE_PollutantFactor ON T_BAS_WaterOutPutPollutantSet.FK_PollutantCode = PUB_CODE_PollutantFactor.Code
        WHERE
        PUB_CODE_PollutantFactor.IsUsed = 1
        )datas
        <trim prefix="where" prefixOverrides="AND|OR">
            <if test="mnlist != null and mnlist.size>0 ">
                and datas.DGIMN in
                <foreach item="item" index="index" collection="mnlist"
                         open="(" separator="," close=")">
                    #{item}
                </foreach>
            </if>
        </trim>
        ORDER BY datas.DGIMN
    </select>


    <!-- author:xsm description: 根据自定义查询条件获取报警任务信息(有分派按钮权限用户） date: 2019/07/16 13:20-->
    <select id="getAllAlarmTaskInfoByParams" parameterType="map" resultType="map">
        SELECT
        <if test="pagesize!=null and pagesize!='' ">
            TOP ${pagesize}
        </if>
        *
        FROM
        (
        SELECT
        ROW_NUMBER ( ) OVER ( ORDER BY TaskStatus, CONVERT ( VARCHAR ( 19 ), TaskEndTime, 120 ) DESC ) AS RowNumber,*
        FROM
        (
        SELECT DISTINCT
        t1.PK_TaskID,
        t1.TaskStatus,
        t1.FK_Pollutionid,
        t1.FK_MonitorPointTypeCode,
        mt.Name monitorpointtypename,
        pointtable.monitorpointname,
        pointtable.Longitude,
        pointtable.Latitude,
        t_bas_devicestatus.AlarmLevel onlineAlarmLevel,
        t_bas_devicestatus.status onlinestatus,
        pointtable.MonitorPointCategory,
        case WHEN t1.OverLevelCode = '-1' THEN '超标' ELSE pcal.Name END overlevelname,
        case t1.TaskStatus when 0 then '待分派' when 1 then '待处理' when 2 then '处理中' when 3 then '已忽略' when 4 then '已完成' when 5 then '待审核' end
        TaskStatusName,
        pointtable.DGIMN,
        pointtable.pointname,
        pointtable.monitorpointid,
        pointtable.FK_Pollutionid pollutionid,
        pointtable.PollutionName,
        t1.RecoveryStatus,
        case WHEN t1.RecoveryStatus = 0 THEN '未恢复' WHEN t1.RecoveryStatus = 1 THEN '已恢复' END recoverystatusname,
        CONVERT (VARCHAR(19),t1.RecoveryTime,120) recoverytime,
        t1.FK_TaskType,
        CONVERT (VARCHAR(19),t1.TaskCreateTime,120) TaskCreateTime,
        CONVERT (VARCHAR(19),t1.AlarmStartTime,120) AlarmStartTime,
        CONVERT (VARCHAR(19),t1.TaskEndTime,120) TaskEndTime,
        mt.Category,
        datediff( minute, t1.AlarmStartTime, t1.TaskEndTime) overtimenum,
        CASE t1.TaskStatus WHEN 0 then datediff( minute, t1.TaskCreateTime, GETDATE() ) else 0 end unallocatednum
        FROM (select
        ttwo.* from
        T_BAS_TaskDisposeManagement ttwo
        where ttwo.TaskStatus != 0
        <if test="tasktype !=null">
            AND ttwo.FK_TaskType = #{tasktype}
        </if>
        <if test="hasauthor!=null and hasauthor=='0'.toString() ">
            and ttwo.PK_TaskID IN (SELECT distinct FK_TaskID FROM T_BAS_TaskFlowRecordInfo
            WHERE T_BAS_TaskFlowRecordInfo.FK_TaskHandleUserID = #{feedbackuserid}
            <if test="tasktype !=null">
                AND T_BAS_TaskFlowRecordInfo.FK_TaskType = #{tasktype}
            </if>
            <if test="currenttaskstatuss !=null and currenttaskstatuss.size()>0">
                and   T_BAS_TaskFlowRecordInfo.currenttaskstatus in
                <foreach collection="currenttaskstatuss" separator="," open="(" close=")" item="item">
                    #{item}
                </foreach>
            </if>
            )
        </if>
        <if test="hasauthor!=null and hasauthor=='1'.toString() ">
            union
            select
            tone.* from
            T_BAS_TaskDisposeManagement tone
            where tone.TaskStatus = 0
            <if test="tasktype !=null">
                AND tone.FK_TaskType = #{tasktype}
            </if>
        </if>
        ) t1
        <if test="datauserid != null and datauserid !=''">
            JOIN (
            SELECT
            FK_MonitorPointID
            FROM
            T_BAS_UserMonitorPointRelationData
            WHERE
            T_BAS_UserMonitorPointRelationData.FK_UserID = #{datauserid}
            GROUP BY
            FK_MonitorPointID
            ) relation ON t1.FK_Pollutionid = relation.FK_MonitorPointID
        </if>
        JOIN (
        SELECT
        p.PollutionName,
        t2.PK_ID monitorpointid,
        t2.OutputName pointname,
        t2.DGIMN,
        p.ShorterName+ '_' + t2.OutputName monitorpointname,
        t2.FK_Pollutionid,
        '1' monitorpointtype,
        t2.OutputLongitude Longitude,
        t2.OutputLatitude Latitude,
        NULL MonitorPointCategory,
        p.pk_pollutionid as pk_pollutionid
        FROM
        T_BAS_WaterOutputInfo t2
        LEFT JOIN T_BAS_Pollution p ON t2.FK_Pollutionid = p.PK_PollutionID
        WHERE
        ( t2.OutPutType != 3 OR t2.OutPutType IS NULL ) UNION
        SELECT
        p.PollutionName,
        t3.PK_ID monitorpointid,
        t3.OutputName pointname,
        t3.DGIMN,
        p.ShorterName+ '_' + t3.OutputName monitorpointname,
        t3.FK_Pollutionid,
        '37' monitorpointtype,
        t3.OutputLongitude Longitude,
        t3.OutputLatitude Latitude,
        NULL MonitorPointCategory,
        p.pk_pollutionid as pk_pollutionid
        FROM
        T_BAS_WaterOutputInfo t3
        LEFT JOIN T_BAS_Pollution p ON t3.FK_Pollutionid = p.PK_PollutionID
        WHERE
        t3.OutPutType = 3 UNION
        SELECT
        p.PollutionName,
        t4.PK_ID monitorpointid,
        t4.OutputName pointname,
        t4.DGIMN,
        p.ShorterName+ '_' + t4.OutputName monitorpointname,
        t4.FK_Pollutionid,
        t4.FK_MonitorPointTypeCode monitorpointtype,
        t4.OutputLongitude Longitude,
        t4.OutputLatitude Latitude,
        NULL MonitorPointCategory,
        p.pk_pollutionid as pk_pollutionid
        FROM
        T_BAS_GASOutPutInfo t4
        LEFT JOIN T_BAS_Pollution p ON t4.FK_Pollutionid = p.PK_PollutionID UNION
        SELECT
        p.PollutionName,
        t5.PK_ID monitorpointid,
        t5.MonitorPointName pointname,
        t5.DGIMN,
        p.ShorterName+ '_' + t5.MonitorPointName monitorpointname,
        t5.FK_Pollutionid,
        t5.FK_MonitorPointTypeCode monitorpointtype,
        t5.Longitude,
        t5.Latitude,
        NULL MonitorPointCategory,
        p.pk_pollutionid as pk_pollutionid
        FROM
        T_BAS_UnorganizedMonitorPointInfo t5
        LEFT JOIN T_BAS_Pollution p ON t5.FK_Pollutionid = p.PK_PollutionID
        WHERE
        t5.FK_MonitorPointTypeCode IN ( 40, 41 ) UNION
        SELECT
        t6.MonitorPointName PollutionName,
        t6.PK_MonitorPointID monitorpointid,
        t6.MonitorPointName pointname,
        t6.DGIMN,
        t6.MonitorPointName monitorpointname,
        '' FK_Pollutionid,
        t6.FK_MonitorPointTypeCode monitorpointtype,
        t6.Longitude,
        t6.Latitude,
        t6.MonitorPointCategory,
        '' as pk_pollutionid
        FROM
        T_BAS_OtherMonitorPoint t6
        WHERE
        t6.FK_MonitorPointTypeCode != 52 UNION
        SELECT
        tsz.MonitorPointName PollutionName,
        tsz.PK_WaterStationID monitorpointid,
        tsz.MonitorPointName pointname,
        tsz.DGIMN,
        tsz.MonitorPointName monitorpointname,
        '' FK_Pollutionid,
        '6' monitorpointtype,
        tsz.Longitude,
        tsz.Latitude,
        NULL MonitorPointCategory,
        '' as pk_pollutionid
        FROM
        T_BAS_WaterStationInfo tsz UNION
        SELECT
        tair.MonitorPointName PollutionName,
        tair.PK_AirID monitorpointid,
        tair.MonitorPointName pointname,
        tair.DGIMN,
        tair.MonitorPointName monitorpointname,
        '' FK_Pollutionid,
        '5' monitorpointtype,
        tair.Longitude,
        tair.Latitude,
        NULL MonitorPointCategory,
        '' as pk_pollutionid
        FROM
        T_BAS_AirMonitorStation tair
        ) pointtable ON t1.FK_Pollutionid = pointtable.monitorpointid AND t1.FK_MonitorPointTypeCode =
        pointtable.monitorpointtype
        LEFT JOIN PUB_CODE_MonitorPointType mt ON t1.FK_MonitorPointTypeCode = mt.Code
        left join PUB_CODE_AlarmLevel pcal on t1.OverLevelCode =pcal.Code
        left join t_bas_devicestatus  ON pointtable.DGIMN = t_bas_devicestatus.dgimn
        <if test="(showcurrentuser !=null and showcurrentuser == 1) or (csstatus !=null and csstatus == 1) or (isAudit != null and isAudit == 1)">
            left JOIN T_BAS_TaskFlowRecordInfo recordInfo ON recordInfo.FK_TaskID = t1.PK_TaskID
        </if>
        <trim prefix="where" prefixOverrides="AND|OR">
            <if test="showcurrentuser !=null and showcurrentuser == 1 ">
                AND recordInfo.FK_TaskHandleUserID = #{userid}
            </if>
            <if test="csstatus !=null and csstatus == 1 ">
                AND recordInfo.CurrentTaskStatus in ('抄送','抄送已读')
            </if>
            <if test="currentstatus != null and currentstatus =='1'.toString">
                and t1.PK_TaskID in(
                SELECT DISTINCT
                tt.FK_TaskID
                FROM
                T_BAS_TaskFlowRecordInfo tt JOIN
                (SELECT
                fk_taskid,
                MAX (TaskHandleTime) TaskHandleTime
                FROM
                T_BAS_TaskFlowRecordInfo t
                WHERE
                CurrentTaskStatus IN ('待处理', '转办')
                and TaskComment is null
                GROUP BY
                t.FK_TaskID) ttt ON tt.FK_TaskID = ttt.fk_taskid AND
                tt.TaskHandleTime = ttt.TaskHandleTime and
                FK_TaskHandleUserID =#{feedbackuserid}
                )
            </if>
            <if test="currentstatus != null and currentstatus =='2'.toString">
                and t1.PK_TaskID in(
                SELECT DISTINCT
                tt.FK_TaskID
                FROM
                T_BAS_TaskFlowRecordInfo tt JOIN
                (SELECT
                fk_taskid,
                MAX (TaskHandleTime) TaskHandleTime
                FROM
                T_BAS_TaskFlowRecordInfo t
                WHERE
                CurrentTaskStatus IN ('处理中', '转办')
                and TaskComment is null
                GROUP BY
                t.FK_TaskID) ttt ON tt.FK_TaskID = ttt.fk_taskid AND
                tt.TaskHandleTime = ttt.TaskHandleTime and
                FK_TaskHandleUserID =#{feedbackuserid}
                )
            </if>
            <if test="currentstatus != null and currentstatus =='3'.toString">
                and t1.PK_TaskID in(
                SELECT
                FK_TaskID
                FROM
                T_BAS_TaskFlowRecordInfo
                where FK_TaskHandleUserID =#{feedbackuserid} and CurrentTaskStatus in ('抄送','抄送已读')
                and fk_taskid not in (select distinct fk_taskid from T_BAS_TaskFlowRecordInfo record where CurrentTaskStatus
                in ('抄送','抄送已读')
                and not exists (select fk_taskid,MAX ( TaskHandleTime ) TaskHandleTime from T_BAS_TaskFlowRecordInfo t where
                t.FK_TaskHandleUserID =#{feedbackuserid} and t.CurrentTaskStatus in ('抄送','抄送已读') and record.fk_taskid=t.fk_taskid and
                record.TaskHandleTime=t.TaskHandleTime GROUP BY FK_TaskID )
                )
                )
            </if>
            <if test="currentstatus != null and currentstatus =='4'.toString">
                and t1.PK_TaskID in(
                SELECT DISTINCT
                tt.FK_TaskID
                FROM
                T_BAS_TaskFlowRecordInfo tt JOIN
                (SELECT
                fk_taskid,
                MAX (TaskHandleTime) TaskHandleTime
                FROM
                T_BAS_TaskFlowRecordInfo t
                WHERE
                CurrentTaskStatus IN ('审核')
                GROUP BY
                t.FK_TaskID) ttt ON tt.FK_TaskID = ttt.fk_taskid AND
                tt.TaskHandleTime = ttt.TaskHandleTime and
                FK_TaskHandleUserID =#{feedbackuserid}
                )
            </if>
            <if test="monitorpointid != null and monitorpointid !=''">
                AND pointtable.monitorpointid= #{monitorpointid}
            </if>

            <if test="pollutionid != null and pollutionid !=''">
                AND pointtable.pk_pollutionid= #{pollutionid}
            </if>
            <if test="monitorpointtype != null and monitorpointtype !=''">
                AND t1.FK_MonitorPointTypeCode= #{monitorpointtype}
            </if>
            <if test="taskid != null and taskid !=''">
                AND t1.PK_TaskID= #{taskid}
            </if>
            <if test="dgimn != null and dgimn !=''">
                AND pointtable.DGIMN= #{dgimn}
            </if>
            <if test="tasktype !=null">
                AND t1.FK_TaskType = #{tasktype}
            </if>
            <if test="searchname!=null and searchname!='' ">
                and pointtable.PollutionName like concat('%',#{searchname},'%')
            </if>
            <if test="pollutionname!=null and pollutionname!='' ">
                and pointtable.PollutionName like concat('%',#{pollutionname},'%')
            </if>
            <if test="monitorpointname!=null and monitorpointname!='' ">
                and pointtable.monitorpointname like concat('%',#{monitorpointname},'%')
            </if>
            <if test="starttime != null and starttime !=''">
                <choose>
                    <when test="starttime.length()==13 ">
                        AND CONVERT (VARCHAR (13),t1.TaskCreateTime,120) >= #{starttime}
                    </when>
                    <otherwise>
                        AND CONVERT (VARCHAR (10),t1.TaskCreateTime,120) >= #{starttime}
                    </otherwise>
                </choose>
            </if>
            <if test="endtime != null and endtime !=''">
                <choose>
                    <when test="endtime.length()==13 ">
                        AND CONVERT (VARCHAR (13),t1.TaskCreateTime,120) <![CDATA[<=]]> #{endtime}
                    </when>
                    <otherwise>
                        AND CONVERT (VARCHAR (10),t1.TaskCreateTime,120) <![CDATA[<=]]> #{endtime}
                    </otherwise>
                </choose>
            </if>
            <if test="taskstarttime != null and taskstarttime !=''">
                AND CONVERT (VARCHAR (19),t1.TaskCreateTime,120) >= #{taskstarttime}
            </if>
            <if test="taskendtime != null and taskendtime !=''">
                AND CONVERT (VARCHAR (19),t1.TaskCreateTime,120) <![CDATA[<=]]> #{taskendtime}
            </if>
            <if test="monitorpointtypes != null and monitorpointtypes.size>0 ">
                and t1.FK_MonitorPointTypeCode in
                <foreach item="item" index="index" collection="monitorpointtypes"
                         open="(" separator="," close=")">
                    #{item}
                </foreach>
            </if>
            <if test="recoverystatuslist != null and recoverystatuslist.size>0 ">
                and t1.RecoveryStatus in
                <foreach item="item" index="index" collection="recoverystatuslist"
                         open="(" separator="," close=")">
                    #{item}
                </foreach>
            </if>
            <if test="tasktypes != null and tasktypes.size>0 ">
                and t1.FK_TaskType in
                <foreach item="item" index="index" collection="tasktypes"
                         open="(" separator="," close=")">
                    #{item}
                </foreach>
            </if>
            <if test="statuslist != null and statuslist.size>0 ">
                and (t1.TaskStatus in
                <foreach item="item" index="index" collection="statuslist"
                         open="(" separator="," close=")">
                    #{item}
                </foreach>
                 <if test="isAudit != null and isAudit == 1">
                     or (recordInfo.CurrentTaskStatus  = '审核' and TaskStatus IN (2,4) AND recordInfo.FK_TaskHandleUserID = #{userid})
                </if>

            )
            </if>

            <if test="!(statuslist != null and statuslist.size>0) and isAudit != null and isAudit == 1">
                    and recordInfo.CurrentTaskStatus  = '审核' and TaskStatus IN (2,4) AND recordInfo.FK_TaskHandleUserID = #{userid}
            </if>
        </trim>
        ) t
        ) AS A
        <if test="pagesize!=null and pagesize!='' ">
            WHERE RowNumber > ${(pagenum-1)*pagesize}
        </if>
        ORDER BY A.TaskStatus,CONVERT (VARCHAR (19),A.TaskEndTime,120) DESC
    </select>

    <!-- author:xsm description: 根据自定义查询条件获取视频报警任务信息(有分派按钮权限用户） date: 2019/07/16 13:20-->
    <select id="getAllVideoAlarmTaskByParamForHome" parameterType="map" resultType="map">
        SELECT
        distinct
        t1.PK_TaskID,
        t1.TaskStatus,
        t1.FK_Pollutionid,
        T_BAS_VideoCamera.FK_MonitorPointTypeCode,
        T_BAS_VideoCamera.VedioCameraName monitorpointname,
        case t1.TaskStatus when 0 then '待分派' when 1 then '待处理' when 2 then '处理中' when 3 then '已忽略' when 4 then '已完成' end
        TaskStatusName,
        T_BAS_VideoCamera.VedioCameraName pointname,
        t1.FK_Pollutionid monitorpointid,
        T_BAS_Pollution.PollutionName,
        T_BAS_Pollution.PK_Pollutionid pollutionid,
        t1.FK_TaskType,
        PUB_CODE_VedioAlarmType.Name pollutantname,
        CONVERT (VARCHAR(19),t7.TaskHandleTime,120) assignmenttime,
        CONVERT (VARCHAR(19),t8.TaskHandleTime,120) completetime,
        CONVERT (VARCHAR(19),t1.TaskCreateTime,120) TaskCreateTime,
        CONVERT (VARCHAR(19),t1.AlarmStartTime,120) AlarmStartTime,
        CONVERT (VARCHAR(19),t1.TaskEndTime,120) TaskEndTime,
        datediff( minute, t1.AlarmStartTime, t1.TaskEndTime) overtimenum
        FROM (select
        ttwo.* from
        T_BAS_TaskDisposeManagement ttwo
        where ttwo.TaskStatus != 0
        <if test="tasktype !=null">
            AND ttwo.FK_TaskType = #{tasktype}
        </if>
        <if test="hasauthor!=null and hasauthor=='0'.toString() ">
            and ttwo.PK_TaskID IN (SELECT distinct FK_TaskID FROM T_BAS_TaskFlowRecordInfo
            WHERE T_BAS_TaskFlowRecordInfo.FK_TaskHandleUserID = #{feedbackuserid}
            <if test="tasktype !=null">
                AND T_BAS_TaskFlowRecordInfo.FK_TaskType = #{tasktype}
            </if>
            )
        </if>
        <if test="hasauthor!=null and hasauthor=='1'.toString() ">
            union
            select
            tone.* from
            T_BAS_TaskDisposeManagement tone
            where tone.TaskStatus = 0
            <if test="tasktype !=null">
                AND tone.FK_TaskType = #{tasktype}
            </if>
        </if>
        ) t1
        join T_BAS_VideoCamera on t1.FK_Pollutionid = T_BAS_VideoCamera.PK_VedioCameraID
        join T_BAS_MonitorTaskRelation on t1.PK_TaskID = T_BAS_MonitorTaskRelation.FK_TaskID
        left JOIN T_AQ_MonitoringAlarmRecord ON T_AQ_MonitoringAlarmRecord.FK_VedioCameraID=
        T_BAS_VideoCamera.PK_VedioCameraID AND T_BAS_MonitorTaskRelation.FK_MonitorAlarmID
        =T_AQ_MonitoringAlarmRecord.PK_ID
        LEFT JOIN PUB_CODE_VedioAlarmType ON PUB_CODE_VedioAlarmType.code=
        T_AQ_MonitoringAlarmRecord.FK_VedioAlarmTypeCode
        LEFT JOIN T_BAS_Pollution ON T_AQ_MonitoringAlarmRecord.FK_PollutionID = T_BAS_Pollution.PK_PollutionID
        LEFT JOIN (SELECT * FROM T_BAS_TaskFlowRecordInfo where T_BAS_TaskFlowRecordInfo.CurrentTaskStatus = '分派任务') t7
        on t7.FK_TaskID = t1.PK_TaskID AND t7.FK_TaskType = t1.FK_TaskType
        LEFT JOIN (SELECT * FROM T_BAS_TaskFlowRecordInfo where T_BAS_TaskFlowRecordInfo.CurrentTaskStatus in(
        '反馈信息','忽略任务')) t8 on t8.FK_TaskID = t1.PK_TaskID AND t8.FK_TaskType = t1.FK_TaskType
        <trim prefix="where" prefixOverrides="AND|OR">
            <if test="monitorpointid != null and monitorpointid !=''">
                AND pointtable.monitorpointid= #{monitorpointid}
            </if>
            <if test="taskid != null and taskid !=''">
                AND t1.PK_TaskID= #{taskid}
            </if>
            <if test="dgimn != null and dgimn !=''">
                AND pointtable.DGIMN= #{dgimn}
            </if>
            <if test="tasktype !=null">
                AND t1.FK_TaskType = #{tasktype}
            </if>
            <if test="searchname!=null and searchname!='' ">
                and T_BAS_VideoCamera.VedioCameraName like concat('%',#{searchname},'%')
            </if>
            <if test="starttime != null and starttime !=''">
                AND CONVERT (VARCHAR (10),t1.TaskCreateTime,120) >= #{starttime}
            </if>
            <if test="endtime != null and endtime !=''">
                AND CONVERT (VARCHAR (10),t1.TaskCreateTime,120) <![CDATA[<=]]> #{endtime}
            </if>
            <if test="taskstarttime != null and taskstarttime !=''">
                AND CONVERT (VARCHAR (19),t1.TaskCreateTime,120) >= #{taskstarttime}
            </if>
            <if test="taskendtime != null and taskendtime !=''">
                AND CONVERT (VARCHAR (19),t1.TaskCreateTime,120) <![CDATA[<=]]> #{taskendtime}
            </if>
            <if test="tasktypes != null and tasktypes.size>0 ">
                and t1.FK_TaskType in
                <foreach item="item" index="index" collection="tasktypes"
                         open="(" separator="," close=")">
                    #{item}
                </foreach>
            </if>
            <if test="statuslist != null and statuslist.size>0 ">
                and t1.TaskStatus in
                <foreach item="item" index="index" collection="statuslist"
                         open="(" separator="," close=")">
                    #{item}
                </foreach>
            </if>
        </trim>
    </select>

    <!-- author:xsm description: 根据任务ID获取任务流程信息 date: 2019/07/16 13:20-->
    <select id="getAllTaskFlowRecordInfoByParams" parameterType="map" resultType="map">
        SELECT
        t1.PK_TaskID,
        t1.TaskStatus,
        t1.FK_TaskType,
        t2.CurrentTaskStatus,
        t2.FK_TaskHandleUserID,
        t2.TaskComment,
        t3.User_Name,
        CONVERT (VARCHAR(19),t2.TaskHandleTime,120) TaskHandleTime
        FROM
        T_BAS_TaskDisposeManagement t1 JOIN
        T_BAS_TaskFlowRecordInfo t2 ON t1.PK_TaskID = t2.FK_TaskID AND t1.FK_TaskType =t2.FK_TaskType
        LEFT JOIN Base_UserInfo t3 ON t2.FK_TaskHandleUserID = t3.User_ID
        <trim prefix="where" prefixOverrides="AND|OR">
            and t2.TaskComment is null
            <if test="tasktype !=null">
                AND t1.FK_TaskType = #{tasktype}
            </if>
            <if test="taskid != null and taskid !=''">
                AND t1.PK_TaskID = #{taskid}
            </if>
            <if test="taskids != null and taskids.size>0 ">
                and t1.PK_TaskID in
                <foreach item="item" index="index" collection="taskids"
                         open="(" separator="," close=")">
                    #{item}
                </foreach>
            </if>
        </trim>
        ORDER BY t1.TaskStatus,t1.TaskCreateTime
    </select>


    <!-- author:xsm description: 根据任务ID获取报警污染物信息 date: 2021/03/18 13:20-->
    <select id="getAlarmPollutantInfoByParamMap" parameterType="map" resultType="map">
        SELECT
        t2.PK_TaskID,
        t1.AlarmType,
        t3.Code,
        t3.Name
        FROM
        T_BAS_TaskAlarmPollutantInfo t1 JOIN
        T_BAS_TaskDisposeManagement t2 ON t2.PK_TaskID = t1.FK_TaskID AND t1.FK_TaskType =t2.FK_TaskType
        LEFT JOIN PUB_CODE_PollutantFactor t3 ON t1.FK_PolluantCode = t3.Code AND t2.FK_MonitorPointTypeCode
        =t3.pollutanttype
        <trim prefix="where" prefixOverrides="AND|OR">
            <if test="tasktype !=null">
                AND t1.FK_TaskType = #{tasktype}
            </if>
            <if test="taskids != null and taskids.size>0 ">
                and t1.FK_TaskID in
                <foreach item="item" index="index" collection="taskids"
                         open="(" separator="," close=")">
                    #{item}
                </foreach>
            </if>
        </trim>
    </select>


    <!-- author:xsm description: 根据自定义查询条件获取报警任务处理信息 date: 2019/07/16 13:20-->
    <select id="getAllAlarmTaskInfoCountByParams" resultType="Long">
        SELECT
        COUNT (DISTINCT PK_TaskID) num
        FROM (select
        ttwo.* from
        T_BAS_TaskDisposeManagement ttwo
        where ttwo.TaskStatus != 0
        <if test="tasktype !=null">
            AND ttwo.FK_TaskType = #{tasktype}
        </if>
        <if test="hasauthor!=null and hasauthor=='0'.toString() ">
            and ttwo.PK_TaskID IN (
            SELECT
                distinct
                T_BAS_TaskFlowRecordInfo.FK_TaskID
            FROM T_BAS_TaskFlowRecordInfo
            WHERE T_BAS_TaskFlowRecordInfo.FK_TaskHandleUserID = #{feedbackuserid}
            <if test="tasktype !=null">
                AND T_BAS_TaskFlowRecordInfo.FK_TaskType = #{tasktype}
            </if>
            <!--当前任务状态-->
            <if test="currenttaskstatuss !=null and currenttaskstatuss.size()>0">
                and   T_BAS_TaskFlowRecordInfo.currenttaskstatus in
                <foreach collection="currenttaskstatuss" separator="," open="(" close=")" item="item">
                    #{item}
                </foreach>
            </if>



            )
        </if>
        <if test="hasauthor!=null and hasauthor=='1'.toString() ">
            union
            select
            tone.* from
            T_BAS_TaskDisposeManagement tone
            where tone.TaskStatus = 0
            <if test="tasktype !=null">
                AND tone.FK_TaskType = #{tasktype}
            </if>
        </if>
        ) t1
        <if test="datauserid != null and datauserid !=''">
            JOIN (
            SELECT
            FK_MonitorPointID
            FROM
            T_BAS_UserMonitorPointRelationData
            WHERE
            T_BAS_UserMonitorPointRelationData.FK_UserID = #{datauserid}
            GROUP BY
            FK_MonitorPointID
            ) relation ON t1.FK_Pollutionid = relation.FK_MonitorPointID
        </if>
        JOIN (
        SELECT
        p.PollutionName,
        t2.PK_ID monitorpointid,
        t2.OutputName pointname,
        t2.DGIMN,
        p.ShorterName+ '_' + t2.OutputName monitorpointname,
        t2.FK_Pollutionid,
        '1' monitorpointtype,
        p.pk_pollutionid as pk_pollutionid
        FROM
        T_BAS_WaterOutputInfo t2
        LEFT JOIN T_BAS_Pollution p ON t2.FK_Pollutionid = p.PK_PollutionID
        WHERE
        ( t2.OutPutType != 3 OR t2.OutPutType IS NULL ) UNION
        SELECT
        p.PollutionName,
        t3.PK_ID monitorpointid,
        t3.OutputName pointname,
        t3.DGIMN,
        p.ShorterName+ '_' + t3.OutputName monitorpointname,
        t3.FK_Pollutionid,
        '37' monitorpointtype,
        p.pk_pollutionid as pk_pollutionid
        FROM
        T_BAS_WaterOutputInfo t3
        LEFT JOIN T_BAS_Pollution p ON t3.FK_Pollutionid = p.PK_PollutionID
        WHERE
        t3.OutPutType = 3 UNION
        SELECT
        p.PollutionName,
        t4.PK_ID monitorpointid,
        t4.OutputName pointname,
        t4.DGIMN,
        p.ShorterName+ '_' + t4.OutputName monitorpointname,
        t4.FK_Pollutionid,
        t4.FK_MonitorPointTypeCode monitorpointtype,
        p.pk_pollutionid as pk_pollutionid
        FROM
        T_BAS_GASOutPutInfo t4
        LEFT JOIN T_BAS_Pollution p ON t4.FK_Pollutionid = p.PK_PollutionID UNION
        SELECT
        p.PollutionName,
        t5.PK_ID monitorpointid,
        t5.MonitorPointName pointname,
        t5.DGIMN,
        p.ShorterName+ '_' + t5.MonitorPointName monitorpointname,
        t5.FK_Pollutionid,
        t5.FK_MonitorPointTypeCode monitorpointtype,
        p.pk_pollutionid as pk_pollutionid
        FROM
        T_BAS_UnorganizedMonitorPointInfo t5
        LEFT JOIN T_BAS_Pollution p ON t5.FK_Pollutionid = p.PK_PollutionID
        WHERE
        t5.FK_MonitorPointTypeCode IN ( 40, 41 ) UNION
        SELECT
        t6.MonitorPointName PollutionName,
        t6.PK_MonitorPointID monitorpointid,
        t6.MonitorPointName pointname,
        t6.DGIMN,
        t6.MonitorPointName monitorpointname,
        '' FK_Pollutionid,
        t6.FK_MonitorPointTypeCode monitorpointtype,
        '' as pk_pollutionid
        FROM
        T_BAS_OtherMonitorPoint t6
        WHERE
        t6.FK_MonitorPointTypeCode != 52 UNION
        SELECT
        tsz.MonitorPointName PollutionName,
        tsz.PK_WaterStationID monitorpointid,
        tsz.MonitorPointName pointname,
        tsz.DGIMN,
        tsz.MonitorPointName monitorpointname,
        '' FK_Pollutionid,
        '6' monitorpointtype,
        '' as pk_pollutionid
        FROM
        T_BAS_WaterStationInfo tsz UNION
        SELECT
        tair.MonitorPointName PollutionName,
        tair.PK_AirID monitorpointid,
        tair.MonitorPointName pointname,
        tair.DGIMN,
        tair.MonitorPointName monitorpointname,
        '' FK_Pollutionid,
        '5' monitorpointtype,
        '' as pk_pollutionid
        FROM
        T_BAS_AirMonitorStation tair
        ) pointtable ON t1.FK_Pollutionid = pointtable.monitorpointid AND t1.FK_MonitorPointTypeCode =
        pointtable.monitorpointtype
        LEFT JOIN PUB_CODE_MonitorPointType mt ON t1.FK_MonitorPointTypeCode = mt.Code
        <if test="(showcurrentuser !=null and showcurrentuser == 1) or (csstatus !=null and csstatus == 1)  or (isAudit != null and isAudit == 1)">
            JOIN T_BAS_TaskFlowRecordInfo recordInfo ON recordInfo.FK_TaskID = t1.PK_TaskID
        </if>
        <trim prefix="where" prefixOverrides="AND|OR">
            <if test="showcurrentuser !=null and showcurrentuser == 1 ">
                AND recordInfo.FK_TaskHandleUserID = #{userid}
            </if>
            <if test="csstatus !=null and csstatus == 1 ">
                AND recordInfo.CurrentTaskStatus in ('抄送','抄送已读')
            </if>
            <if test="currentstatus != null and currentstatus =='1'.toString">
                and t1.PK_TaskID in(
                SELECT DISTINCT
                tt.FK_TaskID
                FROM
                T_BAS_TaskFlowRecordInfo tt JOIN
                (SELECT
                fk_taskid,
                MAX (TaskHandleTime) TaskHandleTime
                FROM
                T_BAS_TaskFlowRecordInfo t
                WHERE
                CurrentTaskStatus IN ('待处理', '转办')
                and TaskComment is null
                GROUP BY
                t.FK_TaskID) ttt ON tt.FK_TaskID = ttt.fk_taskid AND
                tt.TaskHandleTime = ttt.TaskHandleTime and
                FK_TaskHandleUserID =#{feedbackuserid}
                )
            </if>
            <if test="currentstatus != null and currentstatus =='2'.toString">
                and t1.PK_TaskID in(
                SELECT DISTINCT
                tt.FK_TaskID
                FROM
                T_BAS_TaskFlowRecordInfo tt JOIN
                (SELECT
                fk_taskid,
                MAX (TaskHandleTime) TaskHandleTime
                FROM
                T_BAS_TaskFlowRecordInfo t
                WHERE
                CurrentTaskStatus IN ('处理中', '转办')
                and TaskComment is null
                GROUP BY
                t.FK_TaskID) ttt ON tt.FK_TaskID = ttt.fk_taskid AND
                tt.TaskHandleTime = ttt.TaskHandleTime and
                FK_TaskHandleUserID =#{feedbackuserid}
                )
            </if>
            <if test="currentstatus != null and currentstatus =='3'.toString">
                and t1.PK_TaskID in(
                SELECT
                FK_TaskID
                FROM
                T_BAS_TaskFlowRecordInfo
                where FK_TaskHandleUserID =#{feedbackuserid} and CurrentTaskStatus in ('抄送','抄送已读')
                and fk_taskid not in (select distinct fk_taskid from T_BAS_TaskFlowRecordInfo record where CurrentTaskStatus
                in ('抄送','抄送已读')
                and not exists (select fk_taskid,MAX ( TaskHandleTime ) TaskHandleTime from T_BAS_TaskFlowRecordInfo t where
                t.FK_TaskHandleUserID =#{feedbackuserid} and t.CurrentTaskStatus in ('抄送','抄送已读') and record.fk_taskid=t.fk_taskid and
                record.TaskHandleTime=t.TaskHandleTime GROUP BY FK_TaskID )
                )
                )
            </if>
            <if test="currentstatus != null and currentstatus =='4'.toString">
                and t1.PK_TaskID in(
                SELECT DISTINCT
                tt.FK_TaskID
                FROM
                T_BAS_TaskFlowRecordInfo tt JOIN
                (SELECT
                fk_taskid,
                MAX (TaskHandleTime) TaskHandleTime
                FROM
                T_BAS_TaskFlowRecordInfo t
                WHERE
                CurrentTaskStatus IN ('审核')
                GROUP BY
                t.FK_TaskID) ttt ON tt.FK_TaskID = ttt.fk_taskid AND
                tt.TaskHandleTime = ttt.TaskHandleTime and
                FK_TaskHandleUserID =#{feedbackuserid}
                )
            </if>
            <if test="monitorpointid != null and monitorpointid !=''">
                AND pointtable.monitorpointid= #{monitorpointid}
            </if>
             <if test="pollutionid != null and pollutionid !=''">
                AND pointtable.pk_pollutionid= #{pollutionid}
            </if>
            <if test="monitorpointtype != null and monitorpointtype !=''">
                AND t1.FK_MonitorPointTypeCode= #{monitorpointtype}
            </if>
            <if test="dgimn != null and dgimn !=''">
                AND pointtable.DGIMN= #{dgimn}
            </if>
            <if test="tasktype !=null">
                AND t1.FK_TaskType = #{tasktype}
            </if>
            <if test="searchname!=null and searchname!='' ">
                and pointtable.PollutionName like concat('%',#{searchname},'%')
            </if>
            <if test="pollutionname!=null and pollutionname!='' ">
                and pointtable.PollutionName like concat('%',#{pollutionname},'%')
            </if>
            <if test="monitorpointname!=null and monitorpointname!='' ">
                and pointtable.monitorpointname like concat('%',#{monitorpointname},'%')
            </if>
            <if test="starttime != null and starttime !=''">
                <choose>
                    <when test="starttime.length()==13 ">
                        AND CONVERT (VARCHAR (13),t1.TaskCreateTime,120) >= #{starttime}
                    </when>
                    <otherwise>
                        AND CONVERT (VARCHAR (10),t1.TaskCreateTime,120) >= #{starttime}
                    </otherwise>
                </choose>
            </if>
            <if test="endtime != null and endtime !=''">
                <choose>
                    <when test="endtime.length()==13 ">
                        AND CONVERT (VARCHAR (13),t1.TaskCreateTime,120) <![CDATA[<=]]> #{endtime}
                    </when>
                    <otherwise>
                        AND CONVERT (VARCHAR (10),t1.TaskCreateTime,120) <![CDATA[<=]]> #{endtime}
                    </otherwise>
                </choose>
            </if>
            <if test="taskstarttime != null and taskstarttime !=''">
                AND CONVERT (VARCHAR (19),t1.TaskCreateTime,120) >= #{taskstarttime}
            </if>
            <if test="taskendtime != null and taskendtime !=''">
                AND CONVERT (VARCHAR (19),t1.TaskCreateTime,120) <![CDATA[<=]]> #{taskendtime}
            </if>
            <if test="monitorpointtypes != null and monitorpointtypes.size>0 ">
                and t1.FK_MonitorPointTypeCode in
                <foreach item="item" index="index" collection="monitorpointtypes"
                         open="(" separator="," close=")">
                    #{item}
                </foreach>
            </if>
            <if test="recoverystatuslist != null and recoverystatuslist.size>0 ">
                and t1.RecoveryStatus in
                <foreach item="item" index="index" collection="recoverystatuslist"
                         open="(" separator="," close=")">
                    #{item}
                </foreach>
            </if>
            <if test="tasktypes != null and tasktypes.size>0 ">
                and t1.FK_TaskType in
                <foreach item="item" index="index" collection="tasktypes"
                         open="(" separator="," close=")">
                    #{item}
                </foreach>
            </if>
            <if test="statuslist != null and statuslist.size>0 ">
                and (t1.TaskStatus in
                <foreach item="item" index="index" collection="statuslist"
                         open="(" separator="," close=")">
                    #{item}
                </foreach>
                <if test="isAudit != null and isAudit == 1">
                    or (recordInfo.CurrentTaskStatus  = '审核' and TaskStatus IN (2,4) AND recordInfo.FK_TaskHandleUserID = #{userid})
                </if>
                )
            </if>

            <if test="!(statuslist != null and statuslist.size>0) and isAudit != null and isAudit == 1">
                and recordInfo.CurrentTaskStatus  = '审核' and TaskStatus IN (2,4) AND recordInfo.FK_TaskHandleUserID = #{userid}
            </if>
        </trim>
    </select>

    <!-- author:xsm description: 根据自定义查询条件获取报警任务(环保报警、视频、安全报警)处理信息 date: 2021/04/22 09:24-->
    <select id="countAllOverAlarmTaskCountByParams" resultType="Long">
        SELECT
        COUNT (1) num
        FROM (select
        t.* from
        T_BAS_TaskDisposeManagement t
        where
        <if test="tasktypes != null and tasktypes.size>0 ">
            t.FK_TaskType in
            <foreach item="item" index="index" collection="tasktypes"
                     open="(" separator="," close=")">
                #{item}
            </foreach>
        </if>
        union
        select videot.* from (
        select
        t3.* from
        T_BAS_TaskDisposeManagement t3
        where t3.FK_TaskType=7
        ) videot
        where
        <if test="tasktypes != null and tasktypes.size>0 ">
            videot.FK_TaskType in
            <foreach item="item" index="index" collection="tasktypes"
                     open="(" separator="," close=")">
                #{item}
            </foreach>
        </if>
        ) t1
        LEFT JOIN PUB_CODE_MonitorPointType mt ON t1.FK_MonitorPointTypeCode = mt.Code
        LEFT JOIN (SELECT * FROM T_BAS_TaskFlowRecordInfo where T_BAS_TaskFlowRecordInfo.CurrentTaskStatus = '分派任务') t7
        on t7.FK_TaskID = t1.PK_TaskID AND T7.FK_TaskType = t1.FK_TaskType
        <trim prefix="where" prefixOverrides="AND|OR">
            <if test="starttime != null and starttime !=''">
                AND CONVERT (VARCHAR (10),t1.TaskCreateTime,120) >= #{starttime}
            </if>
            <if test="endtime != null and endtime !=''">
                AND CONVERT (VARCHAR (10),t1.TaskCreateTime,120) <![CDATA[<=]]> #{endtime}
            </if>
        </trim>
    </select>

    <!--
     * @author: lip
     * @date: 2019/8/1 0001 上午 11:26
     * @Description: 自定义查询条件获取报警处置数量数据
     * @updateUser:
     * @updateDate:
     * @updateDescription:
    -->
    <select id="getAlarmTaskDisposeNumDataByParams" parameterType="map" resultType="map">
        SELECT DISTINCT
        t1.PK_TaskID
        FROM
        T_BAS_TaskDisposeManagement t1
        <if test="tasktype == '1'.toString()">
            JOIN T_BAS_Pollution t2 ON t1.FK_Pollutionid = t2.PK_PollutionID
        </if>
        <if test="userid != null and userid !=''">
            JOIN T_BAS_TaskFlowRecordInfo t3 ON t3.FK_TaskID = t1.PK_TaskID
            AND t1.FK_TaskType = t3.FK_TaskType
            AND t3.FK_TaskHandleUserID = #{userid}
            <if test="currenttaskstatus != null and currenttaskstatus !=''">
                AND t3.CurrentTaskStatus = #{currenttaskstatus}
            </if>
        </if>
        <trim prefix="where" prefixOverrides="AND|OR">
            <if test="taskstatus != null">
                AND t1.TaskStatus = #{taskstatus}
            </if>
            <if test="tasktype != null">
                AND t1.FK_TaskType = #{tasktype}
            </if>
            <if test="starttime != null and starttime !=''">
                AND CONVERT (VARCHAR (10),t1.TaskCreateTime,120) >= #{starttime}
            </if>
            <if test="endtime != null and endtime !=''">
                AND CONVERT (VARCHAR (10),t1.TaskCreateTime,120) <![CDATA[<=]]> #{endtime}
            </if>
        </trim>
    </select>


    <!--
    * @author: lip
    * @date: 2019/8/1 0001 上午 11:26
    * @Description: 自定义查询条件获取任务及任务流程记录信息
    * @updateUser:
    * @updateDate:
    * @updateDescription:
   -->
    <select id="getTaskAndRecordListDataByParams" parameterType="map" resultType="map">
        select
        t1.pk_taskid as taskid,
        t1.taskstatus ,
        t2.fk_taskhandleuserid as taskhandleuserid,
        t1.fk_tasktype AS tasktype,
        t1.fk_pollutionid as pollutionid
        from
        t_bas_taskdisposemanagement t1
        left join t_bas_taskflowrecordinfo t2 on t1.pk_taskid = t2.fk_taskid
        and t1.fk_tasktype = t2.fk_tasktype
        <if test="datauserid != null and datauserid !=''">
            JOIN (
            SELECT
            FK_MonitorPointID
            FROM
            T_BAS_UserMonitorPointRelationData
            WHERE
            T_BAS_UserMonitorPointRelationData.FK_UserID = #{datauserid}
            GROUP BY
            FK_MonitorPointID
            ) relation ON t1.FK_Pollutionid = relation.FK_MonitorPointID
        </if>
        <trim prefix="where" prefixOverrides="AND|OR">
            <if test="tasktypes != null and tasktypes.size>0 ">
                and t1.fk_tasktype in
                <foreach item="item" index="index" collection="tasktypes" open="(" separator="," close=")">
                    #{item}
                </foreach>
            </if>
            <if test="starttime != null and starttime !=''">
                AND CONVERT (VARCHAR (10),t1.TaskCreateTime,120) >= #{starttime}
            </if>
            <if test="endtime != null and endtime !=''">
                AND CONVERT (VARCHAR (10),t1.TaskCreateTime,120) <![CDATA[<=]]> #{endtime}
            </if>

            <if test="pollutionList != null and pollutionList.size>0 ">
                and t1.fk_pollutionid in
                <foreach item="item" index="index" collection="pollutionList" open="(" separator="," close=")">
                    #{item}
                </foreach>
            </if>

        </trim>
    </select>


    <select id="getVideoTaskAndRecordListDataByParams" parameterType="map" resultType="map">
        select
        t1.pk_taskid as taskid,
        t1.taskstatus ,
        t2.fk_taskhandleuserid as taskhandleuserid,
        t1.fk_tasktype AS tasktype,
        t1.fk_pollutionid as pollutionid
        from
        t_bas_taskdisposemanagement t1
        left join t_bas_taskflowrecordinfo t2 on t1.pk_taskid = t2.fk_taskid and t1.fk_tasktype = t2.fk_tasktype
        JOIN T_AQ_MonitoringAlarmRecord t3 ON t1.fk_pollutionid = t3.FK_VedioCameraID
        JOIN T_BAS_MonitorTaskRelation t4 ON t3.PK_ID = t4.FK_MonitorAlarmID AND t4.FK_TaskID = t1.PK_TaskID
        <trim prefix="where" prefixOverrides="AND|OR">
            <if test="tasktypes != null and tasktypes.size>0 ">
                and t1.fk_tasktype in
                <foreach item="item" index="index" collection="tasktypes" open="(" separator="," close=")">
                    #{item}
                </foreach>
            </if>
            <if test="starttime != null and starttime !=''">
                AND CONVERT (VARCHAR (10),t1.TaskCreateTime,120) >= #{starttime}
            </if>
            <if test="endtime != null and endtime !=''">
                AND CONVERT (VARCHAR (10),t1.TaskCreateTime,120) <![CDATA[<=]]> #{endtime}
            </if>

            <if test="pollutionList != null and pollutionList.size>0 ">
                and t1.fk_pollutionid in
                <foreach item="item" index="index" collection="pollutionList" open="(" separator="," close=")">
                    #{item}
                </foreach>
            </if>

        </trim>
    </select>

    <!--
        * @author: lip
        * @date: 2019/8/1 0001 上午 11:26
        * @Description: 取所有部门下的用户信息
        * @updateUser:
        * @updateDate:
        * @updateDescription:
       -->
    <select id="getAllOrganizationUser" parameterType="map" resultType="map">
        select
        t1.organization_id,t1.organization_name,t3.user_id,t3.user_name,t3.Phone
        from
        base_organization t1
        left join base_stafforganize t2 on t1.organization_id = t2.organization_id
        left join base_userinfo t3 on t3.user_id = t2.user_id
        <trim prefix="where" prefixOverrides="AND|OR">
            <if test="username != null">
                AND t3.User_Name like '%'+#{username}+'%'
            </if>
        </trim>
        order by t1.sortcode
    </select>

    <!-- author:xsm description: 首页-根据自定义参数统计各状态的任务数量 date: 2019/09/42 11:30-->
    <select id="countTaskDisposeNumGroupByStatusByParams" parameterType="map" resultType="map">
        SELECT COUNT(t1.PK_TaskID) num,t1.TaskStatus
        FROM
        T_BAS_TaskDisposeManagement t1
        <if test="type =='alarm'">
            JOIN (select tt.FK_PollutionID FROM (SELECT
            FK_MonitorPointID AS FK_PollutionID,
            FK_UserID
            FROM
            T_BAS_UserMonitorPointRelationData
            <trim prefix="where" prefixOverrides="AND|OR">
                <if test="userid != null and userid !=''">
                    AND T_BAS_UserMonitorPointRelationData.FK_UserID = #{userid}
                </if>
            </trim>
            ) tt
            ) relation ON t1.FK_Pollutionid=relation.FK_PollutionID
            JOIN (
            SELECT p.PollutionName,t2.PK_ID monitorpointid,t2.DGIMN,p.ShorterName+'_'+t2.OutputName
            monitorpointname,t2.FK_Pollutionid,'1' monitorpointtype from T_BAS_WaterOutputInfo t2
            LEFT JOIN T_BAS_Pollution p ON t2.FK_Pollutionid = p.PK_PollutionID
            WHERE (t2.OutPutType !=3 or t2.OutPutType is null)
            UNION
            SELECT p.PollutionName,t3.PK_ID monitorpointid,t3.DGIMN,p.ShorterName+'_'+t3.OutputName
            monitorpointname,t3.FK_Pollutionid,'37' monitorpointtype from T_BAS_WaterOutputInfo t3
            LEFT JOIN T_BAS_Pollution p ON t3.FK_Pollutionid = p.PK_PollutionID
            WHERE t3.OutPutType =3
            UNION
            SELECT p.PollutionName,t4.PK_ID monitorpointid,t4.DGIMN,p.ShorterName+'_'+t4.OutputName
            monitorpointname,t4.FK_Pollutionid,t4.FK_MonitorPointTypeCode monitorpointtype from T_BAS_GASOutPutInfo t4
            LEFT JOIN T_BAS_Pollution p ON t4.FK_Pollutionid = p.PK_PollutionID
            UNION
            SELECT p.PollutionName,t5.PK_ID monitorpointid,t5.DGIMN,p.ShorterName+'_'+t5.MonitorPointName
            monitorpointname,t5.FK_Pollutionid,t5.FK_MonitorPointTypeCode monitorpointtype from
            T_BAS_UnorganizedMonitorPointInfo t5
            LEFT JOIN T_BAS_Pollution p ON t5.FK_Pollutionid = p.PK_PollutionID
            WHERE t5.FK_MonitorPointTypeCode in(40,41)
            UNION
            SELECT '' PollutionName,t6.PK_MonitorPointID monitorpointid,t6.DGIMN,t6.MonitorPointName monitorpointname,''
            FK_Pollutionid,t6.FK_MonitorPointTypeCode monitorpointtype from T_BAS_OtherMonitorPoint t6 WHERE
            t6.FK_MonitorPointTypeCode in(9,10,33,12)
            ) pointtable ON t1.FK_Pollutionid = pointtable.monitorpointid AND t1.FK_MonitorPointTypeCode =
            pointtable.monitorpointtype
            <if test="fkpollutionid != null and fkpollutionid !=''">
                AND pointtable.FK_Pollutionid = #{fkpollutionid}
            </if>
            <if test="pollutionids != null and pollutionids.size>0">
                AND pointtable.FK_Pollutionid in
                <foreach collection="pollutionids" close=")" open="(" separator="," item="item">
                    #{item}
                </foreach>
            </if>
        </if>
        <if test="type =='devops'">
            JOIN (
            SELECT
            FK_PollutionID
            FROM
            T_BAS_UserMonitorPointRelationData
            WHERE
            T_BAS_UserMonitorPointRelationData.FK_UserID = #{userid}
            GROUP BY
            FK_PollutionID
            ) relation ON t1.FK_Pollutionid =relation.FK_PollutionID
            <if test="fkpollutionid != null and fkpollutionid !=''">
                AND t1.FK_Pollutionid = #{fkpollutionid}
            </if>
            <if test="pollutionids != null and pollutionids.size>0">
                AND t1.FK_Pollutionid in
                <foreach collection="pollutionids" close=")" open="(" separator="," item="item">
                    #{item}
                </foreach>
            </if>
        </if>
        JOIN T_BAS_TaskFlowRecordInfo t3 ON t3.FK_TaskID = t1.PK_TaskID
        AND t1.FK_TaskType = t3.FK_TaskType
        AND t3.CurrentTaskStatus in ('待处理','转办')
        and t3.TaskComment is null
        AND t3.FK_TaskHandleUserID = #{userid}
        WHERE t1.TaskStatus IN ('1','2') AND t1.FK_TaskType = #{tasktype}
        <if test="starttime != null and starttime !=''">
            AND CONVERT (VARCHAR (10),t1.TaskCreateTime,120) >= #{starttime}
        </if>
        <if test="endtime != null and endtime !=''">
            AND CONVERT (VARCHAR (10),t1.TaskCreateTime,120) <![CDATA[<=]]> #{endtime}
        </if>
        <if test="monitorpointtypes != null and monitorpointtypes.size>0 ">
            AND t1.FK_MonitorPointTypeCode in
            <foreach collection="monitorpointtypes" close=")" open="(" separator="," item="item">
                #{item}
            </foreach>
        </if>
        GROUP BY t1.TaskStatus
        <if test="flag == 'hasauthority'">
            UNION
            SELECT COUNT(t1.PK_TaskID) num,t1.TaskStatus
            FROM
            T_BAS_TaskDisposeManagement t1
            <if test="type =='alarm'">
                JOIN (select tt.FK_PollutionID FROM (SELECT
                FK_MonitorPointID AS FK_PollutionID,
                FK_UserID
                FROM
                T_BAS_UserMonitorPointRelationData
                <trim prefix="where" prefixOverrides="AND|OR">
                    <if test="userid != null and userid !=''">
                        AND T_BAS_UserMonitorPointRelationData.FK_UserID = #{userid}
                    </if>
                </trim>
                ) tt
                ) relation ON t1.FK_Pollutionid=relation.FK_PollutionID
                JOIN (
                SELECT p.PollutionName,t2.PK_ID monitorpointid,t2.DGIMN,p.ShorterName+'_'+t2.OutputName
                monitorpointname,t2.FK_Pollutionid,'1' monitorpointtype from T_BAS_WaterOutputInfo t2
                LEFT JOIN T_BAS_Pollution p ON t2.FK_Pollutionid = p.PK_PollutionID
                WHERE (t2.OutPutType !=3 or t2.OutPutType is null)
                UNION
                SELECT p.PollutionName,t3.PK_ID monitorpointid,t3.DGIMN,p.ShorterName+'_'+t3.OutputName
                monitorpointname,t3.FK_Pollutionid,'37' monitorpointtype from T_BAS_WaterOutputInfo t3
                LEFT JOIN T_BAS_Pollution p ON t3.FK_Pollutionid = p.PK_PollutionID
                WHERE t3.OutPutType =3
                UNION
                SELECT p.PollutionName,t4.PK_ID monitorpointid,t4.DGIMN,p.ShorterName+'_'+t4.OutputName
                monitorpointname,t4.FK_Pollutionid,t4.FK_MonitorPointTypeCode monitorpointtype from T_BAS_GASOutPutInfo
                t4
                LEFT JOIN T_BAS_Pollution p ON t4.FK_Pollutionid = p.PK_PollutionID
                UNION
                SELECT p.PollutionName,t5.PK_ID monitorpointid,t5.DGIMN,p.ShorterName+'_'+t5.MonitorPointName
                monitorpointname,t5.FK_Pollutionid,t5.FK_MonitorPointTypeCode monitorpointtype from
                T_BAS_UnorganizedMonitorPointInfo t5
                LEFT JOIN T_BAS_Pollution p ON t5.FK_Pollutionid = p.PK_PollutionID
                WHERE t5.FK_MonitorPointTypeCode in(40,41)
                UNION
                SELECT '' PollutionName,t6.PK_MonitorPointID monitorpointid,t6.DGIMN,t6.MonitorPointName
                monitorpointname,'' FK_Pollutionid,t6.FK_MonitorPointTypeCode monitorpointtype from
                T_BAS_OtherMonitorPoint t6 WHERE t6.FK_MonitorPointTypeCode in(9,10,33,12)
                ) pointtable ON t1.FK_Pollutionid = pointtable.monitorpointid AND t1.FK_MonitorPointTypeCode =
                pointtable.monitorpointtype
                <if test="fkpollutionid != null and fkpollutionid !=''">
                    AND pointtable.FK_Pollutionid = #{fkpollutionid}
                </if>
                <if test="pollutionids != null and pollutionids.size>0">
                    AND pointtable.FK_Pollutionid in
                    <foreach collection="pollutionids" close=")" open="(" separator="," item="item">
                        #{item}
                    </foreach>
                </if>
            </if>
            <if test="type =='devops'">
                JOIN (
                SELECT
                FK_PollutionID
                FROM
                T_BAS_UserMonitorPointRelationData
                WHERE
                T_BAS_UserMonitorPointRelationData.FK_UserID = #{userid}
                GROUP BY
                FK_PollutionID
                ) relation ON t1.FK_Pollutionid =relation.FK_PollutionID
                <if test="fkpollutionid != null and fkpollutionid !=''">
                    AND t1.FK_Pollutionid = #{fkpollutionid}
                </if>
                <if test="pollutionids != null and pollutionids.size>0">
                    AND t1.FK_Pollutionid in
                    <foreach collection="pollutionids" close=")" open="(" separator="," item="item">
                        #{item}
                    </foreach>
                </if>
            </if>
            WHERE t1.TaskStatus IN ('0','4') AND t1.FK_TaskType = #{tasktype}
            <if test="starttime != null and starttime !=''">
                AND CONVERT (VARCHAR (10),t1.TaskCreateTime,120) >= #{starttime}
            </if>
            <if test="endtime != null and endtime !=''">
                AND CONVERT (VARCHAR (10),t1.TaskCreateTime,120) <![CDATA[<=]]> #{endtime}
            </if>
            <if test="monitorpointtypes != null and monitorpointtypes.size>0 ">
                AND t1.FK_MonitorPointTypeCode in
                <foreach collection="monitorpointtypes" close=")" open="(" separator="," item="item">
                    #{item}
                </foreach>
            </if>
            GROUP BY t1.TaskStatus
        </if>
        <if test="flag == 'noauthority'">
            UNION
            SELECT COUNT(t1.PK_TaskID) num,t1.TaskStatus
            FROM
            T_BAS_TaskDisposeManagement t1
            <if test="type =='alarm'">
                JOIN (select tt.FK_PollutionID FROM (SELECT
                FK_MonitorPointID AS FK_PollutionID,
                FK_UserID
                FROM
                T_BAS_UserMonitorPointRelationData
                <trim prefix="where" prefixOverrides="AND|OR">
                    <if test="userid != null and userid !=''">
                        AND T_BAS_UserMonitorPointRelationData.FK_UserID = #{userid}
                    </if>
                </trim>
                ) tt
                ) relation ON t1.FK_Pollutionid=relation.FK_PollutionID
                JOIN (
                SELECT p.PollutionName,t2.PK_ID monitorpointid,t2.DGIMN,p.ShorterName+'_'+t2.OutputName
                monitorpointname,t2.FK_Pollutionid,'1' monitorpointtype from T_BAS_WaterOutputInfo t2
                LEFT JOIN T_BAS_Pollution p ON t2.FK_Pollutionid = p.PK_PollutionID
                WHERE (t2.OutPutType !=3 or t2.OutPutType is null)
                UNION
                SELECT p.PollutionName,t3.PK_ID monitorpointid,t3.DGIMN,p.ShorterName+'_'+t3.OutputName
                monitorpointname,t3.FK_Pollutionid,'37' monitorpointtype from T_BAS_WaterOutputInfo t3
                LEFT JOIN T_BAS_Pollution p ON t3.FK_Pollutionid = p.PK_PollutionID
                WHERE t3.OutPutType =3
                UNION
                SELECT p.PollutionName,t4.PK_ID monitorpointid,t4.DGIMN,p.ShorterName+'_'+t4.OutputName
                monitorpointname,t4.FK_Pollutionid,t4.FK_MonitorPointTypeCode monitorpointtype from T_BAS_GASOutPutInfo
                t4
                LEFT JOIN T_BAS_Pollution p ON t4.FK_Pollutionid = p.PK_PollutionID
                UNION
                SELECT p.PollutionName,t5.PK_ID monitorpointid,t5.DGIMN,p.ShorterName+'_'+t5.MonitorPointName
                monitorpointname,t5.FK_Pollutionid,t5.FK_MonitorPointTypeCode monitorpointtype from
                T_BAS_UnorganizedMonitorPointInfo t5
                LEFT JOIN T_BAS_Pollution p ON t5.FK_Pollutionid = p.PK_PollutionID
                WHERE t5.FK_MonitorPointTypeCode in(40,41)
                UNION
                SELECT '' PollutionName,t6.PK_MonitorPointID monitorpointid,t6.DGIMN,t6.MonitorPointName
                monitorpointname,'' FK_Pollutionid,t6.FK_MonitorPointTypeCode monitorpointtype from
                T_BAS_OtherMonitorPoint t6 WHERE t6.FK_MonitorPointTypeCode in(9,10,33,12)
                ) pointtable ON t1.FK_Pollutionid = pointtable.monitorpointid AND t1.FK_MonitorPointTypeCode =
                pointtable.monitorpointtype
                <if test="fkpollutionid != null and fkpollutionid !=''">
                    AND pointtable.FK_Pollutionid = #{fkpollutionid}
                </if>
                <if test="pollutionids != null and pollutionids.size>0">
                    AND pointtable.FK_Pollutionid in
                    <foreach collection="pollutionids" close=")" open="(" separator="," item="item">
                        #{item}
                    </foreach>
                </if>
            </if>
            <if test="type =='devops'">
                JOIN (
                SELECT
                FK_PollutionID
                FROM
                T_BAS_UserMonitorPointRelationData
                WHERE
                T_BAS_UserMonitorPointRelationData.FK_UserID = #{userid}
                GROUP BY
                FK_PollutionID
                ) relation ON t1.FK_Pollutionid =relation.FK_PollutionID
                <if test="fkpollutionid != null and fkpollutionid !=''">
                    AND t1.FK_Pollutionid = #{fkpollutionid}
                </if>
                <if test="pollutionids != null and pollutionids.size>0">
                    AND t1.FK_Pollutionid in
                    <foreach collection="pollutionids" close=")" open="(" separator="," item="item">
                        #{item}
                    </foreach>
                </if>
            </if>
            JOIN T_BAS_TaskFlowRecordInfo t3 ON t3.FK_TaskID = t1.PK_TaskID
            AND t1.FK_TaskType = t3.FK_TaskType
            AND t3.CurrentTaskStatus = '待处理'
            and t3.TaskComment is null
            AND t3.FK_TaskHandleUserID = #{userid}
            WHERE t1.TaskStatus = '4' AND t1.FK_TaskType = #{tasktype}
            <if test="starttime != null and starttime !=''">
                AND CONVERT (VARCHAR (10),t1.TaskCreateTime,120) >= #{starttime}
            </if>
            <if test="endtime != null and endtime !=''">
                AND CONVERT (VARCHAR (10),t1.TaskCreateTime,120) <![CDATA[<=]]> #{endtime}
            </if>
            <if test="monitorpointtypes != null and monitorpointtypes.size>0 ">
                AND t1.FK_MonitorPointTypeCode in
                <foreach collection="monitorpointtypes" close=")" open="(" separator="," item="item">
                    #{item}
                </foreach>
            </if>
            GROUP BY t1.TaskStatus
        </if>
    </select>

    <!-- author:xsm description: 根据自定义参数统计某状态的任务数量  type =='alarm'表示有数据权限控制   date: 2019/08/24 11:30-->
    <select id="getTaskDisposeNumDataByParams" parameterType="map" resultType="map">
        SELECT DISTINCT
        t1.PK_TaskID
        FROM
        T_BAS_TaskDisposeManagement t1
        <if test="type =='alarm'">
            JOIN (
            SELECT
            FK_MonitorPointID
            FROM
            T_BAS_UserMonitorPointRelationData
            WHERE
            T_BAS_UserMonitorPointRelationData.FK_UserID = #{datauserid}
            GROUP BY
            FK_MonitorPointID
            ) relation ON t1.FK_Pollutionid =relation.FK_MonitorPointID
        </if>
        <if test="userid != null and userid !=''">
            JOIN T_BAS_TaskFlowRecordInfo t3 ON t3.FK_TaskID = t1.PK_TaskID
            AND t1.FK_TaskType = t3.FK_TaskType
            AND t3.FK_TaskHandleUserID = #{userid}
            AND t3.CurrentTaskStatus = #{currenttaskstatus}
        </if>
        <trim prefix="where" prefixOverrides="AND|OR">
            t1.FK_TaskType = #{tasktype}
            <if test="taskstatus != null">
                AND t1.TaskStatus = #{taskstatus}
            </if>
            <if test="starttime != null and starttime !=''">
                AND CONVERT (VARCHAR (10),t1.TaskCreateTime,120) >= #{starttime}
            </if>
            <if test="endtime != null and endtime !=''">
                AND CONVERT (VARCHAR (10),t1.TaskCreateTime,120) <![CDATA[<=]]> #{endtime}
            </if>
        </trim>
    </select>

    <!-- author:xsm description: 根据自定义参数统计某状态的任务数量  type =='alarm'表示有数据权限控制   date: 2019/08/24 11:30-->
    <select id="getAssignAndUndisposedTaskNumDataByParams" parameterType="map" resultType="map">
        SELECT DISTINCT
        COUNT(tt.PK_TaskID) num,
        tt.TaskStatus
        FROM
        (
        <if test="ishaveflag =='yes'">
        SELECT
        t1.PK_TaskID,t1.TaskStatus
        FROM
        T_BAS_TaskDisposeManagement t1
        WHERE
        t1.FK_TaskType = #{tasktype}
        AND t1.TaskStatus = 0
        union all
        </if>
        SELECT
        t2.PK_TaskID,t2.TaskStatus
        FROM
        T_BAS_TaskDisposeManagement t2
        <if test="userid != null and userid !=''">
            join (
            SELECT  *
            FROM (
            SELECT *, ROW_NUMBER() OVER (PARTITION BY FK_TaskID ORDER BY TaskHandleTime DESC) rn FROM
            T_BAS_TaskFlowRecordInfo
            where T_BAS_TaskFlowRecordInfo.FK_TaskType = #{tasktype}
            and T_BAS_TaskFlowRecordInfo.CurrentTaskStatus in('待处理','转办')
            and TaskComment is null
            )  t4
            WHERE
            t4.rn = 1
            )t3 ON t3.FK_TaskID = t2.PK_TaskID
            AND t2.FK_TaskType = t3.FK_TaskType
            AND t3.FK_TaskHandleUserID = #{userid}
        </if>
       where
            t2.FK_TaskType = #{tasktype}
            AND t2.TaskStatus = 1
        ) tt
        group by tt.TaskStatus
    </select>

    <!-- author:xsm description: 根据自定义参数统计各监测类型报警任务的任务数量    date: 2022/02/23 17:27-->
    <select id="getAssignAndUndisposedTaskNumDataGroupByType" parameterType="map" resultType="map">
        SELECT DISTINCT
        COUNT(tt.PK_TaskID) num,
        tt.FK_MonitorPointTypeCode
        FROM
        (
        <if test="ishaveflag =='yes'">
            SELECT
            t1.PK_TaskID,
            t1.FK_MonitorPointTypeCode
            FROM
            T_BAS_TaskDisposeManagement t1
            WHERE
            t1.FK_TaskType = #{tasktype}
            <if test="starttime != null and starttime !=''">
                AND CONVERT (VARCHAR (10),t1.TaskCreateTime,120) >= #{starttime}
            </if>
            <if test="endtime != null and endtime !=''">
                AND CONVERT (VARCHAR (10),t1.TaskCreateTime,120) <![CDATA[<=]]> #{endtime}
            </if>
            AND t1.TaskStatus = 0
            union all
        </if>
        SELECT
        t2.PK_TaskID,t2.FK_MonitorPointTypeCode
        FROM
        T_BAS_TaskDisposeManagement t2
        <if test="userid != null and userid !=''">
            join (
            SELECT  *
            FROM (
            SELECT *, ROW_NUMBER() OVER (PARTITION BY FK_TaskID ORDER BY TaskHandleTime DESC) rn FROM
            T_BAS_TaskFlowRecordInfo
            where T_BAS_TaskFlowRecordInfo.FK_TaskType = #{tasktype}
            and T_BAS_TaskFlowRecordInfo.CurrentTaskStatus in('待处理','转办')
            and TaskComment is null
            )  t4
            WHERE
            t4.rn = 1
            )t3 ON t3.FK_TaskID = t2.PK_TaskID
            AND t2.FK_TaskType = t3.FK_TaskType
            AND t3.FK_TaskHandleUserID = #{userid}
        </if>
        where
        t2.FK_TaskType = #{tasktype}
        <if test="starttime != null and starttime !=''">
            AND CONVERT (VARCHAR (10),t2.TaskCreateTime,120) >= #{starttime}
        </if>
        <if test="endtime != null and endtime !=''">
            AND CONVERT (VARCHAR (10),t2.TaskCreateTime,120) <![CDATA[<=]]> #{endtime}
        </if>
        AND t2.TaskStatus = 1
        ) tt
        group by tt.FK_MonitorPointTypeCode
    </select>

    <!-- author:xsm description: 获取所有处置人信息 date: 2019/07/17 11:07-->
    <select id="getDisposePersonSelectData" resultType="map">
        SELECT DISTINCT datas.* FROM
        (SELECT Base_UserInfo.User_ID,Base_UserInfo.User_Name FROM Base_UserInfo
        JOIN Base_UserRight ON Base_UserInfo.User_ID = Base_UserRight.User_ID
        join Base_SysMenu ON Base_UserRight.Menu_Id = Base_SysMenu.Menu_Id
        JOIN Base_Button ON Base_UserRight.Button_Id = Base_Button.Button_ID
        <trim prefix="where" prefixOverrides="AND|OR">
            <if test="sysmodel != null and sysmodel !=''">
                AND Base_SysMenu.Menu_Code = #{sysmodel}
            </if>
            <if test="buttoncode != null and buttoncode !=''">
                AND Base_Button.Button_Code = #{buttoncode}
            </if>
        </trim>
        UNION ALL
        SELECT Base_UserInfo.User_ID,Base_UserInfo.User_Name FROM Base_UserInfo
        JOIN Base_UserRole ON Base_UserInfo.User_ID = Base_UserRole.User_ID
        JOIN Base_RoleRight ON Base_UserRole.Roles_ID = Base_RoleRight.Roles_ID
        join Base_SysMenu ON Base_RoleRight.Menu_Id = Base_SysMenu.Menu_Id
        JOIN Base_Button ON Base_RoleRight.Button_Id = Base_Button.Button_ID
        <trim prefix="where" prefixOverrides="AND|OR">
            <if test="sysmodel != null and sysmodel !=''">
                AND Base_SysMenu.Menu_Code = #{sysmodel}
            </if>
            <if test="buttoncode != null and buttoncode !=''">
                AND Base_Button.Button_Code = #{buttoncode}
            </if>
        </trim>
        ) datas
        ORDER BY datas.User_Name
    </select>


    <select id="getDisposePersonSelectDataByParams" parameterType="map" resultType="map">
        SELECT Base_UserInfo.User_ID,Base_UserInfo.User_Name,User_Account,Phone FROM Base_UserInfo
        <trim prefix="where" prefixOverrides="AND|OR">
            <if test="userids != null and userids.size>0 ">
                Base_UserInfo.User_ID in
                <foreach item="item" index="index" collection="userids"
                         open="(" separator="," close=")">
                    #{item}
                </foreach>
            </if>
        </trim>
        ORDER BY Base_UserInfo.User_Name
    </select>

    <!-- author:xsm description: 获取问题类型信息 date: 2019/07/18 9:50-->
    <select id="getProblemTypeSelectData" resultType="map">
        SELECT PUB_CODE_ProblemType.Code,PUB_CODE_ProblemType.Name  FROM  PUB_CODE_ProblemType where 1=1
        <if test="monitorpointtypecode != null and monitorpointtypecode !=''">
            and FK_MonitorPointTypeCode = #{monitorpointtypecode}
        </if>
    </select>


    <!-- author:xsm description: 根据自定义参数获取报警任务处置信息 date: 2019/07/17 8:36-->
    <select id="getAlarmTaskDisposeManagementByParamMap" parameterType="map" resultType="map">
        SELECT DISTINCT
        T_BAS_TaskDisposeManagement.PK_TaskID,
        T_BAS_TaskDisposeManagement.FK_Pollutionid,
        T_BAS_TaskDisposeManagement.FK_TaskType,
        T_BAS_TaskDisposeManagement.TaskName,
        CONVERT(VARCHAR (7),T_BAS_TaskDisposeManagement.TaskCreateTime,120) TaskCreateTime,
        T_BAS_TaskDisposeManagement.TaskStatus,
        T_BAS_TaskDisposeManagement.TaskRemark,
        T_BAS_TaskDisposeManagement.FK_ProblemType,
        T_BAS_TaskDisposeManagement.FeedbackResults,
        T_BAS_TaskDisposeManagement.IsSampling,
        T_BAS_TaskDisposeManagement.FileID,
        T_BAS_TaskDisposeManagement.UpdateTime,
        T_BAS_TaskDisposeManagement.UpdateUser
        FROM T_BAS_TaskDisposeManagement
        <if test="userid != null and userid !=''">
            JOIN (
            SELECT
            FK_MonitorPointID
            FROM
            T_BAS_UserMonitorPointRelationData
            WHERE
            T_BAS_UserMonitorPointRelationData.FK_UserID = #{userid}
            GROUP BY
            FK_MonitorPointID
            UNION
            SELECT
            PK_ID
            FROM
            T_AQ_RiskInfo
            ) relation ON T_BAS_TaskDisposeManagement.FK_Pollutionid = relation.FK_MonitorPointID
        </if>
        <trim prefix="where" prefixOverrides="AND|OR">
            AND T_BAS_TaskDisposeManagement.FK_TaskType = #{tasktype}

            <if test="starttime != null and starttime !=''">
                AND CONVERT (VARCHAR (7),T_BAS_TaskDisposeManagement.TaskCreateTime,120) >= #{starttime}
            </if>
            <if test="endtime != null and endtime !=''">
                AND CONVERT (VARCHAR (7),T_BAS_TaskDisposeManagement.TaskCreateTime,120) <![CDATA[<=]]>
                #{endtime}
            </if>

        </trim>
        ORDER BY TaskCreateTime
    </select>


    <!-- author:xsm description: 获取按企业分组的报警任务统计信息 date: 2019/07/18 15:02-->
    <select id="getAlarmTaskNumGroupByPollution" parameterType="map" resultType="map">
        SELECT DISTINCT
        COUNT(t1.PK_TaskID) num,
        t1.FK_Pollutionid,
        pointtable.monitorpointname PollutionName
        FROM T_BAS_TaskDisposeManagement t1
        <if test="userid != null and userid !=''">
            JOIN (
            SELECT
            FK_MonitorPointID
            FROM
            T_BAS_UserMonitorPointRelationData
            WHERE
            T_BAS_UserMonitorPointRelationData.FK_UserID = #{userid}
            GROUP BY
            FK_MonitorPointID
            ) relation ON t1.FK_Pollutionid = relation.FK_MonitorPointID
        </if>
        JOIN (
        SELECT p.PollutionName,t2.PK_ID monitorpointid,t2.DGIMN,p.ShorterName+'_'+t2.OutputName
        monitorpointname,t2.FK_Pollutionid,'1' monitorpointtype from T_BAS_WaterOutputInfo t2
        LEFT JOIN T_BAS_Pollution p ON t2.FK_Pollutionid = p.PK_PollutionID
        WHERE (t2.OutPutType !=3 or t2.OutPutType is null)
        UNION
        SELECT p.PollutionName,t3.PK_ID monitorpointid,t3.DGIMN,p.ShorterName+'_'+t3.OutputName
        monitorpointname,t3.FK_Pollutionid,'37' monitorpointtype from T_BAS_WaterOutputInfo t3
        LEFT JOIN T_BAS_Pollution p ON t3.FK_Pollutionid = p.PK_PollutionID
        WHERE t3.OutPutType =3
        UNION
        SELECT p.PollutionName,t4.PK_ID monitorpointid,t4.DGIMN,p.ShorterName+'_'+t4.OutputName
        monitorpointname,t4.FK_Pollutionid,t4.FK_MonitorPointTypeCode monitorpointtype from T_BAS_GASOutPutInfo t4
        LEFT JOIN T_BAS_Pollution p ON t4.FK_Pollutionid = p.PK_PollutionID
        UNION
        SELECT p.PollutionName,t5.PK_ID monitorpointid,t5.DGIMN,p.ShorterName+'_'+t5.MonitorPointName
        monitorpointname,t5.FK_Pollutionid,t5.FK_MonitorPointTypeCode monitorpointtype from
        T_BAS_UnorganizedMonitorPointInfo t5
        LEFT JOIN T_BAS_Pollution p ON t5.FK_Pollutionid = p.PK_PollutionID
        WHERE t5.FK_MonitorPointTypeCode in(40,41)
        UNION
        SELECT '' PollutionName,t6.PK_MonitorPointID monitorpointid,t6.DGIMN,t6.MonitorPointName monitorpointname,''
        FK_Pollutionid,t6.FK_MonitorPointTypeCode monitorpointtype from T_BAS_OtherMonitorPoint t6 WHERE
        t6.FK_MonitorPointTypeCode in(9,10,33,12)
        ) pointtable ON t1.FK_Pollutionid = pointtable.monitorpointid AND t1.FK_MonitorPointTypeCode =
        pointtable.monitorpointtype

        <trim prefix="where" prefixOverrides="AND|OR">
            AND t1.FK_TaskType = #{tasktype}
            <if test="starttime != null and starttime !=''">
                AND CONVERT (VARCHAR (10),t1.TaskCreateTime,120) >= #{starttime}
            </if>
            <if test="endtime != null and endtime !=''">
                AND CONVERT (VARCHAR (10),t1.TaskCreateTime,120) <![CDATA[<=]]>
                #{endtime}
            </if>
        </trim>
        GROUP BY t1.FK_Pollutionid,pointtable.monitorpointname
    </select>


    <!-- author:xsm description: 获取按问题类型分组的报警任务统计信息 date: 2019/07/18 15:02-->
    <select id="getAlarmTaskNumGroupByProblemType" parameterType="map" resultType="map">
        SELECT DISTINCT
        COUNT(PK_TaskID) num,
        T_BAS_TaskDisposeManagement.FK_ProblemType
        FROM T_BAS_TaskDisposeManagement
        <if test="userid != null and userid !=''">
            JOIN (
            SELECT
            FK_MonitorPointID
            FROM
            T_BAS_UserMonitorPointRelationData
            WHERE
            T_BAS_UserMonitorPointRelationData.FK_UserID = #{userid}
            GROUP BY
            FK_MonitorPointID
            ) relation ON T_BAS_TaskDisposeManagement.FK_Pollutionid = relation.FK_MonitorPointID
        </if>
        <trim prefix="where" prefixOverrides="AND|OR">
            T_BAS_TaskDisposeManagement.FK_ProblemType !=''
            AND T_BAS_TaskDisposeManagement.FK_ProblemType IS NOT NULL
            AND T_BAS_TaskDisposeManagement.FK_TaskType = #{tasktype}
            <if test="starttime != null and starttime !=''">
                AND CONVERT (VARCHAR (10),T_BAS_TaskDisposeManagement.TaskCreateTime,120) >= #{starttime}
            </if>
            <if test="endtime != null and endtime !=''">
                AND CONVERT (VARCHAR (10),T_BAS_TaskDisposeManagement.TaskCreateTime,120) <![CDATA[<=]]>
                #{endtime}
            </if>
        </trim>
        GROUP BY T_BAS_TaskDisposeManagement.FK_ProblemType
    </select>



    <!--
        author:chengzq
        description: 自定义条件查询日常任务
        param:
        date: 2019/08/19 08:46
    -->
    <select id="getDaliyTaskByParamMap" resultMap="DaliyResultMap" parameterType="map">
        SELECT distinct
            T_BAS_TaskDisposeManagement.PK_TaskID,
            T_BAS_TaskDisposeManagement.TaskName,
            T_BAS_TaskDisposeManagement.TaskStatus,
            T_BAS_TaskDisposeManagement.FK_TaskType,
            T_BAS_TaskDisposeManagement.FK_Pollutionid,
            CONVERT (VARCHAR (10),T_BAS_TaskDisposeManagement.TaskCreateTime,120) TaskCreateTime,
            case T_BAS_TaskDisposeManagement.TaskStatus when 0 then '待分派' when 1 then '待处理' when 2 then '处理中' when 3 then '已忽略' when 4 then '已完成' end
            status
        FROM
        T_BAS_TaskDisposeManagement
        <if test="datauserid != null and datauserid !=''">
            JOIN (
            SELECT
            FK_MonitorPointID
            FROM
            T_BAS_UserMonitorPointRelationData
            WHERE
            T_BAS_UserMonitorPointRelationData.FK_UserID = #{datauserid}
            GROUP BY
            FK_MonitorPointID
            UNION
            SELECT
            PK_ID
            FROM
            T_AQ_RiskInfo
            ) relation ON T_BAS_TaskDisposeManagement.FK_Pollutionid = relation.FK_MonitorPointID
        </if>
        <if test="hasauthor != null and hasauthor == '0'.toString()">
            JOIN T_BAS_TaskFlowRecordInfo ON T_BAS_TaskDisposeManagement.PK_TaskID = T_BAS_TaskFlowRecordInfo.FK_TaskID
            and T_BAS_TaskFlowRecordInfo.FK_TaskHandleUserID = #{userid}
            <if test="currenttaskstatuss !=null and currenttaskstatuss.size()>0">
                and   T_BAS_TaskFlowRecordInfo.currenttaskstatus in
                <foreach collection="currenttaskstatuss" separator="," open="(" close=")" item="item">
                    #{item}
                </foreach>
            </if>
        </if>
        <trim prefix="where" prefixOverrides="AND||OR">
            <if test="showcurrentuser != null and showcurrentuser == 1">
                AND FK_TaskHandleUserID = #{userid}
            </if>
            <if test="tasktype!=null and tasktype>0">
                and T_BAS_TaskDisposeManagement.FK_TaskType =#{tasktype}
            </if>
            <if test="starttime != null and starttime !=''">
                AND CONVERT (VARCHAR (10),T_BAS_TaskDisposeManagement.TaskCreateTime,120) >= #{starttime}
            </if>
            <if test="endtime != null and endtime !=''">
                AND CONVERT (VARCHAR (10),T_BAS_TaskDisposeManagement.TaskCreateTime,120) <![CDATA[<=]]>
                #{endtime}
            </if>
            <if test="taskname!=null and taskname!=''">
                and T_BAS_TaskDisposeManagement.taskname like concat('%',#{taskname},'%')
            </if>
            <if test="statuslist !=null and statuslist.size()>0">
                and   T_BAS_TaskDisposeManagement.TaskStatus in
                <foreach collection="statuslist" separator="," open="(" close=")" item="item">
                    #{item}
                </foreach>
            </if>
            <choose>
                <when test="statustype!=null and statustype!='' and 'needassign'.equals(statustype)">
                    and T_BAS_TaskDisposeManagement.TaskStatus=0
                </when>
                <when test="statustype!=null and statustype!='' and 'needfeedback'.equals(statustype)">
                    and T_BAS_TaskDisposeManagement.TaskStatus=1
                </when>
                <when test="statustype!=null and statustype!='' and 'feedbacking'.equals(statustype)">
                    and T_BAS_TaskDisposeManagement.TaskStatus=2
                </when>
                <when test="statustype!=null and statustype!='' and 'hasclose'.equals(statustype)">
                    and T_BAS_TaskDisposeManagement.TaskStatus=4
                </when>
                <when test="statuslist!=null and statuslist.size>0">
                    and T_BAS_TaskDisposeManagement.TaskStatus in
                    <foreach collection="statuslist" item="item" separator="," close=")" open="(">
                        #{item}
                    </foreach>
                </when>
            </choose>
        </trim>
    </select>



    <!--
        author:mmt
        description: 自定义条件查询日常任务
        param:
        date: 2022/08/23 08:46
    -->
    <select id="getAllDaliyTaskByParamMap" resultType="long" parameterType="map">
        select count (DISTINCT PK_TaskID) from (
        SELECT
        PK_TaskID,
        TaskName,
        TaskStatus,
        FK_TaskType,
        FK_Pollutionid,
        CONVERT (VARCHAR (10),T_BAS_TaskDisposeManagement.TaskCreateTime,120) TaskCreateTime,
        case TaskStatus when 0 then '待分派' when 1 then '待处理' when 2 then '处理中' when 3 then '已忽略' when 4 then '已完成' end
        status
        FROM
        T_BAS_TaskDisposeManagement
        <if test="datauserid != null and datauserid !=''">
            JOIN (
            SELECT
            FK_MonitorPointID
            FROM
            T_BAS_UserMonitorPointRelationData
            WHERE
            T_BAS_UserMonitorPointRelationData.FK_UserID = #{datauserid}
            GROUP BY
            FK_MonitorPointID
            UNION
            SELECT
            PK_ID
            FROM
            T_AQ_RiskInfo
            ) relation ON T_BAS_TaskDisposeManagement.FK_Pollutionid = relation.FK_MonitorPointID
        </if>
        <trim prefix="where" prefixOverrides="AND||OR">
            <if test="tasktype!=null and tasktype>0">
                and FK_TaskType =#{tasktype}
            </if>
            <if test="starttime != null and starttime !=''">
                AND CONVERT (VARCHAR (10),T_BAS_TaskDisposeManagement.TaskCreateTime,120) >= #{starttime}
            </if>
            <if test="endtime != null and endtime !=''">
                AND CONVERT (VARCHAR (10),T_BAS_TaskDisposeManagement.TaskCreateTime,120) <![CDATA[<=]]>
                #{endtime}
            </if>
            <if test="taskname!=null and taskname!=''">
                and taskname like concat('%',#{taskname},'%')
            </if>
            <if test="isown!=null and isown==1 and userid!=null and userid!=''">
                and (PK_TaskID in
                (
                SELECT
                fk_taskid
                FROM
                T_BAS_TaskFlowRecordInfo
                <where>
                    <if test="userid!=null and userid!=''">
                        or FK_TaskHandleUserID = #{userid}
                    </if>
                    <if test="tasktype!=null and tasktype>0">
                        and FK_TaskType =#{tasktype}
                    </if>
                </where>

                )
                ) or (taskstatus = 0
                <if test="tasktype!=null and tasktype>0">
                    and FK_TaskType =#{tasktype}
                </if>
                )
            </if>
            <choose>
                <when test="statustype!=null and statustype!='' and 'needassign'.equals(statustype)">
                    and TaskStatus=0
                </when>
                <when test="statustype!=null and statustype!='' and 'needfeedback'.equals(statustype)">
                    and TaskStatus=1
                </when>
                <when test="statustype!=null and statustype!='' and 'feedbacking'.equals(statustype)">
                    and TaskStatus=2
                </when>
                <when test="statustype!=null and statustype!='' and 'hasclose'.equals(statustype)">
                    and TaskStatus=4
                </when>
                <when test="statuslist!=null and statuslist.size>0">
                    and TaskStatus in
                    <foreach collection="statuslist" item="item" separator="," close=")" open="(">
                        #{item}
                    </foreach>
                </when>
            </choose>
        </trim>
        )t
    </select>


    <!--
           author:chengzq
           description: 自定义条件查询日常任务
           param:
           date: 2019/08/19 08:46
       -->
    <select id="getAPPDaliyTaskByParamMap" resultMap="DaliyResultMap" parameterType="map">
        SELECT
        PK_TaskID,
        TaskName,
        TaskStatus,
        FK_TaskType,
        FK_Pollutionid,
        CONVERT (VARCHAR (10),T_BAS_TaskDisposeManagement.TaskCreateTime,120) TaskCreateTime,
        case TaskStatus when 0 then '待分派' when 1 then '待处理' when 2 then '处理中' when 3 then '已忽略' when 4 then '已完成' end
        status
        FROM
        T_BAS_TaskDisposeManagement
        <if test="datauserid != null and datauserid !=''">
            JOIN (
            SELECT
            FK_MonitorPointID
            FROM
            T_BAS_UserMonitorPointRelationData
            WHERE
            T_BAS_UserMonitorPointRelationData.FK_UserID = #{datauserid}
            GROUP BY
            FK_MonitorPointID
            UNION
            SELECT
            PK_ID
            FROM
            T_AQ_RiskInfo
            ) relation ON T_BAS_TaskDisposeManagement.FK_Pollutionid = relation.FK_MonitorPointID
        </if>

        <trim prefix="where" prefixOverrides="AND||OR">
            <if test="tasktype!=null and tasktype>0">
                and FK_TaskType =#{tasktype}
            </if>
            <if test="starttime != null and starttime !=''">
                AND CONVERT (VARCHAR (10),T_BAS_TaskDisposeManagement.TaskCreateTime,120) >= #{starttime}
            </if>
            <if test="endtime != null and endtime !=''">
                AND CONVERT (VARCHAR (10),T_BAS_TaskDisposeManagement.TaskCreateTime,120) <![CDATA[<=]]>
                #{endtime}
            </if>
            <if test="taskname!=null and taskname!=''">
                and taskname like concat('%',#{taskname},'%')
            </if>
            <if test="isown!=null and isown==1 and userid!=null and userid!=''">
                and (PK_TaskID in
                (
                SELECT
                fk_taskid
                FROM
                T_BAS_TaskFlowRecordInfo
                <where>
                    <if test="userid!=null and userid!=''">
                        or FK_TaskHandleUserID = #{userid}
                    </if>
                    <if test="tasktype!=null and tasktype>0">
                        and FK_TaskType =#{tasktype}
                    </if>
                </where>

                )
                )
            </if>
            <choose>
                <when test="statustype!=null and statustype!='' and 'needassign'.equals(statustype)">
                    and TaskStatus=0
                </when>
                <when test="statustype!=null and statustype!='' and 'needfeedback'.equals(statustype)">
                    and TaskStatus=1
                </when>
                <when test="statustype!=null and statustype!='' and 'feedbacking'.equals(statustype)">
                    and TaskStatus=2
                </when>
                <when test="statustype!=null and statustype!='' and 'hasclose'.equals(statustype)">
                    and TaskStatus=4
                </when>
                <when test="statuslist!=null and statuslist.size>0">
                    and TaskStatus in
                    <foreach collection="statuslist" item="item" separator="," close=")" open="(">
                        #{item}
                    </foreach>
                </when>
            </choose>
        </trim>
    </select>

    <!--
        author:chengzq
        description: 自定义条件查询日常任务
        param:
        date: 2019/08/19 08:46
    -->
    <select id="getDaliyTaskDetailByParamMap" resultMap="DaliyDetailResultMap" parameterType="map">
        SELECT
        PK_TaskID,
        TaskName,
        FK_ProblemType,
        TaskStatus,
        TaskRemark,
        FK_TaskType,
        FeedbackResults,
        FileID,
        convert (varchar (19),TaskCreateTime,120)TaskCreateTime,
        case TaskStatus when 0 then '待分派' when 1 then '待处理' when 2 then '处理中' when 3 then '已忽略' when 4 then '已完成' when 5 then '待审核' end
        status,
        convert (varchar(19),TaskRealStartDate,120)TaskRealStartDate,
        convert (varchar(19),TaskRealEndDate,120)TaskRealEndDate,
        convert (varchar(19),TaskStartDate,120)TaskStartDate,
        convert (varchar(19),TaskEndDate,120)TaskEndDate,
        case FK_TaskSource when 1 then '领导交办' when 2 then '后督察' when 3 then '专项任务' end FK_TaskSource
        FROM
        T_BAS_TaskDisposeManagement
        <trim prefix="where" prefixOverrides="AND||OR">
            <if test="tasktype!=null and tasktype>0">
                and FK_TaskType =#{tasktype}
            </if>
            <if test="taskid!=null and taskid!=''">
                and PK_TaskID =#{taskid}
            </if>
        </trim>
    </select>


    <!--
        author:chengzq
        description: 获取流程信息
        param:
        date: 2019/08/23 13:12
    -->
    <select id="getDaliyTaskRecordInfoByParamMap" resultMap="RecordInfoDetailResultMap" parameterType="map">
        SELECT
        PK_TaskID,
        TaskName,
        FK_ProblemType,
        TaskStatus,
        TaskRemark,
        FeedbackResults,
        FK_TaskType,
        FileID,
        convert (varchar (19),TaskCreateTime,120)TaskCreateTime,
        case TaskStatus when 0 then '待分派' when 1 then '待处理' when 2 then '处理中' when 3 then '已忽略' when 4 then '已完成' when 5 then '待审核' end
        status
        FROM
        T_BAS_TaskDisposeManagement
        <trim prefix="where" prefixOverrides="AND||OR">
            <if test="tasktype!=null and tasktype>0">
                and FK_TaskType =#{tasktype}
            </if>
            <if test="taskid!=null and taskid!=''">
                and PK_TaskID =#{taskid}
            </if>
        </trim>
    </select>


    <!-- author:xsm description: 获取按污染源分组获取单月报警任务信息 date: 2019/07/18 15:02-->
    <select id="getAlarmTaskListDataByMonitortime" parameterType="map" resultType="map">
        SELECT DISTINCT
        COUNT(PK_TaskID) num,
        sum(case when T_BAS_TaskDisposeManagement.TaskStatus = 4 then 1 else 0 end) as completednum,
        T_BAS_TaskDisposeManagement.FK_Pollutionid,
        T_BAS_Pollution.PollutionName
        FROM T_BAS_TaskDisposeManagement JOIN T_BAS_Pollution on
        T_BAS_TaskDisposeManagement.FK_Pollutionid = T_BAS_Pollution.PK_PollutionID
        <trim prefix="where" prefixOverrides="AND||OR">
            T_BAS_TaskDisposeManagement.FK_Pollutionid !=''
            AND T_BAS_TaskDisposeManagement.FK_TaskType = #{tasktype}
            <if test="monitortime != null and monitortime !=''">
                AND CONVERT (VARCHAR (7),T_BAS_TaskDisposeManagement.TaskCreateTime,120) = #{monitortime}
            </if>
        </trim>
        GROUP BY T_BAS_TaskDisposeManagement.FK_Pollutionid,T_BAS_Pollution.PollutionName
    </select>


    <!-- author:xsm description: 根据月份统计该月有多少条报警任务 date: 2019/07/18 15:02-->
    <select id="getAlarmTaskNumByParamMap" parameterType="map" resultType="java.lang.Integer">
        SELECT DISTINCT
        COUNT(PK_TaskID) num
        FROM T_BAS_TaskDisposeManagement JOIN T_BAS_Pollution on
        T_BAS_TaskDisposeManagement.FK_Pollutionid = T_BAS_Pollution.PK_PollutionID
        <trim prefix="where" prefixOverrides="AND||OR">
            T_BAS_TaskDisposeManagement.FK_Pollutionid !=''
            AND T_BAS_TaskDisposeManagement.FK_TaskType = #{tasktype}
            <if test="monitortime != null and monitortime !=''">
                AND CONVERT (VARCHAR (7),T_BAS_TaskDisposeManagement.TaskCreateTime,120) = #{monitortime}
            </if>
        </trim>
    </select> 
    
    
    <!--统计任务数 lip 2022/3/10 10:15 -->
    <select id="getTotalTaskNumByParam" parameterType="map" resultType="long">
        select
          count(t.pk_taskid)
        from
        t_bas_taskdisposemanagement t
        <trim prefix="where" prefixOverrides="AND||OR">
              t.FK_TaskType = #{tasktype}
            <if test="tasktype != '3'.toString()">
                AND  t.FK_Pollutionid !='' and t.FK_Pollutionid is not null
            </if>

            <if test="starttime != null and starttime !=''">
                AND CONVERT (VARCHAR (10),t.TaskCreateTime,120) >= #{starttime}
            </if>

            <if test="endtime != null and endtime !=''">
                AND CONVERT (VARCHAR (10),t.TaskCreateTime,120) <![CDATA[<=]]> #{endtime}
            </if>

            <if test="taskstatus != null and taskstatus.size>0 ">
                and t.taskstatus in
                <foreach item="item" index="index" collection="taskstatus"
                         open="(" separator="," close=")">
                    #{item}
                </foreach>
            </if>

        </trim>
    </select>

    <!-- author:xsm description: 根据自定义参数按任务状态分组统计单个企业的任务数据 date: 2019/08/27 9:32-->
    <select id="countPollutionAlarmTaskGroupByStatusByParamMap" parameterType="map" resultType="map">
        SELECT DISTINCT
        COUNT(PK_TaskID) num,
        t1.TaskStatus
        FROM
        T_BAS_TaskDisposeManagement t1
        LEFT JOIN T_BAS_WaterOutputInfo t2 on t1.FK_Pollutionid=t2.PK_ID
        left join T_BAS_GASOutPutInfo t3 on t1.FK_Pollutionid=t3.PK_ID
        left join T_BAS_UnorganizedMonitorPointInfo t4 on t1.FK_Pollutionid=t4.PK_ID
        left join T_BAS_Pollution on t2.FK_Pollutionid=PK_PollutionID or t3.FK_PollutionID=PK_PollutionID or
        t4.FK_Pollutionid=PK_PollutionID
        <trim prefix="where" prefixOverrides="AND||OR">
            t1.FK_Pollutionid !=''
            <choose>
                <when test="tasktypes!=null and tasktypes.size>0 ">
                    AND t1.FK_TaskType in
                    <foreach collection="tasktypes" item="item" separator="," close=")" open="(">
                        #{item}
                    </foreach>
                </when>
                <when test="tasktype!=null and tasktype!='' ">
                    AND t1.FK_TaskType = #{tasktype}
                </when>
            </choose>
            <if test="starttime != null and starttime !=''">
                AND CONVERT (VARCHAR (10),t1.TaskCreateTime,120) >= #{starttime}
            </if>
            <if test="endtime != null and endtime !=''">
                AND CONVERT (VARCHAR (10),t1.TaskCreateTime,120) <![CDATA[<=]]>
                #{endtime}
            </if>
            <if test="pollutionid != null and pollutionid !=''">
                AND PK_PollutionID = #{pollutionid}
            </if>
        </trim>
        GROUP BY t1.TaskStatus
    </select>


    <!-- author:xsm description: app端根据污染源ID和时间范围获取关联的报警任务信息 date: 2019/08/27 9:32-->
    <select id="getAlarmTaskInfoByParamMap" parameterType="map" resultType="map">
        SELECT A.PK_TaskID, A.TaskStatus,A.FK_Pollutionid,A.isfeedback,
        <if test="isnobutton =='is'">
            '1' hasbutton
        </if>
        <if test="isnobutton =='no'">
            case A.isfeedback when '1' THEN
            '1' ELSE '0' end hasbutton
        </if>
        FROM(
        SELECT distinct ROW_NUMBER() OVER (ORDER BY t3.TaskStatus,CONVERT (
        VARCHAR (10),
        t3.TaskCreateTime,
        120
        ) DESC) AS RowNumber,t3.PK_TaskID,t3.TaskStatus,t3.FK_Pollutionid,p.PollutionName,CONVERT (VARCHAR
        (10),t3.TaskCreateTime,120) TaskCreateTime,
        STUFF( ( SELECT ',' + T2.User_Name FROM
        (
        SELECT FK_TaskID,u.User_Name,u.User_ID
        FROM T_BAS_TaskFlowRecordInfo t,Base_UserInfo u
        WHERE t.FK_TaskHandleUserID = u.User_ID
        and t.CurrentTaskStatus = '待处理'
        and t.TaskComment is null
        AND FK_TaskType = 1
        ) T2
        WHERE T2.FK_TaskID = T1.FK_TaskID FOR XML PATH ('')
        ),1,1,'') user_name,
        MAX(CASE T1.FK_TaskHandleUserID WHEN #{userid} THEN
        '1' ELSE '0' END ) isfeedback
        FROM T_BAS_TaskDisposeManagement t3 LEFT JOIN T_BAS_TaskFlowRecordInfo t1 ON t1.FK_TaskID = t3.PK_TaskID
        JOIN T_BAS_Pollution p ON t3.FK_Pollutionid=p.PK_PollutionID
        <if test="datauserid != null and datauserid !=''">
            JOIN (
            SELECT
            FK_PollutionID
            FROM
            (select FK_PollutionID,FK_UserID FROM T_BAS_UserMonitorPointRelationData WHERE
            T_BAS_UserMonitorPointRelationData.FK_PollutionID is NOT NULL UNION
            select FK_MonitorPointID as FK_PollutionID,FK_UserID FROM T_BAS_UserMonitorPointRelationData WHERE
            T_BAS_UserMonitorPointRelationData.FK_PollutionID IS NULL
            ) usertable
            WHERE
            usertable.FK_UserID = #{datauserid}
            GROUP BY
            FK_PollutionID
            ) relation ON t3.FK_Pollutionid = relation.FK_PollutionID
        </if>
        where
        t3.FK_TaskType = 1
        <if test="starttime != null and starttime !=''">
            AND CONVERT (VARCHAR (10),t3.TaskCreateTime,120) >= #{starttime}
        </if>
        <if test="endtime != null and endtime !=''">
            AND CONVERT (VARCHAR (10),t3.TaskCreateTime,120) <![CDATA[<=]]> #{endtime}
        </if>
        <if test="pollutionids != null and pollutionids.size>0 ">
            and t3.FK_Pollutionid in
            <foreach item="item" index="index" collection="pollutionids"
                     open="(" separator="," close=")">
                #{item}
            </foreach>
        </if>
        GROUP BY
        t3.PK_TaskID,t1.FK_TaskID,t3.TaskStatus,t3.FK_Pollutionid,p.PollutionName,CONVERT (VARCHAR
        (10),t3.TaskCreateTime,120)
        ) as A
        ORDER BY A.TaskStatus,CONVERT (VARCHAR (10),A.TaskCreateTime,120) DESC
    </select>


    <!-- author:xsm description: 根据自定义查询条件获取运维任务信息(有分派按钮权限用户） date: 2019/07/16 13:20-->
    <select id="getAllDevOpsTaskInfoByParams" parameterType="map" resultType="map">
        SELECT
        <if test="pagesize!=null and pagesize!='' ">
            TOP ${pagesize}
        </if>
        *
        FROM
        (
        SELECT
        ROW_NUMBER ( ) OVER ( ORDER BY TaskStatus, CONVERT ( VARCHAR ( 19 ), TaskEndTime, 120 ) DESC ) AS RowNumber,*
        FROM
        (
        SELECT DISTINCT
        t3.PK_TaskID,
        t3.TaskStatus,
        t3.FK_Pollutionid,
        t3.FK_MonitorPointTypeCode,
        t3.RecoveryStatus,
        case WHEN t3.RecoveryStatus = 0 THEN '未恢复' WHEN t3.RecoveryStatus = 1 THEN '已恢复' END recoverystatusname,
        CONVERT (VARCHAR(19),t3.RecoveryTime,120) recoverytime,
        PUB_CODE_MonitorPointType.Name monitorpointtypename,
        case when t3.FK_TaskType=7 then '2' else PUB_CODE_MonitorPointType.Category end Category,
        alltype.monitorpointname,
        case t3.TaskStatus when 0 then '待分派' when 1 then '待处理' when 2 then '处理中' when 3 then '已忽略' when 4 then '已完成' when 4 then '已完成' end
        TaskStatusName,
        alltype.DGIMN,
        alltype.pointname,
        alltype.monitorpointid,
        alltype.FK_Pollutionid pollutionid,
        alltype.PollutionName,
        alltype.Longitude,
        alltype.Latitude,
        alltype.MonitorPointCategory,
        t_bas_devicestatus.AlarmLevel onlineAlarmLevel,
        t_bas_devicestatus.status onlinestatus,
        alltype.ShorterName ShorterName,
        datediff( minute, t3.AlarmStartTime, t3.TaskEndTime) overtimenum,
        CASE t3.TaskStatus WHEN 0 then datediff( minute, t3.TaskCreateTime, GETDATE() ) else 0 end unallocatednum,
        CONVERT (VARCHAR (19),t3.TaskCreateTime,120) TaskCreateTime,
        CONVERT (VARCHAR(19),t3.AlarmStartTime,120) AlarmStartTime,
        t3.FK_TaskType,
        CONVERT (VARCHAR(19),t3.TaskEndTime,120) TaskEndTime
        FROM (select
        ttwo.* from
        T_BAS_TaskDisposeManagement ttwo
        where ttwo.TaskStatus != 0
        <if test="tasktype !=null">
            AND ttwo.FK_TaskType = #{tasktype}
        </if>
        <if test="hasauthor!=null and hasauthor=='0'.toString() ">
            and ttwo.PK_TaskID IN (SELECT distinct FK_TaskID FROM T_BAS_TaskFlowRecordInfo
            WHERE T_BAS_TaskFlowRecordInfo.FK_TaskHandleUserID = #{feedbackuserid}
            <if test="tasktype !=null">
                AND T_BAS_TaskFlowRecordInfo.FK_TaskType = #{tasktype}
            </if>
            <if test="currenttaskstatuss !=null and currenttaskstatuss.size()>0">
                and   T_BAS_TaskFlowRecordInfo.currenttaskstatus in
                <foreach collection="currenttaskstatuss" separator="," open="(" close=")" item="item">
                    #{item}
                </foreach>
            </if>

            )
        </if>
        <if test="hasauthor!=null and hasauthor=='1'.toString() ">
            union
            select
            tone.* from
            T_BAS_TaskDisposeManagement tone
            where tone.TaskStatus = 0
            <if test="tasktype !=null">
                AND tone.FK_TaskType = #{tasktype}
            </if>
        </if>
        ) t3
        LEFT JOIN (
        SELECT p.PollutionName,p.ShorterName,t2.PK_ID monitorpointid,t2.OutputName pointname,t2.DGIMN,p.ShorterName+'_'+t2.OutputName
        monitorpointname,t2.FK_Pollutionid,'1' monitorpointtype,t2.OutputLongitude Longitude,t2.OutputLatitude Latitude,null MonitorPointCategory  from T_BAS_WaterOutputInfo t2
        LEFT JOIN T_BAS_Pollution p ON t2.FK_Pollutionid = p.PK_PollutionID
        WHERE (t2.OutPutType !=3 or t2.OutPutType is null)
        UNION
        SELECT p.PollutionName,p.ShorterName,t3.PK_ID monitorpointid,t3.OutputName pointname,t3.DGIMN,p.ShorterName+'_'+t3.OutputName
        monitorpointname,t3.FK_Pollutionid,'37' monitorpointtype,t3.OutputLongitude Longitude,t3.OutputLatitude Latitude,null MonitorPointCategory from T_BAS_WaterOutputInfo t3
        LEFT JOIN T_BAS_Pollution p ON t3.FK_Pollutionid = p.PK_PollutionID
        WHERE t3.OutPutType =3
        UNION
        SELECT p.PollutionName,p.ShorterName,t4.PK_ID monitorpointid,t4.OutputName pointname,t4.DGIMN,p.ShorterName+'_'+t4.OutputName
        monitorpointname,t4.FK_Pollutionid,t4.FK_MonitorPointTypeCode monitorpointtype,t4.OutputLongitude Longitude,t4.OutputLatitude Latitude,null MonitorPointCategory from T_BAS_GASOutPutInfo t4
        LEFT JOIN T_BAS_Pollution p ON t4.FK_Pollutionid = p.PK_PollutionID
        UNION
        SELECT p.PollutionName,p.ShorterName,t5.PK_ID monitorpointid,t5.MonitorPointName
        pointname,t5.DGIMN,p.ShorterName+'_'+t5.MonitorPointName
        monitorpointname,t5.FK_Pollutionid,t5.FK_MonitorPointTypeCode monitorpointtype,t5.Longitude,t5.Latitude,null MonitorPointCategory from
        T_BAS_UnorganizedMonitorPointInfo t5
        LEFT JOIN T_BAS_Pollution p ON t5.FK_Pollutionid = p.PK_PollutionID
        WHERE t5.FK_MonitorPointTypeCode in(40,41)
        UNION
        SELECT '' PollutionName,''ShorterName,t6.PK_MonitorPointID monitorpointid,t6.MonitorPointName
        pointname,t6.DGIMN,t6.MonitorPointName monitorpointname,'' FK_Pollutionid,t6.FK_MonitorPointTypeCode
        monitorpointtype,t6.Longitude,t6.Latitude,t6.MonitorPointCategory from T_BAS_OtherMonitorPoint t6 WHERE t6.FK_MonitorPointTypeCode in(9,10,33,12)
        UNION
        SELECT '' PollutionName,''ShorterName,tsz.PK_WaterStationID monitorpointid,tsz.MonitorPointName
        pointname,tsz.DGIMN,tsz.MonitorPointName monitorpointname,'' FK_Pollutionid,'6'
        monitorpointtype,tsz.Longitude,tsz.Latitude,null MonitorPointCategory from T_BAS_WaterStationInfo tsz
        UNION
        SELECT '' PollutionName,''ShorterName,tair.PK_AirID monitorpointid,tair.MonitorPointName
        pointname,tair.DGIMN,tair.MonitorPointName monitorpointname,'' FK_Pollutionid,'5'
        monitorpointtype,tair.Longitude,tair.Latitude,null MonitorPointCategory from T_BAS_AirMonitorStation tair
        ) alltype ON t3.FK_Pollutionid = alltype.monitorpointid AND t3.FK_MonitorPointTypeCode =
        alltype.monitorpointtype
        LEFT JOIN PUB_CODE_MonitorPointType on PUB_CODE_MonitorPointType.code=t3.FK_MonitorPointTypeCode
        left join t_bas_devicestatus  ON alltype.DGIMN = t_bas_devicestatus.dgimn
        <if test="datauserid != null and datauserid !='' and (tasktype!=null and tasktype !=7 )">
            JOIN (
            SELECT
            FK_MonitorPointID
            FROM
            T_BAS_UserMonitorPointRelationData
            WHERE
            T_BAS_UserMonitorPointRelationData.FK_UserID = #{datauserid}
            GROUP BY
            FK_MonitorPointID
            ) relation ON t3.FK_Pollutionid = relation.FK_MonitorPointID
        </if>
        <if test="datauserid != null and datauserid !='' and (tasktype!=null and tasktype ==7 )">
            JOIN (
            SELECT
            PK_VedioCameraID
            FROM
            T_BAS_UserMonitorPointRelationData
            join T_BAS_VideoCamera on T_BAS_VideoCamera.FK_PollutionId=T_BAS_UserMonitorPointRelationData.FK_PollutionId
            and T_BAS_VideoCamera.FK_MonitorPointTypeCode=T_BAS_VideoCamera.FK_MonitorPointTypeCode
            WHERE
            T_BAS_UserMonitorPointRelationData.FK_UserID = #{datauserid}
            GROUP BY
            PK_VedioCameraID
            ) relation ON t3.FK_Pollutionid = relation.PK_VedioCameraID
        </if>

        <if test="(showcurrentuser !=null and showcurrentuser == 1) or (csstatus !=null and csstatus == 1) or (isAudit != null and isAudit == 1)">
            JOIN T_BAS_TaskFlowRecordInfo recordInfo ON recordInfo.FK_TaskID = t3.PK_TaskID
        </if>
        where
        <choose>
            <when test="tasktype !=nul">
                t3.FK_TaskType = #{tasktype}
            </when>
            <otherwise>
                t3.FK_TaskType = 5
            </otherwise>
        </choose>
        <if test="showcurrentuser !=null and showcurrentuser == 1 ">
            AND recordInfo.FK_TaskHandleUserID = #{userid}
        </if>
        <if test="csstatus !=null and csstatus == 1 ">
            AND recordInfo.CurrentTaskStatus in ('抄送','抄送已读')
        </if>
        <if test="currentstatus != null and currentstatus =='1'.toString">
            and t3.PK_TaskID in(
            SELECT DISTINCT
            tt.FK_TaskID
            FROM
            T_BAS_TaskFlowRecordInfo tt JOIN
            (SELECT
            fk_taskid,
            MAX (TaskHandleTime) TaskHandleTime
            FROM
            T_BAS_TaskFlowRecordInfo t
            WHERE
            CurrentTaskStatus IN ('待处理', '转办')
            and TaskComment is null
            GROUP BY
            t.FK_TaskID) ttt ON tt.FK_TaskID = ttt.fk_taskid AND
            tt.TaskHandleTime = ttt.TaskHandleTime and
            FK_TaskHandleUserID =#{feedbackuserid}
            )
        </if>
        <if test="currentstatus != null and currentstatus =='2'.toString">
            and t3.PK_TaskID in(
            SELECT DISTINCT
            tt.FK_TaskID
            FROM
            T_BAS_TaskFlowRecordInfo tt JOIN
            (SELECT
            fk_taskid,
            MAX (TaskHandleTime) TaskHandleTime
            FROM
            T_BAS_TaskFlowRecordInfo t
            WHERE
            CurrentTaskStatus IN ('处理中', '转办')
            and TaskComment is null
            GROUP BY
            t.FK_TaskID) ttt ON tt.FK_TaskID = ttt.fk_taskid AND
            tt.TaskHandleTime = ttt.TaskHandleTime and
            FK_TaskHandleUserID =#{feedbackuserid}
            )
        </if>
        <if test="currentstatus != null and currentstatus =='3'.toString">
            and t3.PK_TaskID in(
            SELECT
            FK_TaskID
            FROM
            T_BAS_TaskFlowRecordInfo
            where FK_TaskHandleUserID =#{feedbackuserid} and CurrentTaskStatus in ('抄送','抄送已读')
            and fk_taskid not in (select distinct fk_taskid from T_BAS_TaskFlowRecordInfo record where CurrentTaskStatus
            in ('抄送','抄送已读')
            and not exists (select fk_taskid,MAX ( TaskHandleTime ) TaskHandleTime from T_BAS_TaskFlowRecordInfo t where
            t.FK_TaskHandleUserID =#{feedbackuserid} and t.CurrentTaskStatus in ('抄送','抄送已读') and record.fk_taskid=t.fk_taskid and
            record.TaskHandleTime=t.TaskHandleTime GROUP BY FK_TaskID )
            )
            )
        </if>
        <if test="currentstatus != null and currentstatus =='4'.toString">
            and t3.PK_TaskID in(
            SELECT DISTINCT
            tt.FK_TaskID
            FROM
            T_BAS_TaskFlowRecordInfo tt JOIN
            (SELECT
            fk_taskid,
            MAX (TaskHandleTime) TaskHandleTime
            FROM
            T_BAS_TaskFlowRecordInfo t
            WHERE
            CurrentTaskStatus IN ('审核')
            GROUP BY
            t.FK_TaskID) ttt ON tt.FK_TaskID = ttt.fk_taskid AND
            tt.TaskHandleTime = ttt.TaskHandleTime and
            FK_TaskHandleUserID =#{feedbackuserid}
            )
        </if>
        <if test="starttime != null and starttime !=''">
            <choose>
                <when test="starttime.length()==13 ">
                    AND CONVERT (VARCHAR (13),t3.TaskCreateTime,120) >= #{starttime}
                </when>
                <otherwise>
                    AND CONVERT (VARCHAR (10),t3.TaskCreateTime,120) >= #{starttime}
                </otherwise>
            </choose>
        </if>
        <if test="endtime != null and endtime !=''">
            <choose>
                <when test="endtime.length()==13 ">
                    AND CONVERT (VARCHAR (13),t3.TaskCreateTime,120) <![CDATA[<=]]> #{endtime}
                </when>
                <otherwise>
                    AND CONVERT (VARCHAR (10),t3.TaskCreateTime,120) <![CDATA[<=]]> #{endtime}
                </otherwise>
            </choose>
        </if>
        <if test="taskstarttime != null and taskstarttime !=''">
            AND CONVERT (VARCHAR (19),t3.TaskCreateTime,120) >= #{taskstarttime}
        </if>
        <if test="taskendtime != null and taskendtime !=''">
            AND CONVERT (VARCHAR (19),t3.TaskCreateTime,120) <![CDATA[<=]]> #{taskendtime}
        </if>
        <if test="recoverystatuslist != null and recoverystatuslist.size>0 ">
            and t3.RecoveryStatus in
            <foreach item="item" index="index" collection="recoverystatuslist"
                     open="(" separator="," close=")">
                #{item}
            </foreach>
        </if>
        <if test="monitorpointtypes != null and monitorpointtypes.size>0 ">
            and t3.FK_MonitorPointTypeCode in
            <foreach item="item" index="index" collection="monitorpointtypes"
                     open="(" separator="," close=")">
                #{item}
            </foreach>
        </if>
        <if test="statuslist != null and statuslist.size>0 ">
            and (t3.TaskStatus in
            <foreach item="item" index="index" collection="statuslist"
                     open="(" separator="," close=")">
                #{item}
            </foreach>
            <if test="isAudit != null and isAudit == 1">
                or ( recordInfo.CurrentTaskStatus  = '审核' and TaskStatus IN (2,4) AND recordInfo.FK_TaskHandleUserID = #{userid})
            </if>

            )
        </if>

        <if test="!(statuslist != null and statuslist.size>0) and isAudit != null and isAudit == 1">
            and recordInfo.CurrentTaskStatus  = '审核' and TaskStatus IN (2,4) AND recordInfo.FK_TaskHandleUserID = #{userid}
        </if>
        <if test="searchname!=null and searchname!='' ">
            and alltype.PollutionName like concat('%',#{searchname},'%')
        </if>
        <if test="monitorpointname!=null and monitorpointname!='' ">
            and alltype.monitorpointname like concat('%',#{monitorpointname},'%')
        </if>
        <if test="monitorpointid!=null and monitorpointid!='' ">
            and alltype.monitorpointid = #{monitorpointid}
        </if>
        <if test="pollutionid!=null and pollutionid!='' ">
            and alltype.FK_Pollutionid = #{pollutionid}
        </if>
        ) t
        ) as A
        <if test="pagesize!=null and pagesize!='' ">
            WHERE RowNumber > ${(pagenum-1)*pagesize}
        </if>
        ORDER BY A.TaskStatus,CONVERT (VARCHAR (19),A.TaskCreateTime,120) DESC
    </select>


    <!-- author:xsm description: 根据自定义查询条件获取运维任务处理信息 date: 2019/12/11 13:31-->
    <select id="getAllDevOpsTaskInfoCountByParams" resultType="Long">
        SELECT
        COUNT (DISTINCT PK_TaskID) num
        FROM (select
        ttwo.* from
        T_BAS_TaskDisposeManagement ttwo
        where ttwo.TaskStatus != 0
        <if test="tasktype !=null">
            AND ttwo.FK_TaskType = #{tasktype}
        </if>
        <if test="hasauthor!=null and hasauthor=='0'.toString() ">
            and ttwo.PK_TaskID IN (SELECT distinct FK_TaskID FROM T_BAS_TaskFlowRecordInfo
            WHERE T_BAS_TaskFlowRecordInfo.FK_TaskHandleUserID = #{feedbackuserid}
            <if test="tasktype !=null">
                AND T_BAS_TaskFlowRecordInfo.FK_TaskType = #{tasktype}
            </if>

            <if test="currenttaskstatuss !=null and currenttaskstatuss.size()>0">
                and   T_BAS_TaskFlowRecordInfo.currenttaskstatus in
                <foreach collection="currenttaskstatuss" separator="," open="(" close=")" item="item">
                    #{item}
                </foreach>
            </if>

            )
        </if>
        <if test="hasauthor!=null and hasauthor=='1'.toString() ">
            union
            select
            tone.* from
            T_BAS_TaskDisposeManagement tone
            where tone.TaskStatus = 0
            <if test="tasktype !=null">
                AND tone.FK_TaskType = #{tasktype}
            </if>
        </if>
        ) t3
        LEFT JOIN (
        SELECT p.PollutionName,t2.PK_ID monitorpointid,t2.OutputName pointname,t2.DGIMN,p.ShorterName+'_'+t2.OutputName
        monitorpointname,t2.FK_Pollutionid,'1' monitorpointtype from T_BAS_WaterOutputInfo t2
        LEFT JOIN T_BAS_Pollution p ON t2.FK_Pollutionid = p.PK_PollutionID
        WHERE (t2.OutPutType !=3 or t2.OutPutType is null)
        UNION
        SELECT p.PollutionName,t2.PK_ID monitorpointid,t2.OutputName pointname,t2.DGIMN,p.ShorterName+'_'+t2.OutputName
        monitorpointname,t2.FK_Pollutionid,'37' monitorpointtype from T_BAS_WaterOutputInfo t2
        LEFT JOIN T_BAS_Pollution p ON t2.FK_Pollutionid = p.PK_PollutionID
        WHERE t2.OutPutType =3
        UNION
        SELECT p.PollutionName,t4.PK_ID monitorpointid,t4.OutputName pointname,t4.DGIMN,p.ShorterName+'_'+t4.OutputName
        monitorpointname,t4.FK_Pollutionid,t4.FK_MonitorPointTypeCode monitorpointtype from T_BAS_GASOutPutInfo t4
        LEFT JOIN T_BAS_Pollution p ON t4.FK_Pollutionid = p.PK_PollutionID
        UNION
        SELECT p.PollutionName,t5.PK_ID monitorpointid,t5.MonitorPointName
        pointname,t5.DGIMN,p.ShorterName+'_'+t5.MonitorPointName
        monitorpointname,t5.FK_Pollutionid,t5.FK_MonitorPointTypeCode monitorpointtype from
        T_BAS_UnorganizedMonitorPointInfo t5
        LEFT JOIN T_BAS_Pollution p ON t5.FK_Pollutionid = p.PK_PollutionID
        WHERE t5.FK_MonitorPointTypeCode in(40,41)
        UNION
        SELECT t6.MonitorPointName PollutionName,t6.PK_MonitorPointID monitorpointid,t6.MonitorPointName
        pointname,t6.DGIMN,t6.MonitorPointName monitorpointname,'' FK_Pollutionid,t6.FK_MonitorPointTypeCode
        monitorpointtype from T_BAS_OtherMonitorPoint t6 WHERE t6.FK_MonitorPointTypeCode in(9,10,33,12)
        UNION
        SELECT tsz.MonitorPointName PollutionName,tsz.PK_WaterStationID monitorpointid,tsz.MonitorPointName
        pointname,tsz.DGIMN,tsz.MonitorPointName monitorpointname,'' FK_Pollutionid,'6'
        monitorpointtype from T_BAS_WaterStationInfo tsz
        UNION
        SELECT tair.MonitorPointName PollutionName,tair.PK_AirID monitorpointid,tair.MonitorPointName
        pointname,tair.DGIMN,tair.MonitorPointName monitorpointname,'' FK_Pollutionid,'5'
        monitorpointtype from T_BAS_AirMonitorStation tair
        ) alltype ON t3.FK_Pollutionid = alltype.monitorpointid AND t3.FK_MonitorPointTypeCode =
        alltype.monitorpointtype
        LEFT JOIN PUB_CODE_MonitorPointType on PUB_CODE_MonitorPointType.code=t3.FK_MonitorPointTypeCode
        <if test="datauserid != null and datauserid !=''">
            JOIN (
            SELECT
            FK_MonitorPointID
            FROM
            T_BAS_UserMonitorPointRelationData
            WHERE
            T_BAS_UserMonitorPointRelationData.FK_UserID = #{datauserid}
            GROUP BY
            FK_MonitorPointID
            ) relation ON t3.FK_Pollutionid = relation.FK_MonitorPointID
        </if>
        <if test="(showcurrentuser !=null and showcurrentuser == 1) or (csstatus !=null and csstatus == 1) or (isAudit != null and isAudit == 1)">
            JOIN T_BAS_TaskFlowRecordInfo recordInfo ON recordInfo.FK_TaskID = t3.PK_TaskID
        </if>
        where
        <choose>
            <when test="tasktype !=nul">
                t3.FK_TaskType = #{tasktype}
            </when>
            <otherwise>
                t3.FK_TaskType = 5
            </otherwise>
        </choose>
        <if test="showcurrentuser !=null and showcurrentuser == 1 ">
            AND recordInfo.FK_TaskHandleUserID = #{userid}
        </if>
        <if test="csstatus !=null and csstatus == 1 ">
            AND recordInfo.CurrentTaskStatus in ('抄送','抄送已读')
        </if>
        <if test="currentstatus != null and currentstatus =='1'.toString">
            and t3.PK_TaskID in(
            SELECT DISTINCT
            tt.FK_TaskID
            FROM
            T_BAS_TaskFlowRecordInfo tt JOIN
            (SELECT
            fk_taskid,
            MAX (TaskHandleTime) TaskHandleTime
            FROM
            T_BAS_TaskFlowRecordInfo t
            WHERE
            CurrentTaskStatus IN ('待处理', '转办')
            and TaskComment is null
            GROUP BY
            t.FK_TaskID) ttt ON tt.FK_TaskID = ttt.fk_taskid AND
            tt.TaskHandleTime = ttt.TaskHandleTime and
            FK_TaskHandleUserID =#{feedbackuserid}
            )
        </if>
        <if test="currentstatus != null and currentstatus =='2'.toString">
            and t3.PK_TaskID in(
            SELECT DISTINCT
            tt.FK_TaskID
            FROM
            T_BAS_TaskFlowRecordInfo tt JOIN
            (SELECT
            fk_taskid,
            MAX (TaskHandleTime) TaskHandleTime
            FROM
            T_BAS_TaskFlowRecordInfo t
            WHERE
            CurrentTaskStatus IN ('处理中', '转办')
            and TaskComment is null
            GROUP BY
            t.FK_TaskID) ttt ON tt.FK_TaskID = ttt.fk_taskid AND
            tt.TaskHandleTime = ttt.TaskHandleTime and
            FK_TaskHandleUserID =#{feedbackuserid}
            )
        </if>
        <if test="currentstatus != null and currentstatus =='3'.toString">
            and t3.PK_TaskID in(
            SELECT
            FK_TaskID
            FROM
            T_BAS_TaskFlowRecordInfo
            where FK_TaskHandleUserID =#{feedbackuserid} and CurrentTaskStatus in ('抄送','抄送已读')
            and fk_taskid not in (select distinct fk_taskid from T_BAS_TaskFlowRecordInfo record where CurrentTaskStatus
            in ('抄送','抄送已读')
            and not exists (select fk_taskid,MAX ( TaskHandleTime ) TaskHandleTime from T_BAS_TaskFlowRecordInfo t where
            t.FK_TaskHandleUserID =#{feedbackuserid} and t.CurrentTaskStatus in ('抄送','抄送已读') and record.fk_taskid=t.fk_taskid and
            record.TaskHandleTime=t.TaskHandleTime GROUP BY FK_TaskID )
            )
            )
        </if>
        <if test="currentstatus != null and currentstatus =='4'.toString">
            and t3.PK_TaskID in(
            SELECT DISTINCT
            tt.FK_TaskID
            FROM
            T_BAS_TaskFlowRecordInfo tt JOIN
            (SELECT
            fk_taskid,
            MAX (TaskHandleTime) TaskHandleTime
            FROM
            T_BAS_TaskFlowRecordInfo t
            WHERE
            CurrentTaskStatus IN ('审核')
            GROUP BY
            t.FK_TaskID) ttt ON tt.FK_TaskID = ttt.fk_taskid AND
            tt.TaskHandleTime = ttt.TaskHandleTime and
            FK_TaskHandleUserID =#{feedbackuserid}
            )
        </if>
        <if test="starttime != null and starttime !=''">
            <choose>
                <when test="starttime.length()==13 ">
                    AND CONVERT (VARCHAR (13),t3.TaskCreateTime,120) >= #{starttime}
                </when>
                <otherwise>
                    AND CONVERT (VARCHAR (10),t3.TaskCreateTime,120) >= #{starttime}
                </otherwise>
            </choose>
        </if>
        <if test="endtime != null and endtime !=''">
            <choose>
                <when test="endtime.length()==13 ">
                    AND CONVERT (VARCHAR (13),t3.TaskCreateTime,120) <![CDATA[<=]]> #{endtime}
                </when>
                <otherwise>
                    AND CONVERT (VARCHAR (10),t3.TaskCreateTime,120) <![CDATA[<=]]> #{endtime}
                </otherwise>
            </choose>
        </if>
        <if test="recoverystatuslist != null and recoverystatuslist.size>0 ">
            and t3.RecoveryStatus in
            <foreach item="item" index="index" collection="recoverystatuslist"
                     open="(" separator="," close=")">
                #{item}
            </foreach>
        </if>
        <if test="monitorpointtypes != null and monitorpointtypes.size>0 ">
            and t3.FK_MonitorPointTypeCode in
            <foreach item="item" index="index" collection="monitorpointtypes"
                     open="(" separator="," close=")">
                #{item}
            </foreach>
        </if>

        <if test="statuslist != null and statuslist.size>0 ">
            and (t3.TaskStatus in
            <foreach item="item" index="index" collection="statuslist"
                     open="(" separator="," close=")">
                #{item}
            </foreach>
            <if test="isAudit != null and isAudit == 1">
                or (recordInfo.CurrentTaskStatus  = '审核' and TaskStatus IN (2,4) AND recordInfo.FK_TaskHandleUserID = #{userid})
            </if>

            )
        </if>

        <if test="!(statuslist != null and statuslist.size>0) and isAudit != null and isAudit == 1">
            and recordInfo.CurrentTaskStatus  = '审核' and TaskStatus IN (2,4) AND recordInfo.FK_TaskHandleUserID = #{userid}
        </if>

        <if test="monitorpointname!=null and monitorpointname!='' ">
            and alltype.monitorpointname like concat('%',#{monitorpointname},'%')
        </if>
        <if test="monitorpointid!=null and monitorpointid!='' ">
            and alltype.monitorpointid = #{monitorpointid}
        </if>
        <if test="pollutionid!=null and pollutionid!='' ">
            and alltype.FK_Pollutionid = #{pollutionid}
        </if>

    </select>

    <!-- author:xsm description: 获取企业下排口监测的污染物  date: 2019/07/16 13:20-->
    <select id="getAllEntPollutantsByPointTypes" parameterType="java.util.List" resultType="map">
        SELECT DISTINCT PUB_CODE_PollutantFactor.Code,MAX(PUB_CODE_PollutantFactor.Name) Name
        FROM
        PUB_CODE_PollutantFactor
        WHERE PUB_CODE_PollutantFactor.PollutantType in
        <foreach item="item" index="index" collection="pointtypes"
                 open="(" separator="," close=")">
            #{item}
        </foreach>
        AND PUB_CODE_PollutantFactor.IsUsed = '1'
        GROUP BY PUB_CODE_PollutantFactor.Code
        ORDER BY PUB_CODE_PollutantFactor.Code
    </select>

    <!-- author:xsm description: 根据任务主键ID获取关联的运维任务的所有点位信息 date: 2019/07/16 13:20-->
    <select id="getAllMonitorPointInfoByTaskIds" parameterType="map" resultType="map">
        SELECT tt.* FROM
        (SELECT t.PK_TaskID,
        t.TaskCreateTime,
        t.FK_Pollutionid Pollutionid,
        t.FK_MonitorPointTypeCode type,
        alltype.DGIMN,
        alltype.outputid,
        alltype.outputname
        FROM T_BAS_TaskDisposeManagement t
        LEFT JOIN (
        SELECT DISTINCT allt.Pollutionid,allt.DGIMN,allt.outputid,allt.outputname, allt.FK_MonitorPointType FROM (
        SELECT T_BAS_GASOutPutInfo.FK_Pollutionid
        Pollutionid,T_BAS_Pollution.PollutionName,T_BAS_Pollution.ShorterName,T_BAS_DeviceStatus.DGIMN,T_BAS_GASOutPutInfo.OutPutName
        outputname,T_BAS_GASOutPutInfo.PK_ID outputid,T_BAS_GASOutPutInfo.FK_MonitorPointTypeCode FK_MonitorPointType
        FROM
        T_BAS_GASOutPutInfo JOIN T_BAS_DeviceStatus ON T_BAS_GASOutPutInfo.DGIMN = T_BAS_DeviceStatus.DGIMN AND
        T_BAS_GASOutPutInfo.FK_MonitorPointTypeCode=T_BAS_DeviceStatus.FK_MonitorPointTypeCode
        JOIN T_BAS_Pollution ON T_BAS_GASOutPutInfo.FK_PollutionID = T_BAS_Pollution.PK_PollutionID
        UNION ALL
        SELECT T_BAS_WaterOutputInfo.FK_Pollutionid
        Pollutionid,T_BAS_Pollution.PollutionName,T_BAS_Pollution.ShorterName,T_BAS_DeviceStatus.DGIMN,T_BAS_WaterOutputInfo.OutputName
        outputname,T_BAS_WaterOutputInfo.PK_ID outputid,1 FK_MonitorPointType
        FROM
        T_BAS_WaterOutputInfo JOIN T_BAS_DeviceStatus ON T_BAS_WaterOutputInfo.DGIMN = T_BAS_DeviceStatus.DGIMN
        JOIN T_BAS_Pollution ON T_BAS_WaterOutputInfo.FK_PollutionID = T_BAS_Pollution.PK_PollutionID
        WHERE (T_BAS_WaterOutputInfo.OutPutType !=3 or T_BAS_WaterOutputInfo.OutPutType is null)
        UNION ALL
        SELECT T_BAS_WaterOutputInfo.FK_Pollutionid
        Pollutionid,T_BAS_Pollution.PollutionName,T_BAS_Pollution.ShorterName,T_BAS_DeviceStatus.DGIMN,T_BAS_WaterOutputInfo.OutputName
        outputname,T_BAS_WaterOutputInfo.PK_ID outputid,37 FK_MonitorPointType
        FROM
        T_BAS_WaterOutputInfo JOIN T_BAS_DeviceStatus ON T_BAS_WaterOutputInfo.DGIMN = T_BAS_DeviceStatus.DGIMN
        JOIN T_BAS_Pollution ON T_BAS_WaterOutputInfo.FK_PollutionID = T_BAS_Pollution.PK_PollutionID
        WHERE T_BAS_WaterOutputInfo.OutPutType =3
        UNION ALL
        SELECT T_BAS_UnorganizedMonitorPointInfo.FK_Pollutionid
        Pollutionid,T_BAS_Pollution.PollutionName,T_BAS_Pollution.ShorterName,T_BAS_DeviceStatus.DGIMN,T_BAS_UnorganizedMonitorPointInfo.MonitorPointName
        outputname,T_BAS_UnorganizedMonitorPointInfo.PK_ID
        outputid,T_BAS_UnorganizedMonitorPointInfo.FK_MonitorPointTypeCode FK_MonitorPointType
        FROM
        T_BAS_UnorganizedMonitorPointInfo JOIN T_BAS_DeviceStatus ON T_BAS_UnorganizedMonitorPointInfo.DGIMN =
        T_BAS_DeviceStatus.DGIMN
        JOIN T_BAS_Pollution ON T_BAS_UnorganizedMonitorPointInfo.FK_PollutionID = T_BAS_Pollution.PK_PollutionID
        UNION ALL
        SELECT T_BAS_OtherMonitorPoint.PK_MonitorPointID Pollutionid,T_BAS_OtherMonitorPoint.MonitorPointName
        PollutionName,'' ShorterName,T_BAS_DeviceStatus.DGIMN,T_BAS_OtherMonitorPoint.MonitorPointName outputname,
        T_BAS_OtherMonitorPoint.PK_MonitorPointID outputid,T_BAS_OtherMonitorPoint.FK_MonitorPointTypeCode
        FK_MonitorPointType
        FROM T_BAS_OtherMonitorPoint JOIN T_BAS_DeviceStatus ON T_BAS_OtherMonitorPoint.DGIMN = T_BAS_DeviceStatus.DGIMN
        UNION ALL
        SELECT T_BAS_AirMonitorStation.PK_AirID Pollutionid,T_BAS_AirMonitorStation.MonitorPointName PollutionName,''
        ShorterName,T_BAS_DeviceStatus.DGIMN,T_BAS_AirMonitorStation.MonitorPointName
        outputname,T_BAS_AirMonitorStation.PK_AirID outputid,T_BAS_DeviceStatus.FK_MonitorPointTypeCode
        FK_MonitorPointType
        FROM
        T_BAS_AirMonitorStation JOIN T_BAS_DeviceStatus ON T_BAS_AirMonitorStation.DGIMN = T_BAS_DeviceStatus.DGIMN
        UNION ALL
        SELECT T_BAS_WaterStationInfo.PK_WaterStationID Pollutionid,T_BAS_WaterStationInfo.MonitorPointName
        PollutionName,'' ShorterName,T_BAS_DeviceStatus.DGIMN,T_BAS_WaterStationInfo.MonitorPointName
        outputname,T_BAS_WaterStationInfo.PK_WaterStationID outputid,T_BAS_DeviceStatus.FK_MonitorPointTypeCode
        FK_MonitorPointType
        FROM
        T_BAS_WaterStationInfo JOIN T_BAS_DeviceStatus ON T_BAS_WaterStationInfo.DGIMN = T_BAS_DeviceStatus.DGIMN
        ) allt) alltype
        ON t.FK_Pollutionid = alltype.outputid AND alltype.FK_MonitorPointType = t.FK_MonitorPointTypeCode
        <trim prefix="where" prefixOverrides="AND||OR">
            t.FK_TaskType = 5
            <if test="taskids != null and taskids.size>0 ">
                and t.PK_TaskID in
                <foreach item="item" index="index" collection="taskids"
                         open="(" separator="," close=")">
                    #{item}
                </foreach>
            </if>
        </trim>
        ) tt
        <trim prefix="where" prefixOverrides="AND||OR">
            tt.DGIMN IS NOT NULL
            <if test="dgimn != null and dgimn !=''">
                AND tt.DGIMN = #{dgimn}
            </if>
            <if test="starttime != null and starttime !=''">
                AND CONVERT (VARCHAR (10),tt.TaskCreateTime,120) >= #{starttime}
            </if>
            <if test="endtime != null and endtime !=''">
                AND CONVERT (VARCHAR (10),tt.TaskCreateTime,120) <![CDATA[<=]]> #{endtime}
            </if>
        </trim>
    </select>


    <!-- author:xsm description: 根据报警类型和监测时间获取报警任务信息 date: 2019/12/17 9:59-->
    <select id="getAlarmTaskInfoByRemindTypeAndParamMap" parameterType="map" resultType="map">
        <if test="remindtype == '4'.toString()">
            SELECT t.PK_TaskID,
            t.FK_Pollutionid Pollutionid,
            t.TaskStatus,
            t.FK_MonitorPointTypeCode type
            FROM T_BAS_TaskDisposeManagement t
            JOIN (
            SELECT
            FK_PollutionID
            FROM
            (select FK_PollutionID,FK_UserID FROM T_BAS_UserMonitorPointRelationData WHERE
            T_BAS_UserMonitorPointRelationData.FK_PollutionID is NOT NULL UNION
            select FK_MonitorPointID as FK_PollutionID,FK_UserID FROM T_BAS_UserMonitorPointRelationData WHERE
            T_BAS_UserMonitorPointRelationData.FK_PollutionID IS NULL
            ) tt
            WHERE
            tt.FK_UserID = #{userid}
            GROUP BY
            FK_PollutionID
            ) relation ON t.FK_Pollutionid =relation.FK_PollutionID
            <trim prefix="where" prefixOverrides="AND||OR">
                t.FK_TaskType = 5
                <if test="starttime != null and starttime !=''">
                    AND CONVERT (VARCHAR (10),t.TaskCreateTime,120) >= #{starttime}
                </if>
                <if test="endtime != null and endtime !=''">
                    AND CONVERT (VARCHAR (10),t.TaskCreateTime,120) <![CDATA[<=]]> #{endtime}
                </if>
                <if test="monitortype != null and monitortype !=''">
                    AND t.FK_MonitorPointTypeCode = #{monitortype}
                </if>
            </trim>
        </if>
        <if test="remindtype == '5'.toString()">
            SELECT t.PK_TaskID,
            t.FK_Pollutionid Pollutionid,
            t.TaskStatus,
            t.FK_MonitorPointTypeCode type
            FROM T_BAS_TaskDisposeManagement t
            JOIN (
            SELECT
            FK_PollutionID
            FROM
            T_BAS_UserMonitorPointRelationData
            WHERE
            T_BAS_UserMonitorPointRelationData.FK_UserID = #{userid}
            GROUP BY
            FK_PollutionID
            ) relation ON t.FK_Pollutionid =relation.FK_PollutionID
            <trim prefix="where" prefixOverrides="AND||OR">
                t.FK_TaskType = 1
                <if test="starttime != null and starttime !=''">
                    AND CONVERT (VARCHAR (10),t.TaskCreateTime,120) >= #{starttime}
                </if>
                <if test="endtime != null and endtime !=''">
                    AND CONVERT (VARCHAR (10),t.TaskCreateTime,120) <![CDATA[<=]]> #{endtime}
                </if>
            </trim>
        </if>
    </select>


    <!-- author:xsm description: 根据任务类型和污染源id获取监测报警任务信息 date: 2019/12/27 11:25-->
    <select id="getLastRealTimeMonitorTaskByParam" parameterType="map" resultType="map">
        SELECT
        t.PK_TaskID,
        t.FK_Pollutionid Pollutionid,
        t.TaskStatus,
        CONVERT (VARCHAR (10),t.TaskCreateTime,120) taskcreatetime
        FROM (
        SELECT *, ROW_NUMBER() OVER (PARTITION BY FK_Pollutionid,TaskCreateTime ORDER BY TaskCreateTime DESC) rn FROM
        T_BAS_TaskDisposeManagement WHERE T_BAS_TaskDisposeManagement.FK_TaskType=#{tasktype}
        ) t
        <trim prefix="where" prefixOverrides="AND||OR">
            rn = 1
            <if test="tasktype != null and tasktype !=''">
                AND t.FK_TaskType = #{tasktype}
            </if>
            <if test="starttime != null and starttime !=''">
                AND CONVERT (VARCHAR (10),t.TaskCreateTime,120) >= #{starttime}
            </if>
            <if test="endtime != null and endtime !=''">
                AND CONVERT (VARCHAR (10),t.TaskCreateTime,120) <![CDATA[<=]]> #{endtime}
            </if>
            <if test="pollutionids != null and pollutionids.size>0 ">
                and t.FK_Pollutionid in
                <foreach item="item" index="index" collection="pollutionids"
                         open="(" separator="," close=")">
                    #{item}
                </foreach>
            </if>
        </trim>
    </select>


    <!--
        Author: zhagnzhenchao
        Date: 2019/12/31 17:05
        Description: 安全首页任务统计
        Param:
    -->
    <select id="countTaskForTaskTypeAndStatue" resultType="java.util.Map">
        SELECT
            FK_TaskType AS TaskType,
            TaskStatus,
            COUNT (PK_TaskID) AS num
        FROM
            T_BAS_TaskDisposeManagement
        WHERE
            T_BAS_TaskDisposeManagement.FK_TaskType IN ('6', '7','8')
        GROUP BY
            FK_TaskType,
            TaskStatus
    </select>

    <!--
     * @author: lip
     * @date: 2020/5/7 0007 下午 1:38
     * @Description:
     * @updateUser:xsm
     * @updateDate:2021/03/11 0011 下午 12:02
     * @updateDescription:根据自定义参数获取任务信息(报警、运维任务)
    -->
    <select id="getTaskDisposeManagementDataByParam" parameterType="map" resultType="map">
        select
        t1.PK_TaskID,
        t1.TaskStatus,
        t1.RecoveryStatus,
        CONVERT (VARCHAR(19),t1.RecoveryTime,120) RecoveryTime,
        CASE WHEN (t1.FK_TaskType IN (1,5) AND t1.RecoveryStatus = 1) THEN
        (case t1.TaskStatus when 0 then '待分派(已恢复)' when 1 then '待处理' when 2 then '处理中' when 3 then '已忽略' when 4 then '已完成' when 5 then '待审核' end)
        ELSE
        (case t1.TaskStatus when 0 then '待分派' when 1 then '待处理' when 2 then '处理中' when 3 then '已忽略' when 4 then '已完成' when 5 then '待审核' end)
        END statusname,
        t1.FK_Pollutionid,
        t1.FK_ProblemType,
        t1.FK_TaskType,
        CONVERT (VARCHAR(19),t1.TaskCreateTime,120) TaskCreateTime,
        CONVERT (VARCHAR(19),t1.AlarmStartTime,120) AlarmStartTime,
        CONVERT (VARCHAR(19),t1.TaskEndTime,120) TaskEndTime
        FROM ( SELECT
        t.*
        FROM (
        SELECT *, ROW_NUMBER() OVER (PARTITION BY FK_Pollutionid,FK_TaskType
        ORDER BY TaskCreateTime DESC) rn FROM
        T_BAS_TaskDisposeManagement
        <trim prefix="where" prefixOverrides="AND|OR">
            <if test="tasktype != null and tasktype !=''">
                and T_BAS_TaskDisposeManagement.FK_TaskType = #{tasktype}
            </if>
            <if test="tasktypelist != null and tasktypelist.size>0 ">
                and T_BAS_TaskDisposeManagement.FK_TaskType in
                <foreach item="item" index="index" collection="tasktypelist"
                         open="(" separator="," close=")">
                    #{item}
                </foreach>
            </if>
            <if test="todaytime != null and todaytime !=''">
                AND CONVERT (VARCHAR (10),T_BAS_TaskDisposeManagement.TaskCreateTime,120) = #{todaytime}
            </if>
            <if test="starttime != null and starttime !=''">
                AND CONVERT (VARCHAR (19),T_BAS_TaskDisposeManagement.TaskCreateTime,120) >= #{starttime}
            </if>
            <if test="endtime != null and endtime !=''">
                AND CONVERT (VARCHAR (19),T_BAS_TaskDisposeManagement.TaskCreateTime,120) <![CDATA[<=]]> #{endtime}
            </if>
        </trim>
        ) t WHERE rn = 1) t1

        <trim prefix="where" prefixOverrides="AND|OR">
            <if test="pollutionids != null and pollutionids.size>0 ">
                and t1.FK_Pollutionid in
                <foreach item="item" index="index" collection="pollutionids"
                         open="(" separator="," close=")">
                    #{item}
                </foreach>
            </if>
            <if test="monitorpointtypecodes != null and monitorpointtypecodes.size>0 ">
                and t1.FK_MonitorPointTypeCode in
                <foreach item="item" index="index" collection="monitorpointtypecodes"
                         open="(" separator="," close=")">
                    #{item}
                </foreach>
            </if>
        </trim>
        order by t1.TaskCreateTime desc
    </select>


    <select id="getFidAndTypeByParam" parameterType="map" resultType="map">
        select
            t1.PK_TaskID,
            t1.TaskStatus,
            t1.RecoveryStatus,
            CONVERT (VARCHAR(19),t1.RecoveryTime,120) RecoveryTime,
            CASE WHEN (t1.FK_TaskType IN (1,5) AND t1.RecoveryStatus = 1) THEN
            (case t1.TaskStatus when 0 then '待分派(已恢复)' when 1 then '待处理' when 2 then '处理中' when 3 then '已忽略' when 4 then '已完成' when 5 then '待审核' end)
            ELSE
            (case t1.TaskStatus when 0 then '待分派' when 1 then '待处理' when 2 then '处理中' when 3 then '已忽略' when 4 then '已完成' when 5 then '待审核' end)
            END statusname,
            t1.FK_Pollutionid,
            t1.FK_ProblemType,
            t1.FK_TaskType,
            CONVERT (VARCHAR(19),t1.TaskCreateTime,120) TaskCreateTime,
            CONVERT (VARCHAR(19),t1.AlarmStartTime,120) AlarmStartTime,
            CONVERT (VARCHAR(19),t1.TaskEndTime,120) TaskEndTime
       from
        T_BAS_TaskDisposeManagement t1
        <trim prefix="where" prefixOverrides="AND|OR">
            <if test="monitorpointtypecodes != null and monitorpointtypecodes.size>0 ">
                and t1.FK_MonitorPointTypeCode in
                <foreach item="item" index="index" collection="monitorpointtypecodes"
                         open="(" separator="," close=")">
                    #{item}
                </foreach>
            </if>
             <if test="tasktypelist != null and tasktypelist.size>0 ">
                and t1.FK_TaskType in
                <foreach item="item" index="index" collection="tasktypelist"
                         open="(" separator="," close=")">
                    #{item}
                </foreach>
            </if>
            <if test="todaytime != null and todaytime !=''">
                AND CONVERT (VARCHAR (10),t1.TaskCreateTime,120) = #{todaytime}
            </if>
        </trim>
    </select>

    <!-- author:xsm description: 根据自定义查询条件获取安全运维任务条数 date: 2020/1/6 14:07-->
    <select id="CountBeOverdueTaskNumByParam" parameterType="map" resultType="Long">
        SELECT
        COUNT (1) num
        FROM
        T_BAS_TaskDisposeManagement tt
        <trim prefix="where" prefixOverrides="AND|OR">
            <if test="pollutionid!=null and pollutionid!='' ">
                and tt.FK_Pollutionid = #{pollutionid}
            </if>
            <if test="starttime != null and starttime !=''">
                AND CONVERT (VARCHAR (10),tt.TaskCreateTime,120) >= #{starttime}
            </if>
            <if test="endtime != null and endtime !=''">
                AND CONVERT (VARCHAR (10),tt.TaskCreateTime,120) <![CDATA[<=]]> #{endtime}
            </if>
            <if test="tasktype != null and tasktype !=''">
                AND tt.FK_TaskType = #{tasktype}
            </if>
            <if test="tasktypes != null and tasktypes.size>0 ">
                and tt.FK_TaskType in
                <foreach item="item" index="index" collection="tasktypes"
                         open="(" separator="," close=")">
                    #{item}
                </foreach>
            </if>
            <if test="statuslist != null and statuslist.size>0 ">
                and tt.TaskStatus in
                <foreach item="item" index="index" collection="statuslist"
                         open="(" separator="," close=")">
                    #{item}
                </foreach>
            </if>
        </trim>
    </select>


    <select id="getHiddenTaskRecordCountDataByParam" parameterType="map" resultType="map">
        select distinct
        t1.fk_taskid,
        t1.fk_pollutionid,
        max (t1.status) status
        from
        t_aq_hiddendangertaskrecord t1
        where
        CHARINDEX(','+#{userid}+',' , ','+t1.inspectionuser+',') > 0
        group by
        fk_taskid,
        fk_pollutionid
        having
        max (t1.status) in
        <foreach item="item" index="index" collection="status"
                 open="(" separator="," close=")">
            #{item}
        </foreach>

    </select>


    <select id="getTaskDisposeCountData" parameterType="map" resultType="map">
        SELECT
        t1.taskstatus, t1.fk_tasktype,count(t1.pk_taskid)countnum
        FROM
        (
        SELECT
        t1.FK_TaskType,
        t1.pk_taskid,
        t1.taskstatus,
        t1.FK_Pollutionid monitorpointid

        FROM
        t_bas_taskdisposemanagement t1
        WHERE
        t1.taskstatus = '0'
        AND t1.FK_TaskType in
        <foreach item="item" index="index" collection="tasktypes" open="(" separator="," close=")">
            #{item}
        </foreach>
        UNION
        SELECT
        t1.FK_TaskType,
        t1.pk_taskid,
        t1.TaskStatus,
        t1.FK_Pollutionid monitorpointid
        FROM
        t_bas_taskdisposemanagement t1
        INNER JOIN T_BAS_TaskFlowRecordInfo t2 ON t2.FK_TaskType = t1.FK_TaskType
        AND t2.FK_TaskID = t1.PK_TaskID
        AND t1.TaskStatus  <![CDATA[<]]> 3
        AND t2.FK_TaskHandleUserID = #{userid}
        AND t1.FK_TaskType IN
        <foreach item="item" index="index" collection="tasktypes" open="(" separator="," close=")">
            #{item}
        </foreach>
        ) t1
        INNER JOIN
        (
        SELECT
        t1.PK_ID monitorpointid
        FROM
        T_AQ_StorageTankInfo t1
        WHERE t1.DGIMN IN
        <foreach item="item" index="index" collection="userdgimns" open="(" separator="," close=")">
            #{item}
        </foreach>
        UNION
        SELECT
        t1.PK_MonitorPointID monitorpointid
        FROM
        T_AQ_RiskAreaMonitorPoint t1
        WHERE t1.DGIMN IN
        <foreach item="item" index="index" collection="userdgimns" open="(" separator="," close=")">
            #{item}
        </foreach>
        UNION
        SELECT
        t1.PK_VedioCameraID monitorpointid
        FROM
        T_BAS_VideoCamera t1
        UNION
        SELECT
        t1.PK_ID monitorpointid
        FROM
        T_AQ_HazardSourceProductDevice t1
        where
        t1.DGIMN IN
        <foreach item="item" index="index" collection="userdgimns" open="(" separator="," close=")">
            #{item}
        </foreach>
        ) t2
        ON t2.monitorpointid = t1.monitorpointid
        GROUP BY t1.taskstatus, t1.fk_tasktype
    </select>


    <select id="getAlarmTaskDataByParamMap" parameterType="map" resultType="map">
        SELECT
        t1.taskstatus,
        t1.fk_tasktype,
        t1.pk_taskid,
        t1.taskcreatetime,
        t2.monitorpointid,
        t2.monitorpointname,
        t2.monitorpointtype,
        t2.dgimn
        FROM
        (
        SELECT
        t1.FK_TaskType,
        t1.pk_taskid,
        t1.taskstatus,
        t1.FK_Pollutionid monitorpointid,
        CONVERT (
        VARCHAR (10),
        t1.TaskCreateTime,
        120
        ) taskcreatetime
        FROM
        t_bas_taskdisposemanagement t1
        WHERE
        t1.taskstatus = '0'
        AND t1.FK_TaskType = #{tasktype}

        <if test="taskstatuslist != null and taskstatuslist.size>0">
            AND t1.taskstatus in
            <foreach item="item" index="index" collection="taskstatuslist" open="(" separator="," close=")">
                #{item}
            </foreach>
        </if>


        UNION
        SELECT
        t1.FK_TaskType,
        t1.pk_taskid,
        t1.TaskStatus,
        t1.FK_Pollutionid monitorpointid,
        CONVERT (
        VARCHAR (10),
        t1.TaskCreateTime,
        120
        ) taskcreatetime
        FROM
        t_bas_taskdisposemanagement t1
        INNER JOIN T_BAS_TaskFlowRecordInfo t2 ON t2.FK_TaskType = t1.FK_TaskType
        AND t2.FK_TaskID = t1.PK_TaskID
        AND t1.TaskStatus <![CDATA[<]]> 3
        AND t2.FK_TaskHandleUserID = #{userid}
        AND t1.FK_TaskType = #{tasktype}
        <if test="taskstatuslist != null and taskstatuslist.size>0">
            AND t1.taskstatus in
            <foreach item="item" index="index" collection="taskstatuslist" open="(" separator="," close=")">
                #{item}
            </foreach>
        </if>
        ) t1
        INNER JOIN
        (
        SELECT
        t1.PK_ID monitorpointid,
        t3.pollutionname+'-' + T2.StorageTankAreaName + '-' + t1.StorageTankCode monitorpointname,
        '30' monitorpointtype,
        t1.dgimn
        FROM
        T_AQ_StorageTankInfo t1
        INNER JOIN T_AQ_StorageTankAreaInfo T2 ON t1.FK_StorageTankAreaID = T2.PK_ID
        INNER JOIN T_BAS_Pollution t3 ON t2.Fk_pollutionID = t3.PK_PollutionID
        WHERE t1.DGIMN IN
        <foreach item="item" index="index" collection="userdgimns" open="(" separator="," close=")">
            #{item}
        </foreach>
        UNION
        SELECT
        t1.PK_MonitorPointID monitorpointid,
        t3.pollutionname+'-' +t2.RiskAreaName + '-' + t1.MonitorPointName monitorpointname,
        t1.FK_MonitorPointTypeCode as monitorpointtype,
        t1.dgimn
        FROM
        T_AQ_RiskAreaMonitorPoint t1
        INNER JOIN T_AQ_RiskArea t2 ON t2.PK_ID = t1.FK_RiskAreaID
        INNER JOIN T_BAS_Pollution t3 ON t2.Fk_pollutionID = t3.PK_PollutionID
        WHERE t1.DGIMN IN
        <foreach item="item" index="index" collection="userdgimns" open="(" separator="," close=")">
            #{item}
        </foreach>
        UNION
        SELECT
        t1.PK_ID monitorpointid,
        t3.pollutionname + '-' + t2.MajorHazardSourcesName + '-' + t1.DeviceName monitorpointname,
        '57' AS monitorpointtype,
        t1.dgimn
        FROM
        T_AQ_HazardSourceProductDevice t1
        INNER JOIN T_AQ_MajorHazardSources t2 ON t2.PK_ID = t1.FK_MajorHazardSourcesId
        INNER JOIN T_BAS_Pollution t3 ON t2.Fk_pollutionID = t3.PK_PollutionID
        WHERE t1.DGIMN IN
        <foreach item="item" index="index" collection="userdgimns" open="(" separator="," close=")">
            #{item}
        </foreach>


        ) t2
        ON t2.monitorpointid = t1.monitorpointid
        <trim prefix="where" prefixOverrides="AND|OR">
            <if test="searchname !=null and searchname !='' ">
                and t2.monitorpointname like concat('%',#{searchname},'%')
            </if>
            <if test="starttime != null and starttime !=''">
                AND t1.taskcreatetime >= #{starttime}
            </if>
            <if test="endtime != null and endtime !=''">
                AND t1.taskcreatetime <![CDATA[<=]]> #{endtime}
            </if>
        </trim>


    </select>

    <!--
        author: zhangzhenchao
        description: 根据任务类型统计各个任务类型待分派任务个数
        param:
        date: 2020/1/9 14:25
    -->
    <select id="countNeedassignNumByTaskTypes" parameterType="map" resultType="java.util.Map">
        SELECT
        T_BAS_TaskDisposeManagement.FK_TaskType AS TaskType,
        COUNT (
        T_BAS_TaskDisposeManagement.PK_TaskID
        ) AS num
        FROM
        T_BAS_TaskDisposeManagement
        JOIN (
        SELECT
        FK_MonitorPointID
        FROM
        T_BAS_UserMonitorPointRelationData
        WHERE
        T_BAS_UserMonitorPointRelationData.FK_UserID = #{datauserid}
        GROUP BY
        FK_MonitorPointID
        ) relation ON T_BAS_TaskDisposeManagement.FK_Pollutionid =relation.FK_MonitorPointID
        join(
        select
        T_AQ_StorageTankInfo.PK_ID MonitorPointID,
        T_AQ_StorageTankInfo.DGIMN,
        T_AQ_StorageTankInfo.StorageTankCode AS MonitorPointName
        from T_AQ_StorageTankAreaInfo JOIN T_AQ_StorageTankInfo on T_AQ_StorageTankAreaInfo.PK_ID =
        T_AQ_StorageTankInfo.FK_StorageTankAreaID
        join T_BAS_Pollution on T_BAS_Pollution.PK_Pollutionid = T_AQ_StorageTankAreaInfo.fk_pollutionid
        union
        select
        T_AQ_RiskAreaMonitorPoint.PK_MonitorPointID MonitorPointID,
        T_AQ_RiskAreaMonitorPoint.DGIMN,
        T_AQ_RiskAreaMonitorPoint.MonitorPointName
        from T_AQ_RiskAreaMonitorPoint JOIN T_BAS_Pollution on T_BAS_Pollution.PK_Pollutionid =
        T_AQ_RiskAreaMonitorPoint.fk_pollutionid
        ) tt on T_BAS_TaskDisposeManagement.FK_Pollutionid = tt.MonitorPointID
        WHERE
        T_BAS_TaskDisposeManagement.TaskStatus = 0
        AND T_BAS_TaskDisposeManagement.FK_TaskType IN
        <foreach item="item" index="index" collection="taskTypes"
                 open="(" separator="," close=")">
            #{item}
        </foreach>
        GROUP BY
        T_BAS_TaskDisposeManagement.FK_TaskType
    </select>

    <!--
     author: zhangzhenchao
     description: 根据任务类型统计各个任务类型待处理任务个数
     param:
     date: 2020/1/9 14:33
 -->
    <select id="countNeedFeedBackNumByTaskTypes" resultType="java.util.Map">
        SELECT
        T_BAS_TaskDisposeManagement.FK_TaskType AS TaskType,
        COUNT (
        T_BAS_TaskDisposeManagement.PK_TaskID
        ) AS num
        FROM
        T_BAS_TaskDisposeManagement
        JOIN T_BAS_TaskFlowRecordInfo ON T_BAS_TaskDisposeManagement.PK_TaskID = T_BAS_TaskFlowRecordInfo.FK_TaskID
        AND T_BAS_TaskDisposeManagement.FK_TaskType = T_BAS_TaskFlowRecordInfo.FK_TaskType
        JOIN (
        SELECT
        FK_MonitorPointID
        FROM
        T_BAS_UserMonitorPointRelationData
        WHERE
        T_BAS_UserMonitorPointRelationData.FK_UserID = #{userID}
        GROUP BY
        FK_MonitorPointID
        ) relation ON T_BAS_TaskDisposeManagement.FK_Pollutionid =relation.FK_MonitorPointID
        WHERE
        T_BAS_TaskDisposeManagement.TaskStatus = 1
        AND T_BAS_TaskFlowRecordInfo.CurrentTaskStatus = '待处理' and  T_BAS_TaskDisposeManagement.TaskComment is null
        <if test="userID != null and userID !=''">
            AND T_BAS_TaskFlowRecordInfo.FK_TaskHandleUserID = #{userID}
        </if>
        AND T_BAS_TaskDisposeManagement.FK_TaskType IN
        <foreach item="item" index="index" collection="taskTypes"
                 open="(" separator="," close=")">
            #{item}
        </foreach>
        GROUP BY
        T_BAS_TaskDisposeManagement.FK_TaskType;
    </select>

    <select id="getTaskInfoByTaskTypes" resultType="map" parameterType="map">
        SELECT
        convert(varchar(10),TaskCreateTime,120)TaskCreateTime,
        FK_TaskType,
        TaskStatus
        FROM
        T_BAS_TaskDisposeManagement
        <if test="userid != null and userid !=''">
            JOIN
            (
            SELECT
            FK_MonitorPointID
            FROM
            T_BAS_UserMonitorPointRelationData
            WHERE
            T_BAS_UserMonitorPointRelationData.FK_UserID = #{userid}
            GROUP BY
            FK_MonitorPointID
            ) relation ON T_BAS_TaskDisposeManagement.FK_Pollutionid =relation.FK_MonitorPointID
        </if>

        <where>
            <if test="fktasktypes!=null and fktasktypes.size>0">
                and fk_TaskType IN
                <foreach collection="fktasktypes" item="item" open="(" close=")" separator=",">
                    #{item}
                </foreach>
            </if>
            <if test="monitorpointtype!=null and monitorpointtype!='' ">
                and T_BAS_TaskDisposeManagement.FK_MonitorPointTypeCode = #{monitorpointtype}
            </if>
             <if test="monitorpointid!=null and monitorpointid!='' ">
                and T_BAS_TaskDisposeManagement.FK_Pollutionid = #{monitorpointid}
            </if>
            <if test="starttime != null and starttime !=''">
                AND CONVERT (VARCHAR (10),TaskCreateTime,120) >= #{starttime}
            </if>
            <if test="endtime != null and endtime !=''">
                AND CONVERT (VARCHAR (10),TaskCreateTime,120) <![CDATA[<=]]> #{endtime}
            </if>
        </where>
    </select>

    <!-- author:xsm description: 统计报警任务已完成和未完成任务占比情况 date: 2020/01/10 10:35-->
    <select id="countAlarmTaskCompletionStatusByParamMap" parameterType="map" resultType="map">
        SELECT
        COUNT (PK_TaskID) totalnum,
        sum(case when t.TaskStatus IN
        <foreach item="item" index="index" collection="uncompletions" open="(" separator="," close=")">
            #{item}
        </foreach>
        then 1 else 0 end) as uncompleted,
        sum(case when t.TaskStatus IN
        <foreach item="item" index="index" collection="completions"
                 open="(" separator="," close=")">
            #{item}
        </foreach>
        then 1 else 0 end) as completed
        FROM T_BAS_TaskDisposeManagement t

        JOIN (
            SELECT
            t2.PK_ID monitorpointid,
            '1' monitorpointtype,
            p.PK_PollutionID as pollutionid
            FROM
            T_BAS_WaterOutputInfo t2
            LEFT JOIN T_BAS_Pollution p ON t2.FK_Pollutionid = p.PK_PollutionID
            WHERE
            ( t2.OutPutType != 3 OR t2.OutPutType IS NULL ) UNION
            SELECT
            t3.PK_ID monitorpointid,
            '37' monitorpointtype,
            p.PK_PollutionID as pollutionid
            FROM
            T_BAS_WaterOutputInfo t3
            LEFT JOIN T_BAS_Pollution p ON t3.FK_Pollutionid = p.PK_PollutionID
            WHERE
            t3.OutPutType = 3 UNION
            SELECT
            t4.PK_ID monitorpointid,
            t4.FK_MonitorPointTypeCode monitorpointtype,
            p.PK_PollutionID as pollutionid
            FROM
            T_BAS_GASOutPutInfo t4
            LEFT JOIN T_BAS_Pollution p ON t4.FK_Pollutionid = p.PK_PollutionID UNION
            SELECT
            t5.PK_ID monitorpointid,
            t5.FK_MonitorPointTypeCode monitorpointtype,
            p.PK_PollutionID as pollutionid
            FROM
            T_BAS_UnorganizedMonitorPointInfo t5
            LEFT JOIN T_BAS_Pollution p ON t5.FK_Pollutionid = p.PK_PollutionID
            WHERE
            t5.FK_MonitorPointTypeCode IN ( 40, 41 ) UNION
            SELECT
            t6.PK_MonitorPointID monitorpointid,
            t6.FK_MonitorPointTypeCode monitorpointtype,
            '' as pollutionid
            FROM
            T_BAS_OtherMonitorPoint t6
            WHERE
            t6.FK_MonitorPointTypeCode != 52 UNION
            SELECT
            tsz.PK_WaterStationID monitorpointid,
            '6' monitorpointtype,
            '' as pollutionid
            FROM
            T_BAS_WaterStationInfo tsz UNION
            SELECT
            tair.PK_AirID monitorpointid,
            '5' monitorpointtype,
            '' as pollutionid
            FROM
            T_BAS_AirMonitorStation tair
        ) pointtable ON t.FK_Pollutionid = pointtable.monitorpointid
        AND t.FK_MonitorPointTypeCode = pointtable.monitorpointtype
        left join PUB_CODE_MonitorPointType on t.FK_MonitorPointTypeCode = PUB_CODE_MonitorPointType.Code
        <trim prefix="where" prefixOverrides="AND|OR">
            <if test="tasktype!=null and tasktype!='' ">
                and t.FK_TaskType = #{tasktype}
            </if>
            <if test="pollutionid!=null and pollutionid!='' ">
                and pointtable.pollutionid = #{pollutionid}
            </if>
            <if test="category!=null and category!='' ">
                and PUB_CODE_MonitorPointType.category = #{category}
            </if>
            <if test="monitorpointtype!=null and monitorpointtype!='' ">
                and t.FK_MonitorPointTypeCode = #{monitorpointtype}
            </if>
            <if test="starttime != null and starttime !=''">
                AND CONVERT (VARCHAR (10),t.TaskCreateTime,120) >= #{starttime}
            </if>
            <if test="endtime != null and endtime !=''">
                AND CONVERT (VARCHAR (10),t.TaskCreateTime,120) <![CDATA[<=]]> #{endtime}
            </if>
            <if test="monitorpointtypes != null and monitorpointtypes.size>0 ">
                and t.FK_MonitorPointTypeCode IN
                <foreach item="item" index="index" collection="monitorpointtypes"
                         open="(" separator="," close=")">
                    #{item}
                </foreach>
            </if>
            <if test="tasktypes != null and tasktypes.size>0 ">
                and t.FK_TaskType IN
                <foreach item="item" index="index" collection="tasktypes"
                         open="(" separator="," close=")">
                    #{item}
                </foreach>
            </if>
        </trim>
    </select>

    <!-- author:xsm description: 统计运维任务已完成和未完成任务占比情况 date: 2020/01/10 10:35-->
    <select id="countDevOpsTaskCompletionStatusByParamMap" parameterType="map" resultType="map">
        SELECT
        COUNT (PK_TaskID) totalnum,
        t.FK_MonitorPointTypeCode,
        t.monitorpointtypename,
        sum(case when t.TaskStatus IN
        <foreach item="item" index="index" collection="uncompletions" open="(" separator="," close=")">
            #{item}
        </foreach>
        then 1 else 0 end) as uncompleted,
        sum(case when t.TaskStatus IN
        <foreach item="item" index="index" collection="completions"
                 open="(" separator="," close=")">
            #{item}
        </foreach>
        then 1 else 0 end) as completed
        FROM (SELECT tt.PK_TaskID,tt.FK_MonitorPointTypeCode,tt.TaskStatus,tt.TaskCreateTime,tt.FK_TaskType,
        PUB_CODE_MonitorPointType.Name monitorpointtypename FROM T_BAS_TaskDisposeManagement tt
        LEFT JOIN PUB_CODE_MonitorPointType on PUB_CODE_MonitorPointType.code=tt.FK_MonitorPointTypeCode
        <if test="userid != null and userid !=''">
            JOIN
            (
            SELECT
            FK_MonitorPointID
            FROM
            T_BAS_UserMonitorPointRelationData
            WHERE
            T_BAS_UserMonitorPointRelationData.FK_UserID = #{userid}
            GROUP BY
            FK_MonitorPointID
            ) relation ON tt.FK_Pollutionid =relation.FK_MonitorPointID
        </if>
        <where>
            <if test="tasktype!=null and tasktype!=''">
                tt.FK_TaskType =#{tasktype})
            </if>
            <if test="tasktypes != null and tasktypes.size>0 ">
                and tt.FK_TaskType IN
                <foreach item="item" index="index" collection="tasktypes"
                         open="(" separator="," close=")">
                    #{item}
                </foreach>
            </if>
        </where>
        ) t
        <trim prefix="where" prefixOverrides="AND|OR">
            <if test="monitorpointtype != null and monitorpointtype !=''">
                AND t.FK_MonitorPointTypeCode= #{monitorpointtype}
            </if>
            <if test="starttime != null and starttime !=''">
                AND CONVERT (VARCHAR (10),t.TaskCreateTime,120) >= #{starttime}
            </if>
            <if test="endtime != null and endtime !=''">
                AND CONVERT (VARCHAR (10),t.TaskCreateTime,120) <![CDATA[<=]]> #{endtime}
            </if>
        </trim>
        GROUP BY t.FK_MonitorPointTypeCode,t.monitorpointtypename
    </select>


    <!-- author:xsm description: 统计运维任务已完成和未完成任务占比情况（无数据权限） date: 2020/04/22 10:53-->
    <select id="getDevOpsTaskRemindDataByMonitorTimes" parameterType="map" resultType="map">
        SELECT
        COUNT (PK_TaskID) totalnum,
        t.FK_MonitorPointTypeCode,
        t.monitorpointtypename,
        sum(case when t.TaskStatus IN
        <foreach item="item" index="index" collection="uncompletions" open="(" separator="," close=")">
            #{item}
        </foreach>
        then 1 else 0 end) as uncompleted,
        sum(case when t.TaskStatus IN
        <foreach item="item" index="index" collection="completions"
                 open="(" separator="," close=")">
            #{item}
        </foreach>
        then 1 else 0 end) as completed
        FROM (SELECT
        tt.PK_TaskID,tt.FK_MonitorPointTypeCode,tt.TaskStatus,tt.TaskCreateTime,tt.FK_TaskType,PUB_CODE_MonitorPointType.Name
        monitorpointtypename FROM T_BAS_TaskDisposeManagement tt
        LEFT JOIN PUB_CODE_MonitorPointType on PUB_CODE_MonitorPointType.code=tt.FK_MonitorPointTypeCode
        WHERE
        <if test="tasktype != null and tasktype !=''">
            tt.FK_TaskType =#{tasktype}
        </if>
        <if test="tasktypes != null and tasktypes.size>0 ">
            tt.FK_TaskType IN
            <foreach item="item" index="index" collection="tasktypes"
                     open="(" separator="," close=")">
                #{item}
            </foreach>
        </if> ) t
        <trim prefix="where" prefixOverrides="AND|OR">
            <if test="monitorpointtype != null and monitorpointtype !=''">
                AND t.FK_MonitorPointTypeCode= #{monitorpointtype}
            </if>
            <if test="starttime != null and starttime !=''">
                AND CONVERT (VARCHAR (10),t.TaskCreateTime,120) >= #{starttime}
            </if>
            <if test="endtime != null and endtime !=''">
                AND CONVERT (VARCHAR (10),t.TaskCreateTime,120) <![CDATA[<=]]> #{endtime}
            </if>
        </trim>
        GROUP BY t.FK_MonitorPointTypeCode,t.monitorpointtypename
    </select>

    <!-- author:xsm description: 根据自定义查询条件和数据权限获取报警任务信息(不考虑按钮权限） date: 2020/01/13 13:20-->
    <select id="getAlarmTaskListDataByParamAndDataUserId" parameterType="map" resultType="map">
        SELECT t.PK_TaskID,t.TaskStatus,t.FK_Pollutionid,p.PollutionName,CONVERT (VARCHAR
        (10),t.TaskCreateTime,120) TaskCreateTime,CONVERT (VARCHAR
        (20),t2.TaskHandleTime,120) assignmenttime,CONVERT (VARCHAR
        (20),t3.TaskHandleTime,120) completetime,
        #{tasktype} tasktypecode,
        STUFF( ( SELECT ',' + T2.User_Name FROM
        (
        SELECT FK_TaskID,u.User_Name,u.User_ID
        FROM T_BAS_TaskFlowRecordInfo tt,Base_UserInfo u
        WHERE tt.FK_TaskHandleUserID = u.User_ID
        and tt.CurrentTaskStatus = '待处理' and tt.TaskComment is null
        AND FK_TaskType = #{tasktype}
        ) T2
        WHERE T2.FK_TaskID = T1.FK_TaskID FOR XML PATH ('')
        ),1,1,'') user_name
        FROM T_BAS_TaskDisposeManagement t
        left JOIN T_BAS_TaskFlowRecordInfo t1 ON t1.FK_TaskID = t.PK_TaskID
        AND t1.CurrentTaskStatus = '待处理' and t1.TaskComment is null
        JOIN T_BAS_Pollution p ON t.FK_Pollutionid=p.PK_PollutionID
        LEFT JOIN (SELECT FK_TaskID,FK_TaskType,TaskHandleTime
        FROM T_BAS_TaskFlowRecordInfo
        WHERE T_BAS_TaskFlowRecordInfo.CurrentTaskStatus = '分派任务' ) t2 ON t.PK_TaskID = t2.FK_TaskID AND t.FK_TaskType =
        t2.FK_TaskType
        LEFT JOIN (SELECT FK_TaskID,FK_TaskType,TaskHandleTime
        FROM T_BAS_TaskFlowRecordInfo
        WHERE T_BAS_TaskFlowRecordInfo.CurrentTaskStatus ='反馈信息' ) t3 ON t.PK_TaskID = t3.FK_TaskID AND t.FK_TaskType =
        t3.FK_TaskType
        <if test="datauserid != null and datauserid !=''">
            JOIN
            (
            SELECT
            FK_MonitorPointID
            FROM
            T_BAS_UserMonitorPointRelationData
            WHERE
            T_BAS_UserMonitorPointRelationData.FK_UserID = #{datauserid}
            GROUP BY
            FK_MonitorPointID
            ) relation ON t.FK_Pollutionid =relation.FK_MonitorPointID
        </if>
        <trim prefix="where" prefixOverrides="AND|OR">
            <if test="tasktype !=null">
                AND t.FK_TaskType = #{tasktype}
            </if>
            <if test="starttime != null and starttime !=''">
                AND CONVERT (VARCHAR (10),t.TaskCreateTime,120) >= #{starttime}
            </if>
            <if test="endtime != null and endtime !=''">
                AND CONVERT (VARCHAR (10),t.TaskCreateTime,120) <![CDATA[<=]]> #{endtime}
            </if>
        </trim>
        ORDER BY CONVERT (VARCHAR (10),t.TaskCreateTime,120) DESC,p.PollutionName
    </select>


    <!-- author:xsm description: 根据自定义查询条件获取报警任务信息(不考虑按钮权限） date: 2020/01/13 13:20-->
    <select id="getAlarmTaskListDataByParam" parameterType="map" resultType="map">
        SELECT t.PK_TaskID,t.TaskStatus,t.FK_Pollutionid,p.PollutionName,CONVERT (VARCHAR
        (10),t.TaskCreateTime,120) TaskCreateTime
        FROM T_BAS_TaskDisposeManagement t,T_BAS_Pollution p
        where t.FK_Pollutionid=p.PK_PollutionID
        <if test="tasktype !=null">
            AND t.FK_TaskType = #{tasktype}
        </if>
        <if test="starttime != null and starttime !=''">
            AND CONVERT (VARCHAR (10),t.TaskCreateTime,120) >= #{starttime}
        </if>
        <if test="endtime != null and endtime !=''">
            AND CONVERT (VARCHAR (10),t.TaskCreateTime,120) <![CDATA[<=]]> #{endtime}
        </if>
        ORDER BY CONVERT (VARCHAR (10),t.TaskCreateTime,120) DESC,p.PollutionName
    </select>

    <!-- author:xsm description: 根据监测时间段返回该时间段内所有日期的报警情况 date: 2020/01/13 13:36-->
    <select id="getTaskSituationByParamMap" parameterType="map" resultType="map">
        SELECT tt.TaskCreateTime,
        MAX(alarmflag) alarmflag
        FROM(
        SELECT CONVERT (VARCHAR(10),t.TaskCreateTime,120) TaskCreateTime,
        CASE WHEN (t.TaskStatus IN(0,1,2)) THEN 2 WHEN (t.TaskStatus IN(3,4)) THEN 1 END alarmflag
        FROM T_BAS_TaskDisposeManagement t
        <trim prefix="where" prefixOverrides="AND|OR">
            <if test="tasktypes != null and tasktypes.size>0 ">
                and t.FK_TaskType IN
                <foreach item="item" index="index" collection="tasktypes"
                         open="(" separator="," close=")">
                    #{item}
                </foreach>
            </if>
            <if test="monitorpointtype != null and monitorpointtype !=''">
                AND t.FK_MonitorPointTypeCode = #{monitorpointtype}
            </if>
            <if test="starttime != null and starttime !=''">
                AND CONVERT (VARCHAR (10),t.TaskCreateTime,120) >= #{starttime}
            </if>
            <if test="endtime != null and endtime !=''">
                AND CONVERT (VARCHAR (10),t.TaskCreateTime,120) <![CDATA[<=]]> #{endtime}
            </if>
        </trim>
        ) tt
        GROUP BY CONVERT (VARCHAR(10),tt.TaskCreateTime,120)
    </select>

    <!-- author:xsm description: 根据自定义查询条件和用户数据权限获取运维任务信息(不考虑按钮权限） date: 2019/07/16 13:20-->
    <select id="getDevOpsTaskListDataByParamAndDataUserId" parameterType="map" resultType="map">
        SELECT
        t.PK_TaskID,t.TaskStatus,t.FK_Pollutionid,t.FK_MonitorPointTypeCode,
        PUB_CODE_MonitorPointType.Name monitorpointtypename,
        alltype.PollutionName,
        CONVERT (VARCHAR (10),t.TaskCreateTime,120) TaskCreateTime
        ,CONVERT (VARCHAR
        (20),t2.TaskHandleTime,120) assignmenttime,CONVERT (VARCHAR
        (20),t3.TaskHandleTime,120) completetime,
        #{tasktype} tasktypecode,
        STUFF( ( SELECT ',' + T2.User_Name FROM
        (
        SELECT FK_TaskID,u.User_Name,u.User_ID
        FROM T_BAS_TaskFlowRecordInfo tt,Base_UserInfo u
        WHERE tt.FK_TaskHandleUserID = u.User_ID
        and tt.CurrentTaskStatus = '待处理' and tt.TaskComment is null
        AND FK_TaskType = #{tasktype}
        ) T2
        WHERE T2.FK_TaskID = T1.FK_TaskID FOR XML PATH ('')
        ),1,1,'') user_name
        FROM T_BAS_TaskDisposeManagement t
        LEFT JOIN T_BAS_TaskFlowRecordInfo t1 ON t1.FK_TaskID = t.PK_TaskID
        AND t1.CurrentTaskStatus = '待处理' and t1.TaskComment is null
        LEFT JOIN ( SELECT DISTINCT tt.Pollutionid,tt.PollutionName,tt.ShorterName,tt.FK_MonitorPointType FROM (
        SELECT T_BAS_GASOutPutInfo.FK_Pollutionid
        Pollutionid,T_BAS_Pollution.PollutionName,T_BAS_Pollution.ShorterName,T_BAS_GASOutPutInfo.FK_MonitorPointTypeCode
        FK_MonitorPointType
        FROM
        T_BAS_GASOutPutInfo JOIN T_BAS_DeviceStatus ON T_BAS_GASOutPutInfo.DGIMN = T_BAS_DeviceStatus.DGIMN AND
        T_BAS_GASOutPutInfo.FK_MonitorPointTypeCode=T_BAS_DeviceStatus.FK_MonitorPointTypeCode
        JOIN T_BAS_Pollution ON T_BAS_GASOutPutInfo.FK_PollutionID = T_BAS_Pollution.PK_PollutionID
        UNION ALL
        SELECT T_BAS_WaterOutputInfo.FK_Pollutionid
        Pollutionid,T_BAS_Pollution.PollutionName,T_BAS_Pollution.ShorterName,1 FK_MonitorPointType
        FROM
        T_BAS_WaterOutputInfo JOIN T_BAS_DeviceStatus ON T_BAS_WaterOutputInfo.DGIMN = T_BAS_DeviceStatus.DGIMN
        JOIN T_BAS_Pollution ON T_BAS_WaterOutputInfo.FK_PollutionID = T_BAS_Pollution.PK_PollutionID
        WHERE (T_BAS_WaterOutputInfo.OutPutType !=3 or T_BAS_WaterOutputInfo.OutPutType is null)
        UNION ALL
        SELECT T_BAS_WaterOutputInfo.FK_Pollutionid
        Pollutionid,T_BAS_Pollution.PollutionName,T_BAS_Pollution.ShorterName,37 FK_MonitorPointType
        FROM
        T_BAS_WaterOutputInfo JOIN T_BAS_DeviceStatus ON T_BAS_WaterOutputInfo.DGIMN = T_BAS_DeviceStatus.DGIMN
        JOIN T_BAS_Pollution ON T_BAS_WaterOutputInfo.FK_PollutionID = T_BAS_Pollution.PK_PollutionID
        WHERE T_BAS_WaterOutputInfo.OutPutType =3
        UNION ALL
        SELECT T_BAS_UnorganizedMonitorPointInfo.FK_Pollutionid
        Pollutionid,T_BAS_Pollution.PollutionName,T_BAS_Pollution.ShorterName,T_BAS_UnorganizedMonitorPointInfo.FK_MonitorPointTypeCode
        FK_MonitorPointType
        FROM
        T_BAS_UnorganizedMonitorPointInfo JOIN T_BAS_DeviceStatus ON T_BAS_UnorganizedMonitorPointInfo.DGIMN =
        T_BAS_DeviceStatus.DGIMN
        JOIN T_BAS_Pollution ON T_BAS_UnorganizedMonitorPointInfo.FK_PollutionID = T_BAS_Pollution.PK_PollutionID
        UNION ALL
        SELECT T_BAS_OtherMonitorPoint.PK_MonitorPointID Pollutionid,T_BAS_OtherMonitorPoint.MonitorPointName
        PollutionName,'' ShorterName,T_BAS_OtherMonitorPoint.FK_MonitorPointTypeCode FK_MonitorPointType
        FROM T_BAS_OtherMonitorPoint JOIN T_BAS_DeviceStatus ON T_BAS_OtherMonitorPoint.DGIMN = T_BAS_DeviceStatus.DGIMN
        UNION ALL
        SELECT T_BAS_AirMonitorStation.PK_AirID Pollutionid,T_BAS_AirMonitorStation.MonitorPointName PollutionName,''
        ShorterName,T_BAS_DeviceStatus.FK_MonitorPointTypeCode FK_MonitorPointType
        FROM
        T_BAS_AirMonitorStation JOIN T_BAS_DeviceStatus ON T_BAS_AirMonitorStation.DGIMN = T_BAS_DeviceStatus.DGIMN
        UNION ALL
        SELECT T_BAS_WaterStationInfo.PK_WaterStationID Pollutionid,T_BAS_WaterStationInfo.MonitorPointName
        PollutionName,'' ShorterName,T_BAS_DeviceStatus.FK_MonitorPointTypeCode FK_MonitorPointType
        FROM
        T_BAS_WaterStationInfo JOIN T_BAS_DeviceStatus ON T_BAS_WaterStationInfo.DGIMN = T_BAS_DeviceStatus.DGIMN
        ) tt) alltype
        ON t.FK_Pollutionid=alltype.Pollutionid AND alltype.FK_MonitorPointType = t.FK_MonitorPointTypeCode
        LEFT JOIN PUB_CODE_MonitorPointType on PUB_CODE_MonitorPointType.code=t.FK_MonitorPointTypeCode
        LEFT JOIN (SELECT FK_TaskID,FK_TaskType,TaskHandleTime
        FROM T_BAS_TaskFlowRecordInfo
        WHERE T_BAS_TaskFlowRecordInfo.CurrentTaskStatus = '分派任务' ) t2 ON t.PK_TaskID = t2.FK_TaskID AND t.FK_TaskType =
        t2.FK_TaskType
        LEFT JOIN (SELECT FK_TaskID,FK_TaskType,TaskHandleTime
        FROM T_BAS_TaskFlowRecordInfo
        WHERE T_BAS_TaskFlowRecordInfo.CurrentTaskStatus = '反馈信息' ) t3 ON t.PK_TaskID = t3.FK_TaskID AND t.FK_TaskType =
        t3.FK_TaskType
        <if test="datauserid != null and datauserid !=''">
            JOIN (
            SELECT
            FK_PollutionID
            FROM
            (select FK_PollutionID,FK_UserID FROM T_BAS_UserMonitorPointRelationData WHERE
            T_BAS_UserMonitorPointRelationData.FK_PollutionID is NOT NULL UNION
            select FK_MonitorPointID as FK_PollutionID,FK_UserID FROM T_BAS_UserMonitorPointRelationData WHERE
            T_BAS_UserMonitorPointRelationData.FK_PollutionID IS NULL
            ) usertable
            WHERE
            usertable.FK_UserID = #{datauserid}
            GROUP BY
            FK_PollutionID
            ) relation ON t.FK_Pollutionid = relation.FK_PollutionID
        </if>
        WHERE t.FK_TaskType = 5
        <if test="starttime != null and starttime !=''">
            AND CONVERT (VARCHAR (10),t.TaskCreateTime,120) >= #{starttime}
        </if>
        <if test="endtime != null and endtime !=''">
            AND CONVERT (VARCHAR (10),t.TaskCreateTime,120) <![CDATA[<=]]> #{endtime}
        </if>
        ORDER BY CONVERT (VARCHAR (10),t.TaskCreateTime,120) DESC
    </select>

    <!-- author:xsm description: 根据自定义查询条件获取运维任务信息(不考虑按钮权限） date: 2019/07/16 13:20-->
    <select id="getDevOpsTaskListDataByParam" parameterType="map" resultType="map">
        SELECT
        t.PK_TaskID,t.TaskStatus,t.FK_Pollutionid,t.FK_MonitorPointTypeCode,
        PUB_CODE_MonitorPointType.Name monitorpointtypename,
        alltype.PollutionName,
        CONVERT (VARCHAR (10),t.TaskCreateTime,120) TaskCreateTime
        FROM T_BAS_TaskDisposeManagement t
        LEFT JOIN ( SELECT DISTINCT tt.Pollutionid,tt.PollutionName,tt.ShorterName,tt.FK_MonitorPointType FROM (
        SELECT T_BAS_GASOutPutInfo.FK_Pollutionid
        Pollutionid,T_BAS_Pollution.PollutionName,T_BAS_Pollution.ShorterName,T_BAS_GASOutPutInfo.FK_MonitorPointTypeCode
        FK_MonitorPointType
        FROM
        T_BAS_GASOutPutInfo JOIN T_BAS_DeviceStatus ON T_BAS_GASOutPutInfo.DGIMN = T_BAS_DeviceStatus.DGIMN AND
        T_BAS_GASOutPutInfo.FK_MonitorPointTypeCode=T_BAS_DeviceStatus.FK_MonitorPointTypeCode
        JOIN T_BAS_Pollution ON T_BAS_GASOutPutInfo.FK_PollutionID = T_BAS_Pollution.PK_PollutionID
        UNION ALL
        SELECT T_BAS_WaterOutputInfo.FK_Pollutionid
        Pollutionid,T_BAS_Pollution.PollutionName,T_BAS_Pollution.ShorterName,1 FK_MonitorPointType
        FROM
        T_BAS_WaterOutputInfo JOIN T_BAS_DeviceStatus ON T_BAS_WaterOutputInfo.DGIMN = T_BAS_DeviceStatus.DGIMN
        JOIN T_BAS_Pollution ON T_BAS_WaterOutputInfo.FK_PollutionID = T_BAS_Pollution.PK_PollutionID
        WHERE (T_BAS_WaterOutputInfo.OutPutType !=3 or T_BAS_WaterOutputInfo.OutPutType is null)
        UNION ALL
        SELECT T_BAS_WaterOutputInfo.FK_Pollutionid
        Pollutionid,T_BAS_Pollution.PollutionName,T_BAS_Pollution.ShorterName,37 FK_MonitorPointType
        FROM
        T_BAS_WaterOutputInfo JOIN T_BAS_DeviceStatus ON T_BAS_WaterOutputInfo.DGIMN = T_BAS_DeviceStatus.DGIMN
        JOIN T_BAS_Pollution ON T_BAS_WaterOutputInfo.FK_PollutionID = T_BAS_Pollution.PK_PollutionID
        WHERE T_BAS_WaterOutputInfo.OutPutType =3
        UNION ALL
        SELECT T_BAS_UnorganizedMonitorPointInfo.FK_Pollutionid
        Pollutionid,T_BAS_Pollution.PollutionName,T_BAS_Pollution.ShorterName,T_BAS_UnorganizedMonitorPointInfo.FK_MonitorPointTypeCode
        FK_MonitorPointType
        FROM
        T_BAS_UnorganizedMonitorPointInfo JOIN T_BAS_DeviceStatus ON T_BAS_UnorganizedMonitorPointInfo.DGIMN =
        T_BAS_DeviceStatus.DGIMN
        JOIN T_BAS_Pollution ON T_BAS_UnorganizedMonitorPointInfo.FK_PollutionID = T_BAS_Pollution.PK_PollutionID
        UNION ALL
        SELECT T_BAS_OtherMonitorPoint.PK_MonitorPointID Pollutionid,T_BAS_OtherMonitorPoint.MonitorPointName
        PollutionName,'' ShorterName,T_BAS_OtherMonitorPoint.FK_MonitorPointTypeCode FK_MonitorPointType
        FROM T_BAS_OtherMonitorPoint JOIN T_BAS_DeviceStatus ON T_BAS_OtherMonitorPoint.DGIMN = T_BAS_DeviceStatus.DGIMN
        UNION ALL
        SELECT T_BAS_AirMonitorStation.PK_AirID Pollutionid,T_BAS_AirMonitorStation.MonitorPointName PollutionName,''
        ShorterName,T_BAS_DeviceStatus.FK_MonitorPointTypeCode FK_MonitorPointType
        FROM
        T_BAS_AirMonitorStation JOIN T_BAS_DeviceStatus ON T_BAS_AirMonitorStation.DGIMN = T_BAS_DeviceStatus.DGIMN
        UNION ALL
        SELECT T_BAS_WaterStationInfo.PK_WaterStationID Pollutionid,T_BAS_WaterStationInfo.MonitorPointName
        PollutionName,'' ShorterName,T_BAS_DeviceStatus.FK_MonitorPointTypeCode FK_MonitorPointType
        FROM
        T_BAS_WaterStationInfo JOIN T_BAS_DeviceStatus ON T_BAS_WaterStationInfo.DGIMN = T_BAS_DeviceStatus.DGIMN
        ) tt) alltype
        ON t.FK_Pollutionid=alltype.Pollutionid AND alltype.FK_MonitorPointType = t.FK_MonitorPointTypeCode
        LEFT JOIN PUB_CODE_MonitorPointType on PUB_CODE_MonitorPointType.code=t.FK_MonitorPointTypeCode
        WHERE t.FK_TaskType = 5
        <if test="starttime != null and starttime !=''">
            AND CONVERT (VARCHAR (10),t.TaskCreateTime,120) >= #{starttime}
        </if>
        <if test="endtime != null and endtime !=''">
            AND CONVERT (VARCHAR (10),t.TaskCreateTime,120) <![CDATA[<=]]> #{endtime}
        </if>
        ORDER BY CONVERT (VARCHAR (10),t.TaskCreateTime,120) DESC
    </select>

    <!-- author:xsm description: 根据自定义参数统计任务各任务状态的任务数量(不包含忽略任务) date: 2020/02/20 15:30-->
    <select id="countTaskNumGroupByTaskStatusByParamMap" parameterType="map" resultType="map">
        SELECT
        COUNT (tt.PK_TaskID) num,tt.TaskStatus
        FROM (
        SELECT t.PK_TaskID,t.FK_MonitorPointTypeCode,t.TaskCreateTime,t.FK_TaskType,
        case when t.TaskStatus = 0 then '0' when t.TaskStatus=1 then '1' when t.TaskStatus=2 then '2' when t.TaskStatus
        =4 then '4' when t.TaskStatus
        =5 then '5' end TaskStatus
        FROM
        T_BAS_TaskDisposeManagement t
        <trim prefix="where" prefixOverrides="AND|OR">
            <if test="tasktype != null and tasktype !=''">
                AND t.FK_TaskType= #{tasktype}
            </if>
            <if test="monitorpointid != null and monitorpointid !=''">
                AND t.FK_Pollutionid= #{monitorpointid}
            </if>
            <if test="tasktypelist != null and tasktypelist.size>0 ">
                and t.FK_TaskType in
                <foreach item="item" index="index" collection="tasktypelist"
                         open="(" separator="," close=")">
                    #{item}
                </foreach>
            </if>
            <if test="monitorpointtype != null and monitorpointtype !=''">
                AND t.FK_MonitorPointTypeCode= #{monitorpointtype}
            </if>
            <if test="starttime != null and starttime !=''">
                <choose>
                    <when test="starttime.length()==4 ">
                        AND CONVERT (VARCHAR (4),t.TaskCreateTime,120) >= #{starttime}
                    </when>
                    <when test="starttime.length()==7 ">
                        AND CONVERT (VARCHAR (7),t.TaskCreateTime,120) >= #{starttime}
                    </when>
                    <otherwise>
                        AND CONVERT (VARCHAR (10),t.TaskCreateTime,120) >= #{starttime}
                    </otherwise>
                </choose>
            </if>
            <if test="endtime != null and endtime !=''">
                <choose>
                    <when test="endtime.length()==4 ">
                        AND CONVERT (VARCHAR (4),t.TaskCreateTime,120) <![CDATA[<=]]> #{endtime}
                    </when>
                    <when test="endtime.length()==7 ">
                        AND CONVERT (VARCHAR (7),t.TaskCreateTime,120) <![CDATA[<=]]> #{endtime}
                    </when>
                    <otherwise>
                        AND CONVERT (VARCHAR (10),t.TaskCreateTime,120) <![CDATA[<=]]> #{endtime}
                    </otherwise>
                </choose>
            </if>
        </trim>
        ) tt
        GROUP BY tt.TaskStatus
    </select>


    <!-- author:xsm description: 根据自定义参数统计运维任务各任务状态的任务数量（包含忽略任务为已完成） date: 2020/02/20 15:30-->
    <select id="countDevOpsTaskNumGroupByStatusByParamMap" parameterType="map" resultType="map">
        SELECT
        COUNT (tt.PK_TaskID) num,tt.TaskStatus
        FROM (
        SELECT t.PK_TaskID,t.FK_MonitorPointTypeCode,t.TaskCreateTime,t.FK_TaskType,
        case when t.TaskStatus = 0 then '0' when t.TaskStatus=1 then '1' when t.TaskStatus=2 then '2' when t.TaskStatus
        IN (3,4) then '4' end TaskStatus
        FROM
        T_BAS_TaskDisposeManagement t
        JOIN
        (
        SELECT
        FK_MonitorPointID
        FROM
        T_BAS_UserMonitorPointRelationData
        WHERE
        T_BAS_UserMonitorPointRelationData.FK_UserID = #{userid}
        GROUP BY
        FK_MonitorPointID
        ) relation ON t.FK_Pollutionid =relation.FK_MonitorPointID
        <trim prefix="where" prefixOverrides="AND|OR">
            <if test="tasktype != null and tasktype !=''">
                AND t.FK_TaskType= #{tasktype}
            </if>
            <if test="monitorpointid != null and monitorpointid !=''">
                AND t.FK_Pollutionid= #{monitorpointid}
            </if>
            <if test="monitorpointtype != null and monitorpointtype !=''">
                AND t.FK_MonitorPointTypeCode= #{monitorpointtype}
            </if>
            <if test="tasktypelist != null and tasktypelist.size>0 ">
                and t.FK_TaskType in
                <foreach item="item" index="index" collection="tasktypelist"
                         open="(" separator="," close=")">
                    #{item}
                </foreach>
            </if>
            <if test="starttime != null and starttime !=''">
                <choose>
                    <when test="starttime.length()==4 ">
                        AND CONVERT (VARCHAR (4),t.TaskCreateTime,120) >= #{starttime}
                    </when>
                    <when test="starttime.length()==7 ">
                        AND CONVERT (VARCHAR (7),t.TaskCreateTime,120) >= #{starttime}
                    </when>
                    <otherwise>
                        AND CONVERT (VARCHAR (10),t.TaskCreateTime,120) >= #{starttime}
                    </otherwise>
                </choose>
            </if>
            <if test="endtime != null and endtime !=''">
                <choose>
                    <when test="endtime.length()==4 ">
                        AND CONVERT (VARCHAR (4),t.TaskCreateTime,120) <![CDATA[<=]]> #{endtime}
                    </when>
                    <when test="endtime.length()==7 ">
                        AND CONVERT (VARCHAR (7),t.TaskCreateTime,120) <![CDATA[<=]]> #{endtime}
                    </when>
                    <otherwise>
                        AND CONVERT (VARCHAR (10),t.TaskCreateTime,120) <![CDATA[<=]]> #{endtime}
                    </otherwise>
                </choose>
            </if>
        </trim>
        ) tt
        GROUP BY tt.TaskStatus
        ORDER BY tt.TaskStatus
    </select>

    <!-- author:xsm description: 根据自定义参数查询运维任务及相关企业信息 date: 2020/02/20 15:30-->
    <select id="getDevOpsTaskInfosGroupByMonitorPointByParamMap" parameterType="map" resultType="map">
        SELECT COUNT (tt.PK_TaskID) num,MIN(tt.TaskStatus)
        TaskStatus,tt.FK_MonitorPointTypeCode,tt.outputid,tt.FK_Pollutionid,tt.PollutionName,tt.Longitude,tt.Latitude
        FROM (
        SELECT
        t.PK_TaskID,t.TaskStatus,t.FK_Pollutionid,t.FK_MonitorPointTypeCode,
        PUB_CODE_MonitorPointType.Name monitorpointtypename,
        alltype.PollutionName,
        alltype.Longitude,
        alltype.Latitude,
        alltype.outputid,
        CONVERT (VARCHAR (10),t.TaskCreateTime,120) TaskCreateTime
        FROM T_BAS_TaskDisposeManagement t
        LEFT JOIN (
        SELECT DISTINCT allt.Pollutionid,allt.PollutionName,allt.ShorterName,allt.DGIMN,allt.outputid,allt.outputname,
        allt.FK_MonitorPointType,allt.Longitude,allt.Latitude FROM (
        SELECT T_BAS_GASOutPutInfo.FK_Pollutionid
        Pollutionid,T_BAS_Pollution.PollutionName,T_BAS_Pollution.ShorterName,T_BAS_DeviceStatus.DGIMN,T_BAS_GASOutPutInfo.OutPutName
        outputname,T_BAS_GASOutPutInfo.PK_ID outputid,T_BAS_DeviceStatus.FK_MonitorPointTypeCode
        FK_MonitorPointType,T_BAS_GASOutPutInfo.OutputLongitude Longitude,T_BAS_GASOutPutInfo.OutputLatitude Latitude
        FROM
        T_BAS_GASOutPutInfo JOIN T_BAS_DeviceStatus ON T_BAS_GASOutPutInfo.DGIMN = T_BAS_DeviceStatus.DGIMN
        JOIN T_BAS_Pollution ON T_BAS_GASOutPutInfo.FK_PollutionID = T_BAS_Pollution.PK_PollutionID
        UNION ALL
        SELECT T_BAS_WaterOutputInfo.FK_Pollutionid
        Pollutionid,T_BAS_Pollution.PollutionName,T_BAS_Pollution.ShorterName,T_BAS_DeviceStatus.DGIMN,T_BAS_WaterOutputInfo.OutputName
        outputname,T_BAS_WaterOutputInfo.PK_ID outputid,1 FK_MonitorPointType,T_BAS_WaterOutputInfo.OutputLongitude
        Longitude,T_BAS_WaterOutputInfo.OutputLatitude Latitude
        FROM
        T_BAS_WaterOutputInfo JOIN T_BAS_DeviceStatus ON T_BAS_WaterOutputInfo.DGIMN = T_BAS_DeviceStatus.DGIMN
        JOIN T_BAS_Pollution ON T_BAS_WaterOutputInfo.FK_PollutionID = T_BAS_Pollution.PK_PollutionID
        WHERE (T_BAS_WaterOutputInfo.OutPutType !=3 or T_BAS_WaterOutputInfo.OutPutType is null)
        UNION ALL
        SELECT T_BAS_WaterOutputInfo.FK_Pollutionid
        Pollutionid,T_BAS_Pollution.PollutionName,T_BAS_Pollution.ShorterName,T_BAS_DeviceStatus.DGIMN,T_BAS_WaterOutputInfo.OutputName
        outputname,T_BAS_WaterOutputInfo.PK_ID outputid,37 FK_MonitorPointType,T_BAS_WaterOutputInfo.OutputLongitude
        Longitude,T_BAS_WaterOutputInfo.OutputLatitude Latitude
        FROM
        T_BAS_WaterOutputInfo JOIN T_BAS_DeviceStatus ON T_BAS_WaterOutputInfo.DGIMN = T_BAS_DeviceStatus.DGIMN
        JOIN T_BAS_Pollution ON T_BAS_WaterOutputInfo.FK_PollutionID = T_BAS_Pollution.PK_PollutionID
        WHERE T_BAS_WaterOutputInfo.OutPutType =3
        UNION ALL
        SELECT T_BAS_UnorganizedMonitorPointInfo.FK_Pollutionid
        Pollutionid,T_BAS_Pollution.PollutionName,T_BAS_Pollution.ShorterName,T_BAS_DeviceStatus.DGIMN,T_BAS_UnorganizedMonitorPointInfo.MonitorPointName
        outputname,T_BAS_UnorganizedMonitorPointInfo.PK_ID
        outputid,T_BAS_UnorganizedMonitorPointInfo.FK_MonitorPointTypeCode
        FK_MonitorPointType,T_BAS_UnorganizedMonitorPointInfo.Longitude,T_BAS_UnorganizedMonitorPointInfo.Latitude
        FROM
        T_BAS_UnorganizedMonitorPointInfo JOIN T_BAS_DeviceStatus ON T_BAS_UnorganizedMonitorPointInfo.DGIMN =
        T_BAS_DeviceStatus.DGIMN
        JOIN T_BAS_Pollution ON T_BAS_UnorganizedMonitorPointInfo.FK_PollutionID = T_BAS_Pollution.PK_PollutionID
        UNION ALL
        SELECT T_BAS_OtherMonitorPoint.PK_MonitorPointID Pollutionid,T_BAS_OtherMonitorPoint.MonitorPointName
        PollutionName,'' ShorterName,T_BAS_DeviceStatus.DGIMN,T_BAS_OtherMonitorPoint.MonitorPointName outputname,
        T_BAS_OtherMonitorPoint.PK_MonitorPointID outputid,T_BAS_OtherMonitorPoint.FK_MonitorPointTypeCode
        FK_MonitorPointType,T_BAS_OtherMonitorPoint.Longitude,T_BAS_OtherMonitorPoint.Latitude
        FROM T_BAS_OtherMonitorPoint JOIN T_BAS_DeviceStatus ON T_BAS_OtherMonitorPoint.DGIMN = T_BAS_DeviceStatus.DGIMN
        UNION ALL
        SELECT T_BAS_AirMonitorStation.PK_AirID Pollutionid,T_BAS_AirMonitorStation.MonitorPointName PollutionName,''
        ShorterName,T_BAS_DeviceStatus.DGIMN,T_BAS_AirMonitorStation.MonitorPointName
        outputname,T_BAS_AirMonitorStation.PK_AirID outputid,T_BAS_DeviceStatus.FK_MonitorPointTypeCode
        FK_MonitorPointType,T_BAS_AirMonitorStation.Longitude,T_BAS_AirMonitorStation.Latitude
        FROM
        T_BAS_AirMonitorStation JOIN T_BAS_DeviceStatus ON T_BAS_AirMonitorStation.DGIMN = T_BAS_DeviceStatus.DGIMN
        UNION ALL
        SELECT T_BAS_WaterStationInfo.PK_WaterStationID Pollutionid,T_BAS_WaterStationInfo.MonitorPointName
        PollutionName,'' ShorterName,T_BAS_DeviceStatus.DGIMN,T_BAS_WaterStationInfo.MonitorPointName
        outputname,T_BAS_WaterStationInfo.PK_WaterStationID outputid,T_BAS_DeviceStatus.FK_MonitorPointTypeCode
        FK_MonitorPointType,T_BAS_WaterStationInfo.Longitude,T_BAS_WaterStationInfo.Latitude
        FROM
        T_BAS_WaterStationInfo JOIN T_BAS_DeviceStatus ON T_BAS_WaterStationInfo.DGIMN = T_BAS_DeviceStatus.DGIMN
        ) allt) alltype
        ON t.FK_Pollutionid = alltype.outputid AND alltype.FK_MonitorPointType = t.FK_MonitorPointTypeCode
        LEFT JOIN PUB_CODE_MonitorPointType on PUB_CODE_MonitorPointType.code=t.FK_MonitorPointTypeCode
        JOIN
        (
        SELECT
        FK_MonitorPointID
        FROM
        T_BAS_UserMonitorPointRelationData
        WHERE
        T_BAS_UserMonitorPointRelationData.FK_UserID = #{userid}
        GROUP BY
        FK_MonitorPointID
        ) relation ON t.FK_Pollutionid =relation.FK_MonitorPointID
        WHERE t.FK_TaskType = 5
        ) tt
        <trim prefix="where" prefixOverrides="AND|OR">
            tt.outputid IS NOT null
            <if test="monitorpointtype != null and monitorpointtype !=''">
                AND tt.FK_MonitorPointTypeCode= #{monitorpointtype}
            </if>
            <if test="starttime != null and starttime !=''">
                AND CONVERT (VARCHAR (10),tt.TaskCreateTime,120) >= #{starttime}
            </if>
            <if test="endtime != null and endtime !=''">
                AND CONVERT (VARCHAR (10),tt.TaskCreateTime,120) <![CDATA[<=]]> #{endtime}
            </if>
            <if test="statuslist != null and statuslist.size>0 ">
                and tt.TaskStatus IN
                <foreach item="item" index="index" collection="statuslist"
                         open="(" separator="," close=")">
                    #{item}
                </foreach>
            </if>
        </trim>
        GROUP BY
        tt.FK_Pollutionid,tt.PollutionName,tt.FK_MonitorPointTypeCode,tt.Longitude,tt.Latitude,tt.monitorpointtypename,tt.outputid
        ORDER BY tt.PollutionName
    </select>


    <!-- author:xsm description: 根据自定义参数统计按监测类型分组的运维任务条数(有数据权限) date: 2020/02/21 11:04-->
    <select id="countDevOpsTaskDataNumGroupByMonitorTypeByParamMap" parameterType="map" resultType="map">
        SELECT
        count(t.PK_TaskID) num,t.FK_MonitorPointTypeCode monitorpointtype
        FROM T_BAS_TaskDisposeManagement t
        JOIN
        (
        SELECT
        FK_MonitorPointID
        FROM
        T_BAS_UserMonitorPointRelationData
        WHERE
        T_BAS_UserMonitorPointRelationData.FK_UserID = #{userid}
        GROUP BY
        FK_MonitorPointID
        ) relation ON t.FK_Pollutionid =relation.FK_MonitorPointID
        <trim prefix="where" prefixOverrides="AND|OR">
            t.FK_TaskType = 5
            <if test="monitorpointtype != null and monitorpointtype !=''">
                AND t.FK_MonitorPointTypeCode= #{monitorpointtype}
            </if>
            <if test="starttime != null and starttime !=''">
                AND CONVERT (VARCHAR (10),t.TaskCreateTime,120) >= #{starttime}
            </if>
            <if test="endtime != null and endtime !=''">
                AND CONVERT (VARCHAR (10),t.TaskCreateTime,120) <![CDATA[<=]]> #{endtime}
            </if>
        </trim>
        GROUP BY t.FK_MonitorPointTypeCode
    </select>


    <!-- author:xsm description: 根据自定义参数获取点位运维信息 date: 2020/02/26 13:15-->
    <select id="getMonitorPointDevOpsTaskDataByParamMap" parameterType="map" resultType="map">
        SELECT PK_TaskID,TaskStatus,FK_Pollutionid,CONVERT (VARCHAR
        (10),TaskCreateTime,120) TaskCreateTime,FK_MonitorPointTypeCode,FK_ProblemType,FeedbackResults,
        FileID,DevOpsPeople,DevOpsUnit,DGIMN,outputid,outputname
        FROM (SELECT t.PK_TaskID,
        t.TaskStatus,
        t.FK_Pollutionid,
        t.TaskCreateTime,
        t.FK_ProblemType,
        t.FeedbackResults,
        t.FileID,
        t.FK_Pollutionid Pollutionid,
        t.FK_MonitorPointTypeCode,
        ent.DevOpsPeople,
        ent.DevOpsUnit,
        alltype.DGIMN,
        alltype.outputid,
        alltype.outputname
        FROM T_BAS_TaskDisposeManagement t
        LEFT JOIN (
        SELECT DISTINCT allt.Pollutionid,allt.DGIMN,allt.outputid,allt.outputname, allt.FK_MonitorPointType FROM (
        SELECT T_BAS_GASOutPutInfo.FK_Pollutionid
        Pollutionid,T_BAS_Pollution.PollutionName,T_BAS_Pollution.ShorterName,T_BAS_DeviceStatus.DGIMN,T_BAS_GASOutPutInfo.OutPutName
        outputname,T_BAS_GASOutPutInfo.PK_ID outputid,T_BAS_DeviceStatus.FK_MonitorPointTypeCode FK_MonitorPointType
        FROM
        T_BAS_GASOutPutInfo JOIN T_BAS_DeviceStatus ON T_BAS_GASOutPutInfo.DGIMN = T_BAS_DeviceStatus.DGIMN
        JOIN T_BAS_Pollution ON T_BAS_GASOutPutInfo.FK_PollutionID = T_BAS_Pollution.PK_PollutionID
        UNION ALL
        SELECT T_BAS_WaterOutputInfo.FK_Pollutionid
        Pollutionid,T_BAS_Pollution.PollutionName,T_BAS_Pollution.ShorterName,T_BAS_DeviceStatus.DGIMN,T_BAS_WaterOutputInfo.OutputName
        outputname,T_BAS_WaterOutputInfo.PK_ID outputid,1 FK_MonitorPointType
        FROM
        T_BAS_WaterOutputInfo JOIN T_BAS_DeviceStatus ON T_BAS_WaterOutputInfo.DGIMN = T_BAS_DeviceStatus.DGIMN
        JOIN T_BAS_Pollution ON T_BAS_WaterOutputInfo.FK_PollutionID = T_BAS_Pollution.PK_PollutionID
        WHERE (T_BAS_WaterOutputInfo.OutPutType !=3 or T_BAS_WaterOutputInfo.OutPutType is null)
        UNION ALL
        SELECT T_BAS_WaterOutputInfo.FK_Pollutionid
        Pollutionid,T_BAS_Pollution.PollutionName,T_BAS_Pollution.ShorterName,T_BAS_DeviceStatus.DGIMN,T_BAS_WaterOutputInfo.OutputName
        outputname,T_BAS_WaterOutputInfo.PK_ID outputid,37 FK_MonitorPointType
        FROM
        T_BAS_WaterOutputInfo JOIN T_BAS_DeviceStatus ON T_BAS_WaterOutputInfo.DGIMN = T_BAS_DeviceStatus.DGIMN
        JOIN T_BAS_Pollution ON T_BAS_WaterOutputInfo.FK_PollutionID = T_BAS_Pollution.PK_PollutionID
        WHERE T_BAS_WaterOutputInfo.OutPutType =3
        UNION ALL
        SELECT T_BAS_UnorganizedMonitorPointInfo.FK_Pollutionid
        Pollutionid,T_BAS_Pollution.PollutionName,T_BAS_Pollution.ShorterName,T_BAS_DeviceStatus.DGIMN,T_BAS_UnorganizedMonitorPointInfo.MonitorPointName
        outputname,T_BAS_UnorganizedMonitorPointInfo.PK_ID
        outputid,T_BAS_UnorganizedMonitorPointInfo.FK_MonitorPointTypeCode FK_MonitorPointType
        FROM
        T_BAS_UnorganizedMonitorPointInfo JOIN T_BAS_DeviceStatus ON T_BAS_UnorganizedMonitorPointInfo.DGIMN =
        T_BAS_DeviceStatus.DGIMN
        JOIN T_BAS_Pollution ON T_BAS_UnorganizedMonitorPointInfo.FK_PollutionID = T_BAS_Pollution.PK_PollutionID
        UNION ALL
        SELECT T_BAS_OtherMonitorPoint.PK_MonitorPointID Pollutionid,T_BAS_OtherMonitorPoint.MonitorPointName
        PollutionName,'' ShorterName,T_BAS_DeviceStatus.DGIMN,T_BAS_OtherMonitorPoint.MonitorPointName outputname,
        T_BAS_OtherMonitorPoint.PK_MonitorPointID outputid,T_BAS_OtherMonitorPoint.FK_MonitorPointTypeCode
        FK_MonitorPointType
        FROM T_BAS_OtherMonitorPoint JOIN T_BAS_DeviceStatus ON T_BAS_OtherMonitorPoint.DGIMN = T_BAS_DeviceStatus.DGIMN
        UNION ALL
        SELECT T_BAS_AirMonitorStation.PK_AirID Pollutionid,T_BAS_AirMonitorStation.MonitorPointName PollutionName,''
        ShorterName,T_BAS_DeviceStatus.DGIMN,T_BAS_AirMonitorStation.MonitorPointName
        outputname,T_BAS_AirMonitorStation.PK_AirID outputid,T_BAS_DeviceStatus.FK_MonitorPointTypeCode
        FK_MonitorPointType
        FROM
        T_BAS_AirMonitorStation JOIN T_BAS_DeviceStatus ON T_BAS_AirMonitorStation.DGIMN = T_BAS_DeviceStatus.DGIMN
        UNION ALL
        SELECT T_BAS_WaterStationInfo.PK_WaterStationID Pollutionid,T_BAS_WaterStationInfo.MonitorPointName
        PollutionName,'' ShorterName,T_BAS_DeviceStatus.DGIMN,T_BAS_WaterStationInfo.MonitorPointName
        outputname,T_BAS_WaterStationInfo.PK_WaterStationID outputid,T_BAS_DeviceStatus.FK_MonitorPointTypeCode
        FK_MonitorPointType
        FROM
        T_BAS_WaterStationInfo JOIN T_BAS_DeviceStatus ON T_BAS_WaterStationInfo.DGIMN = T_BAS_DeviceStatus.DGIMN
        ) allt) alltype
        ON t.FK_Pollutionid = alltype.outputid AND alltype.FK_MonitorPointType = t.FK_MonitorPointTypeCode
        <if test="userid != null and userid !=''">
            JOIN
            (
            SELECT
            FK_MonitorPointID
            FROM
            T_BAS_UserMonitorPointRelationData
            WHERE
            T_BAS_UserMonitorPointRelationData.FK_UserID = #{userid}
            GROUP BY
            FK_MonitorPointID
            ) relation ON t.FK_Pollutionid =relation.FK_MonitorPointID
        </if>
        LEFT JOIN (SELECT
        T_BAS_EntDevOpsInfo.DevOpsPeople,T_BAS_EntDevOpsInfo.DevOpsUnit,T_BAS_EntDevOpsInfo.FK_PollutionID,T_BAS_EntDevOpsInfo.FK_MonitorPointTypeCode
        FROM T_BAS_EntDevOpsInfo WHERE (T_BAS_EntDevOpsInfo.FK_PollutionID IS NOT NULL AND
        T_BAS_EntDevOpsInfo.FK_PollutionID!='') UNION SELECT
        T_BAS_EntDevOpsInfo.DevOpsPeople,T_BAS_EntDevOpsInfo.DevOpsUnit,T_BAS_EntDevOpsInfo.FK_MonitorPointId
        FK_PollutionID,T_BAS_EntDevOpsInfo.FK_MonitorPointTypeCode FROM T_BAS_EntDevOpsInfo WHERE
        (T_BAS_EntDevOpsInfo.FK_MonitorPointId IS NOT NULL AND T_BAS_EntDevOpsInfo.FK_MonitorPointId!='')) ent
        on ent.FK_MonitorPointTypeCode=t.FK_MonitorPointTypeCode AND ent.FK_PollutionID= t.FK_Pollutionid
        WHERE
        t.FK_TaskType = 5) tasktable
        <trim prefix="where" prefixOverrides="AND|OR">
            tasktable.DGIMN IS NOT NULL
            <if test="monitorpointtype != null and monitorpointtype !=''">
                AND tasktable.FK_MonitorPointTypeCode= #{monitorpointtype}
            </if>
            <if test="monitorpointid != null and monitorpointid !=''">
                AND tasktable.outputid= #{monitorpointid}
            </if>
            <if test="dgimn != null and dgimn !=''">
                AND tasktable.DGIMN= #{dgimn}
            </if>
            <if test="starttime != null and starttime !=''">
                AND CONVERT (VARCHAR (10),tasktable.TaskCreateTime,120) >= #{starttime}
            </if>
            <if test="endtime != null and endtime !=''">
                AND CONVERT (VARCHAR (10),tasktable.TaskCreateTime,120) <![CDATA[<=]]> #{endtime}
            </if>
        </trim>
    </select>


    <!-- author:xsm description: 根据自定义参数获取点位报警任务信息 date: 2020/02/26 13:15-->
    <select id="getAlarmTaskByDgimnAndTimes" parameterType="map" resultType="map">
        SELECT t.FK_TaskType,COUNT(t.PK_TaskID) num
        FROM T_BAS_TaskDisposeManagement t
        JOIN (
        SELECT p.PollutionName,t2.PK_ID monitorpointid,t2.DGIMN,p.ShorterName+'_'+t2.OutputName
        monitorpointname,t2.FK_Pollutionid,'1' monitorpointtype from T_BAS_WaterOutputInfo t2
        LEFT JOIN T_BAS_Pollution p ON t2.FK_Pollutionid = p.PK_PollutionID
        WHERE (t2.OutPutType !=3 or t2.OutPutType is null)
        UNION
        SELECT p.PollutionName,t3.PK_ID monitorpointid,t3.DGIMN,p.ShorterName+'_'+t3.OutputName
        monitorpointname,t3.FK_Pollutionid,'37' monitorpointtype from T_BAS_WaterOutputInfo t3
        LEFT JOIN T_BAS_Pollution p ON t3.FK_Pollutionid = p.PK_PollutionID
        WHERE t3.OutPutType =3
        UNION
        SELECT p.PollutionName,t4.PK_ID monitorpointid,t4.DGIMN,p.ShorterName+'_'+t4.OutputName
        monitorpointname,t4.FK_Pollutionid,t4.FK_MonitorPointTypeCode monitorpointtype from T_BAS_GASOutPutInfo t4
        LEFT JOIN T_BAS_Pollution p ON t4.FK_Pollutionid = p.PK_PollutionID
        UNION
        SELECT p.PollutionName,t5.PK_ID monitorpointid,t5.DGIMN,p.ShorterName+'_'+t5.MonitorPointName
        monitorpointname,t5.FK_Pollutionid,t5.FK_MonitorPointTypeCode monitorpointtype from
        T_BAS_UnorganizedMonitorPointInfo t5
        LEFT JOIN T_BAS_Pollution p ON t5.FK_Pollutionid = p.PK_PollutionID
        WHERE t5.FK_MonitorPointTypeCode in(40,41)
        UNION
        SELECT '' PollutionName,t6.PK_MonitorPointID monitorpointid,t6.DGIMN,t6.MonitorPointName monitorpointname,''
        FK_Pollutionid,t6.FK_MonitorPointTypeCode monitorpointtype from T_BAS_OtherMonitorPoint t6 WHERE
        t6.FK_MonitorPointTypeCode in(9,10,33,12,14,15)
        UNION
        SELECT '' PollutionName,tsz.PK_WaterStationID monitorpointid,tsz.DGIMN,tsz.MonitorPointName monitorpointname,''
        FK_Pollutionid,'6' monitorpointtype from T_BAS_WaterStationInfo tsz
        UNION
        SELECT '' PollutionName,tair.PK_AirID monitorpointid,tair.DGIMN,tair.MonitorPointName monitorpointname,''
        FK_Pollutionid,'5' monitorpointtype from T_BAS_AirMonitorStation tair
        ) pointtable ON t.FK_Pollutionid = pointtable.monitorpointid AND t.FK_MonitorPointTypeCode =
        pointtable.monitorpointtype
        <trim prefix="where" prefixOverrides="AND|OR">
            <if test="tasktype != null and tasktype !=''">
                AND t.FK_TaskType = #{tasktype}
            </if>
            <if test="dgimn != null and dgimn !=''">
                AND pointtable.DGIMN= #{dgimn}
            </if>
            <if test="starttime != null and starttime !=''">
                AND CONVERT (VARCHAR (19),t.TaskCreateTime,120) >= #{starttime}
            </if>
            <if test="endtime != null and endtime !=''">
                AND CONVERT (VARCHAR (19),t.TaskCreateTime,120) <![CDATA[<=]]> #{endtime}
            </if>
        </trim>
        GROUP BY t.FK_TaskType
    </select>


    <select id="getTaskInfo" resultType="map" parameterType="map">
        select
        <include refid="Base_Column_List"/>
        from T_BAS_TaskDisposeManagement
        <where>
            <if test="monitorpointtype != null and monitorpointtype !=''">
                AND FK_MonitorPointTypeCode= #{monitorpointtype}
            </if>
        </where>
    </select>


    <!-- author:xsm description: 根据时间和任务类型统计每日任务数量 date: 2020/03/02 16:58-->
    <select id="countTaskNumGroupByMonitorTimeByTaskType" parameterType="map" resultType="map">
        SELECT
        COUNT (t.PK_TaskID) num,
            <choose>
                <when test="starttime != null and starttime !='' and starttime.length()==4 ">
                    CONVERT (VARCHAR (4),t.TaskCreateTime,120) TaskCreateTime
                </when>
                <when test="starttime != null and starttime !='' and starttime.length()==7 ">
                    CONVERT (VARCHAR (7),t.TaskCreateTime,120) TaskCreateTime
                </when>
                <otherwise>
                    CONVERT (VARCHAR (10),t.TaskCreateTime,120) TaskCreateTime
                </otherwise>
            </choose>
        FROM
        T_BAS_TaskDisposeManagement t
        <trim prefix="where" prefixOverrides="AND|OR">
            <if test="tasktype != null and tasktype !=''">
                AND t.FK_TaskType= #{tasktype}
            </if>
            <if test="monitorpointid != null and monitorpointid !=''">
                AND t.FK_Pollutionid= #{monitorpointid}
            </if>
            <if test="tasktypelist != null and tasktypelist.size>0 ">
                and t.FK_TaskType in
                <foreach item="item" index="index" collection="tasktypelist"
                         open="(" separator="," close=")">
                    #{item}
                </foreach>
            </if>
            <if test="monitorpointtype != null and monitorpointtype !=''">
                AND t.FK_MonitorPointTypeCode= #{monitorpointtype}
            </if>
            <if test="starttime != null and starttime !=''">
                <choose>
                    <when test="starttime.length()==4 ">
                        AND CONVERT (VARCHAR (4),t.TaskCreateTime,120) >= #{starttime}
                    </when>
                    <when test="starttime.length()==7 ">
                        AND CONVERT (VARCHAR (7),t.TaskCreateTime,120) >= #{starttime}
                    </when>
                    <otherwise>
                        AND CONVERT (VARCHAR (10),t.TaskCreateTime,120) >= #{starttime}
                    </otherwise>
                </choose>
            </if>
            <if test="endtime != null and endtime !=''">
                <choose>
                    <when test="endtime.length()==4 ">
                        AND CONVERT (VARCHAR (4),t.TaskCreateTime,120) <![CDATA[<=]]> #{endtime}
                    </when>
                    <when test="endtime.length()==7 ">
                        AND CONVERT (VARCHAR (7),t.TaskCreateTime,120) <![CDATA[<=]]> #{endtime}
                    </when>
                    <otherwise>
                        AND CONVERT (VARCHAR (10),t.TaskCreateTime,120) <![CDATA[<=]]> #{endtime}
                    </otherwise>
                </choose>
            </if>
        </trim>
        GROUP BY
        <choose>
            <when test="starttime != null and starttime !='' and starttime.length()==4 ">
                CONVERT (VARCHAR (4),t.TaskCreateTime,120)
            </when>
            <when test="starttime != null and starttime !='' and starttime.length()==7 ">
                CONVERT (VARCHAR (7),t.TaskCreateTime,120)
            </when>
            <otherwise>
                CONVERT (VARCHAR (10),t.TaskCreateTime,120)
            </otherwise>
        </choose>
    </select>

    <!-- author:xsm description: 根据自定义查询条件统计处置人员任务完成情况 date: 2020/03/02 16:58-->
    <select id="countTaskNumGroupByDisposerPeopleByParamMap" parameterType="map" resultType="map">
        SELECT tt.status
        ,tt.User_Name,COUNT(tt.PK_TaskID) num FROM
        (SELECT t.PK_TaskID,
        CASE
        WHEN t.TaskStatus IN (1, 2) THEN
        '未完成'
        WHEN t.TaskStatus = 4 THEN
        '已完成'
        END status,t3.User_Name
        FROM T_BAS_TaskDisposeManagement t LEFT JOIN
        T_BAS_TaskFlowRecordInfo t2 ON t.PK_TaskID = t2.FK_TaskID
        LEFT JOIN Base_UserInfo t3 on t2.FK_TaskHandleUserID = t3.User_ID
        where
        t.TaskStatus !=0
        <if test="tasktypelist != null and tasktypelist.size>0 ">
            and t.FK_TaskType in
            <foreach item="item" index="index" collection="tasktypelist"
                     open="(" separator="," close=")">
                #{item}
            </foreach>
        </if>
        <if test="tasktype != null and tasktype !=''">
            and t.FK_TaskType =#{tasktype}
        </if>
        AND t2.CurrentTaskStatus = '待处理' AND t2.TaskComment is null
        AND t.PK_TaskID NOT IN(SELECT T_BAS_TaskFlowRecordInfo.FK_TaskID FROM T_BAS_TaskFlowRecordInfo WHERE
        T_BAS_TaskFlowRecordInfo.CurrentTaskStatus ='转办任务' )
        <if test="starttime != null and starttime !=''">
            AND CONVERT (VARCHAR (10),t.TaskCreateTime,120) >= #{starttime}
        </if>
        <if test="endtime != null and endtime !=''">
            AND CONVERT (VARCHAR (10),t.TaskCreateTime,120) <![CDATA[<=]]> #{endtime}
        </if>
        UNION
        SELECT t.PK_TaskID,
        CASE
        WHEN t.TaskStatus IN (1, 2) THEN
        '未完成'
        WHEN t.TaskStatus = 4 THEN
        '已完成'
        END status,t3.User_Name
        FROM T_BAS_TaskDisposeManagement t LEFT JOIN
        T_BAS_TaskFlowRecordInfo t2 ON t.PK_TaskID = t2.FK_TaskID
        LEFT JOIN Base_UserInfo t3 on t2.FK_TaskHandleUserID = t3.User_ID
        where
        t.TaskStatus !=0
        <if test="tasktypelist != null and tasktypelist.size>0 ">
            and t.FK_TaskType in
            <foreach item="item" index="index" collection="tasktypelist"
                     open="(" separator="," close=")">
                #{item}
            </foreach>
        </if>
        <if test="tasktype != null and tasktype !=''">
            and t.FK_TaskType =#{tasktype}
        </if>
        AND t2.CurrentTaskStatus = '转办' AND t2.TaskComment is null
        AND t.PK_TaskID IN(SELECT T_BAS_TaskFlowRecordInfo.FK_TaskID FROM T_BAS_TaskFlowRecordInfo WHERE
        T_BAS_TaskFlowRecordInfo.CurrentTaskStatus ='转办任务' )
        <if test="starttime != null and starttime !=''">
            AND CONVERT (VARCHAR (10),t.TaskCreateTime,120) >= #{starttime}
        </if>
        <if test="endtime != null and endtime !=''">
            AND CONVERT (VARCHAR (10),t.TaskCreateTime,120) <![CDATA[<=]]> #{endtime}
        </if>
        ) tt
        GROUP BY tt.status, tt.User_Name
    </select>


    <select id="countTaskNumGroupByCompanyByParamMap" parameterType="map" resultType="map">
        SELECT
        tt.status,
        tt.Organization_Name,
        COUNT (tt.PK_TaskID) countnum
        FROM
        (
        SELECT
        CASE
        WHEN t.TaskStatus IN (1, 2) THEN
        '未完成'
        WHEN t.TaskStatus = 4 THEN
        '已完成'
        END status,
        t.PK_TaskID,
        t.TaskStatus,
        t4.Organization_Name
        FROM
        T_BAS_TaskDisposeManagement t
        INNER JOIN T_BAS_TaskFlowRecordInfo t2 ON t.PK_TaskID = t2.FK_TaskID
        INNER JOIN Base_StaffOrganize t3 ON t2.FK_TaskHandleUserID = t3.User_ID
        INNER JOIN Base_Organization t4 ON t3.Organization_ID = t4.Organization_ID
        <trim prefix="where" prefixOverrides="AND|OR">
            t.TaskStatus != 0
            <if test="tasktypelist != null and tasktypelist.size>0 ">
                and t.FK_TaskType in
                <foreach item="item" index="index" collection="tasktypelist"
                         open="(" separator="," close=")">
                    #{item}
                </foreach>
            </if>
            AND t2.CurrentTaskStatus ='待处理' AND t2.TaskComment is null
            AND t.PK_TaskID NOT IN(SELECT T_BAS_TaskFlowRecordInfo.FK_TaskID FROM T_BAS_TaskFlowRecordInfo WHERE
            T_BAS_TaskFlowRecordInfo.CurrentTaskStatus ='转办任务' )
            <if test="starttime != null and starttime !=''">
                AND CONVERT (VARCHAR (10),t.TaskCreateTime,120) >= #{starttime}
            </if>
            <if test="endtime != null and endtime !=''">
                AND CONVERT (VARCHAR (10),t.TaskCreateTime,120) <![CDATA[<=]]> #{endtime}
            </if>
        </trim>
        union
        SELECT
        CASE
        WHEN t.TaskStatus IN (1, 2) THEN
        '未完成'
        WHEN t.TaskStatus = 4 THEN
        '已完成'
        END status,
        t.PK_TaskID,
        t.TaskStatus,
        t4.Organization_Name
        FROM
        T_BAS_TaskDisposeManagement t
        INNER JOIN T_BAS_TaskFlowRecordInfo t2 ON t.PK_TaskID = t2.FK_TaskID
        INNER JOIN Base_StaffOrganize t3 ON t2.FK_TaskHandleUserID = t3.User_ID
        INNER JOIN Base_Organization t4 ON t3.Organization_ID = t4.Organization_ID
        <trim prefix="where" prefixOverrides="AND|OR">
            t.TaskStatus != 0
            <if test="tasktypelist != null and tasktypelist.size>0 ">
                and t.FK_TaskType in
                <foreach item="item" index="index" collection="tasktypelist"
                         open="(" separator="," close=")">
                    #{item}
                </foreach>
            </if>
            AND t2.CurrentTaskStatus ='转办' AND t2.TaskComment is null
            AND t.PK_TaskID IN(SELECT T_BAS_TaskFlowRecordInfo.FK_TaskID FROM T_BAS_TaskFlowRecordInfo WHERE
            T_BAS_TaskFlowRecordInfo.CurrentTaskStatus ='转办任务' )
            <if test="starttime != null and starttime !=''">
                AND CONVERT (VARCHAR (10),t.TaskCreateTime,120) >= #{starttime}
            </if>
            <if test="endtime != null and endtime !=''">
                AND CONVERT (VARCHAR (10),t.TaskCreateTime,120) <![CDATA[<=]]> #{endtime}
            </if>
        </trim>
        ) tt
        GROUP BY
        tt.status,
        tt.Organization_Name

    </select>

    <!-- author:xsm description: 根据自定义参数获取点位报警任务信息 date: 2020/02/26 13:15-->
    <select id="getTaskDisposeTimelinessInfoByTaskType" parameterType="map" resultType="map">
        SELECT PK_TaskTimelinessID,FK_TaskType,CompletionDays,ExpireRemindDays FROM
        T_BAS_TaskDisposeTimeliness
        <trim prefix="where" prefixOverrides="AND|OR">
            <if test="tasktype != null and tasktype !=''">
                AND T_BAS_TaskDisposeTimeliness.FK_TaskType= #{tasktype}
            </if>

        </trim>
    </select>


    <!-- author:xsm description: 根据任务类型统计该类型任务的时效性 date: 2020/02/28 17:21-->
    <select id="countTaskDisposeTimelinessNumByTaskType" parameterType="map" resultType="map">
        select tt.statuslevel,COUNT(tt.statuslevel) num
        FROM(
        SELECT
        case when TaskStatus = 4 then (case when DATEDIFF(dd, TaskCreateTime, TaskRealEndDate)<![CDATA[<]]>
        #{completiondays} then '1' end ) else (case when DATEDIFF(dd, TaskCreateTime, GETDATE())>#{completiondays} then
        '3' when (DATEDIFF(dd, TaskCreateTime, GETDATE())>#{expirereminddays} and DATEDIFF(dd, TaskCreateTime,
        GETDATE())<![CDATA[<]]>#{completiondays}
        ) THEN '2' else '4' end ) end statuslevel
        from
        T_BAS_TaskDisposeManagement
        <trim prefix="where" prefixOverrides="AND|OR">
            <if test="tasktype != null and tasktype !=''">
                AND T_BAS_TaskDisposeTimeliness.FK_TaskType= #{tasktype}
            </if>

        </trim>
        ) tt
        GROUP BY tt.statuslevel

    </select>


    <!--
     * @author: lip
     * @date: 2020/5/13 0013 下午 2:31
     * @Description: 自定义查询条件统计处置任务数据
     * @updateUser:
     * @updateDate:
     * @updateDescription:
    -->
    <select id="countTaskDataByParam" parameterType="map" resultType="map">
        SELECT
        t.FK_TaskType,
        t.FK_MonitorPointTypeCode,
        pmpt.Name monitorpointtypename,
        COUNT (t.PK_TaskID) countnum
        FROM
        T_BAS_TaskDisposeManagement t
        LEFT JOIN PUB_CODE_MonitorPointType pmpt ON t.FK_MonitorPointTypeCode = pmpt.Code
        <if test="userid != null and userid !=''">
            JOIN
            (
            SELECT
            FK_MonitorPointID
            FROM
            T_BAS_UserMonitorPointRelationData
            WHERE
            T_BAS_UserMonitorPointRelationData.FK_UserID = #{userid}
            GROUP BY
            FK_MonitorPointID
            ) relation ON t.FK_Pollutionid =relation.FK_MonitorPointID
        </if>
        <trim prefix="where" prefixOverrides="AND|OR">
            <if test="tasktypelist != null and tasktypelist.size>0 ">
                and t.FK_TaskType in
                <foreach item="item" index="index" collection="tasktypelist"
                         open="(" separator="," close=")">
                    #{item}
                </foreach>
            </if>
            <if test="starttime != null and starttime !=''">
                AND CONVERT (VARCHAR (10),t.TaskCreateTime,120) >= #{starttime}
            </if>
            <if test="endtime != null and endtime !=''">
                AND CONVERT (VARCHAR (10),t.TaskCreateTime,120) <![CDATA[<=]]> #{endtime}
            </if>
        </trim>
        GROUP BY t.FK_TaskType, t.FK_MonitorPointTypeCode,pmpt.Name
    </select>

    <!--
     * @author: xsm
     * @date: 2021/04/21 0021 上午 11:17
     * @Description: 自定义查询条件统计各任务类型处置任务数据
     * @updateUser:
     * @updateDate:
     * @updateDescription:
    -->
    <select id="countTaskDataByParamGroupByTaskType" parameterType="map" resultType="map">
        SELECT
        t.FK_TaskType,
        COUNT (t.PK_TaskID) countnum
        FROM
        T_BAS_TaskDisposeManagement t
        <trim prefix="where" prefixOverrides="AND|OR">
            <if test="tasktypelist != null and tasktypelist.size>0 ">
                and t.FK_TaskType in
                <foreach item="item" index="index" collection="tasktypelist"
                         open="(" separator="," close=")">
                    #{item}
                </foreach>
            </if>
            <if test="starttime != null and starttime !=''">
                AND CONVERT (VARCHAR (10),t.TaskCreateTime,120) >= #{starttime}
            </if>
            <if test="endtime != null and endtime !=''">
                AND CONVERT (VARCHAR (10),t.TaskCreateTime,120) <![CDATA[<=]]> #{endtime}
            </if>
        </trim>
        GROUP BY t.FK_TaskType
    </select>

    <!-- author:xsm description: 统计某一段时间内报警及运维工单各状态情况 date: 2020/05/15 13:58-->
    <select id="countAlarmAndDevopsTaskStatusNumByMonitorTimes" parameterType="map" resultType="map">
        SELECT COUNT (tt.PK_TaskID) totalnum,
        sum(case when tt.TaskStatus='0' then 1 else 0 end) dfpnum,
        sum(case when tt.TaskStatus='1' then 1 else 0 end) dclnum,
        sum(case when tt.TaskStatus='2' then 1 else 0 end) clznum,
        sum(case when tt.TaskStatus='4' then 1 else 0 end) ywcnum
        FROM (
        SELECT t.PK_TaskID,t.FK_MonitorPointTypeCode,t.TaskCreateTime,t.FK_TaskType,
        case when t.TaskStatus = 0 then '0' when t.TaskStatus=1 then '1' when t.TaskStatus=2 then '2' when t.TaskStatus
        IN (3,4) then '4' end TaskStatus
        FROM
        T_BAS_TaskDisposeManagement t
        <trim prefix="where" prefixOverrides="AND|OR">
            <if test="tasktypelist != null and tasktypelist.size>0 ">
                and t.FK_TaskType in
                <foreach item="item" index="index" collection="tasktypelist"
                         open="(" separator="," close=")">
                    #{item}
                </foreach>
            </if>
            <if test="starttime != null and starttime !=''">
                AND CONVERT (VARCHAR (10),t.TaskCreateTime,120) >= #{starttime}
            </if>
            <if test="endtime != null and endtime !=''">
                AND CONVERT (VARCHAR (10),t.TaskCreateTime,120) <![CDATA[<=]]> #{endtime}
            </if>
        </trim>
        ) tt
    </select>

    <!-- author:xsm description: 根据任务类型获取当天任务信息 date: 2020/05/15 13:58-->
    <select id="getTodayTaskInfoByTaskType" parameterType="map" resultType="map">
        SELECT
        PK_TaskID, FK_Pollutionid, FK_TaskType, convert (varchar(19),TaskCreateTime,120)TaskCreateTime, TaskStatus,
        FK_MonitorPointTypeCode
        FROM
        T_BAS_TaskDisposeManagement t
        <trim prefix="where" prefixOverrides="AND|OR">
            <if test="tasktype != null and tasktype !=''">
                AND t.FK_TaskType = #{tasktype}
            </if>
            <if test="tasktypelist != null and tasktypelist.size>0 ">
                and t.FK_TaskType in
                <foreach item="item" index="index" collection="tasktypelist"
                         open="(" separator="," close=")">
                    #{item}
                </foreach>
            </if>
            <if test="daytime != null and daytime !=''">
                AND CONVERT (VARCHAR (10),t.TaskCreateTime,120) = #{daytime}
            </if>
            <if test="starttime != null and starttime !=''">
                AND CONVERT (VARCHAR (19),t.TaskCreateTime,120) >= #{starttime}
            </if>
            <if test="endtime != null and endtime !=''">
                AND CONVERT (VARCHAR (19),t.TaskCreateTime,120) <![CDATA[<=]]> #{endtime}
            </if>
        </trim>
    </select>

    <!-- author:xsm description: 根据任务类型获取监测点位当天最新的一条任务信息及关联的污染物信息 date: 2021/03/05 09:20-->
    <select id="getMonitorPointLastTaskInfoByTaskType" parameterType="map" resultType="map">
        SELECT
        A.PK_TaskID taskid,
        A.FK_Pollutionid monitorpointid,
        A.AlarmStartTime taskstarttime,
        A.TaskEndTime taskendtime,
        A.OverLevelCode alarmlevel,
        A.RecoveryTime recoverytime,
        <choose>
            <when test="tasktype != null and tasktype =='5'.toString">
                STUFF( ( SELECT ',' + (T2.FK_PolluantCode+'_'+T2.AlarmType) FROM
                T_BAS_TaskAlarmPollutantInfo T2
                WHERE T2.FK_TaskID = A.PK_TaskID FOR XML PATH ('')
                ),1,1,'') alarmcodes
            </when>
            <otherwise>
                STUFF( ( SELECT ',' + T2.FK_PolluantCode FROM
                T_BAS_TaskAlarmPollutantInfo T2
                WHERE T2.FK_TaskID = A.PK_TaskID FOR XML PATH ('')
                ),1,1,'') alarmcodes
            </otherwise>
        </choose>
        FROM(
        SELECT tt.PK_TaskID,
        tt.FK_Pollutionid,
        tt.FK_TaskType,
        tt.OverLevelCode,
        convert (varchar(19),tt.RecoveryTime,120)RecoveryTime,
        convert (varchar(19),tt.AlarmStartTime,120)AlarmStartTime,
        convert (varchar(19),tt.TaskEndTime,120)TaskEndTime,
        tt.TaskStatus,
        tt.FK_MonitorPointTypeCode from(SELECT *, ROW_NUMBER() OVER (PARTITION BY FK_Pollutionid,convert
        (varchar(10),TaskCreateTime,120) ORDER BY TaskCreateTime DESC) rn FROM
        T_BAS_TaskDisposeManagement) tt
        <trim prefix="where" prefixOverrides="AND|OR">
            tt.rn = 1
            <if test="tasktype != null and tasktype !=''">
                AND tt.FK_TaskType = #{tasktype}
            </if>
            <if test="tasktypelist != null and tasktypelist.size>0 ">
                and tt.FK_TaskType in
                <foreach item="item" index="index" collection="tasktypelist"
                         open="(" separator="," close=")">
                    #{item}
                </foreach>
            </if>
            <if test="monitorpointtypecode != null and monitorpointtypecode !=''">
                AND tt.FK_MonitorPointTypeCode = #{monitorpointtypecode}
            </if>
            <if test="monitorpointid != null and monitorpointid !=''">
                AND tt.FK_Pollutionid = #{monitorpointid}
            </if>
            <if test="daytime != null and daytime !=''">
                AND CONVERT (VARCHAR (10),tt.TaskCreateTime,120) = #{daytime}
            </if>
            <if test="starttime != null and starttime !=''">
                AND CONVERT (VARCHAR (19),tt.TaskCreateTime,120) >= #{starttime}
            </if>
            <if test="endtime != null and endtime !=''">
                AND CONVERT (VARCHAR (19),tt.TaskCreateTime,120) <![CDATA[<=]]> #{endtime}
            </if>
        </trim>
        )A
    </select>

    <!-- author:xsm description: 根据任务类型获取监测点最新的一条任务信息及关联的污染物信息 date: 2021/03/05 09:20-->
    <select id="getPointLastTaskInfoByParamMap" parameterType="map" resultType="map">
        SELECT top 1 A.PK_TaskID taskid,A.FK_Pollutionid monitorpointid,A.AlarmStartTime taskstarttime,A.TaskEndTime
        taskendtime,A.overlevelcode,
        <choose>
            <when test="tasktype != null and tasktype =='5'.toString">
                STUFF( ( SELECT ',' + (T2.FK_PolluantCode+'_'+T2.AlarmType) FROM
                T_BAS_TaskAlarmPollutantInfo T2
                WHERE T2.FK_TaskID = A.PK_TaskID FOR XML PATH ('')
                ),1,1,'') alarmcodes
            </when>
            <otherwise>
                STUFF( ( SELECT ',' + T2.FK_PolluantCode FROM
                T_BAS_TaskAlarmPollutantInfo T2
                WHERE T2.FK_TaskID = A.PK_TaskID FOR XML PATH ('')
                ),1,1,'') alarmcodes
            </otherwise>
        </choose>
        FROM(
        SELECT tt.PK_TaskID,
        tt.FK_Pollutionid,
        tt.FK_TaskType,
        tt.OverLevelCode,
        convert (varchar(19),tt.TaskCreateTime,120)TaskCreateTime,
        convert (varchar(19),tt.AlarmStartTime,120)AlarmStartTime,
        convert (varchar(19),tt.TaskEndTime,120)TaskEndTime,
        tt.TaskStatus,
        tt.FK_MonitorPointTypeCode from(SELECT *, ROW_NUMBER() OVER (PARTITION BY FK_Pollutionid,convert
        (varchar(10),TaskCreateTime,120) ORDER BY TaskCreateTime DESC) rn FROM
        T_BAS_TaskDisposeManagement) tt
        <trim prefix="where" prefixOverrides="AND|OR">
            tt.rn = 1
            <if test="tasktype != null and tasktype !=''">
                AND tt.FK_TaskType = #{tasktype}
            </if>
            <if test="monitorpointtypecode != null and monitorpointtypecode !=''">
                AND tt.FK_MonitorPointTypeCode = #{monitorpointtypecode}
            </if>
            <if test="monitorpointid != null and monitorpointid !=''">
                AND tt.FK_Pollutionid = #{monitorpointid}
            </if>
        </trim>
        )A order by A.TaskCreateTime desc
    </select>

    <select id="getDayTaskInfoByParam" parameterType="map" resultType="map">
        select
        t.taskstatus,
        t.PK_TaskID as taskid,
        convert (
        varchar (10),
        t.taskcreatetime,
        120
        ) taskcreatetime,
        t.fileid,
        t.FK_TaskType tasktype
        from
        t_bas_taskdisposemanagement t
        <trim prefix="where" prefixOverrides="AND|OR">
            <if test="monitorpointid != null and monitorpointid !=''">
                AND t.FK_Pollutionid = #{monitorpointid}
            </if>
            <if test="tasktypelist != null and tasktypelist.size>0 ">
                and t.FK_TaskType in
                <foreach item="item" index="index" collection="tasktypelist"
                         open="(" separator="," close=")">
                    #{item}
                </foreach>
            </if>
            <if test="taskstatuslist != null and taskstatuslist.size>0 ">
                and t.taskstatus in
                <foreach item="item" index="index" collection="taskstatuslist"
                         open="(" separator="," close=")">
                    #{item}
                </foreach>
            </if>
            <if test="starttime != null and starttime !=''">
                AND CONVERT (VARCHAR (19),t.TaskCreateTime,120) >= #{starttime}
            </if>
            <if test="endtime != null and endtime !=''">
                AND CONVERT (VARCHAR (19),t.TaskCreateTime,120) <![CDATA[<=]]> #{endtime}
            </if>
        </trim>
    </select>

    <!-- author:xsm description: 根据自定义参数获取安全相关监测点的所有点位信息 date: 2020/08/11 13:20-->
    <select id="getAllSecurityMonitorPointInfoByParam" parameterType="map" resultType="map">
        SELECT tt.* FROM
        (
        select
        T_AQ_HazardSourceProductDevice.PK_ID MonitorPointID,T_AQ_HazardSourceProductDevice.DGIMN,
        T_AQ_HazardSourceProductDevice.DeviceName AS MonitorPointName
        from T_AQ_MajorHazardSources JOIN T_AQ_HazardSourceProductDevice on T_AQ_MajorHazardSources.PK_ID =
        T_AQ_HazardSourceProductDevice.FK_MajorHazardSourcesId
        join T_BAS_Pollution on T_BAS_Pollution.PK_Pollutionid = T_AQ_MajorHazardSources.fk_pollutionid
        union
        select
        T_AQ_StorageTankInfo.PK_ID MonitorPointID,
        T_AQ_StorageTankInfo.DGIMN,
        T_AQ_StorageTankInfo.StorageTankCode AS MonitorPointName
        from T_AQ_StorageTankAreaInfo JOIN T_AQ_StorageTankInfo on T_AQ_StorageTankAreaInfo.PK_ID =
        T_AQ_StorageTankInfo.FK_StorageTankAreaID
        join T_BAS_Pollution on T_BAS_Pollution.PK_Pollutionid = T_AQ_StorageTankAreaInfo.fk_pollutionid
        union
        select
        T_AQ_RiskAreaMonitorPoint.PK_MonitorPointID MonitorPointID,
        T_AQ_RiskAreaMonitorPoint.DGIMN,
        T_AQ_RiskAreaMonitorPoint.MonitorPointName
        from T_AQ_RiskAreaMonitorPoint JOIN T_BAS_Pollution on T_BAS_Pollution.PK_Pollutionid =
        T_AQ_RiskAreaMonitorPoint.fk_pollutionid
        ) tt
        <trim prefix="where" prefixOverrides="AND||OR">
            tt.DGIMN IS NOT NULL
            <if test="dgimn != null and dgimn !=''">
                AND tt.DGIMN = #{dgimn}
            </if>
            <if test="monitorpointids != null and monitorpointids.size>0 ">
                and tt.MonitorPointID in
                <foreach item="item" index="index" collection="monitorpointids"
                         open="(" separator="," close=")">
                    #{item}
                </foreach>
            </if>
        </trim>
    </select>

    <!--
     * @author: lip
     * @date: 2020/9/21 0021 上午 11:31
     * @Description: 风险点报警任务数据
     * @updateUser:
     * @updateDate:
     * @updateDescription:
    -->
    <select id="getRiskVideoAlarmDataListByParam" parameterType="map" resultType="map">
        select
        t4.taskstatus,
        convert (
        varchar (19),
        t1.alarmtime,
        120
        ) alarmtime,
        t5.name vedioalarmtypename,
        t1.fk_pollutionid
        from
        t_aq_monitoringalarmrecord t1
        inner join t_bas_videocamera t2 on t1.fk_vediocameraid = t2.pk_vediocameraid
        inner join t_aq_riskinfo t3 on t3.pk_id = t1.fk_pollutionid
        left join t_bas_taskdisposemanagement t4 on t4.fk_pollutionid = t1.fk_pollutionid
        left join pub_code_vedioalarmtype t5 on t5.code = t1.fk_vedioalarmtypecode
        <trim prefix="where" prefixOverrides="AND||OR">
            <if test="pointid != null and pointid !=''">
                AND t3.pk_id = #{pointid}
            </if>
            <if test="starttime != null and starttime !=''">
                AND CONVERT (VARCHAR (10),t1.alarmtime,120) >= #{starttime}
            </if>
            <if test="endtime != null and endtime !=''">
                AND CONVERT (VARCHAR (10),t1.alarmtime,120) <![CDATA[<=]]> #{endtime}
            </if>
        </trim>
        ORDER by alarmtime desc
    </select>

    <!-- author:xsm description: 获取企业下排口的MN号  date: 2019/07/16 13:20-->
    <select id="getAllSecurityOutputMn" parameterType="map" resultType="map">
        SELECT datas.* FROM(
        select
        T_BAS_Pollution.PK_Pollutionid
        Pollutionid,T_BAS_Pollution.PollutionName,T_BAS_Pollution.ShorterName,T_AQ_MajorHazardSources.PK_ID parentid,
        T_AQ_HazardSourceProductDevice.PK_ID MonitorPointID,T_AQ_HazardSourceProductDevice.DGIMN,
        T_AQ_HazardSourceProductDevice.DeviceName AS MonitorPointName, 57 type
        from T_AQ_MajorHazardSources JOIN T_AQ_HazardSourceProductDevice on T_AQ_MajorHazardSources.PK_ID =
        T_AQ_HazardSourceProductDevice.FK_MajorHazardSourcesId
        join T_BAS_Pollution on T_BAS_Pollution.PK_Pollutionid = T_AQ_MajorHazardSources.fk_pollutionid
        union
        select
        T_BAS_Pollution.PK_Pollutionid
        Pollutionid,T_BAS_Pollution.PollutionName,T_BAS_Pollution.ShorterName,T_AQ_StorageTankAreaInfo.PK_ID parentid,
        T_AQ_StorageTankInfo.PK_ID MonitorPointID,
        T_AQ_StorageTankInfo.DGIMN,
        T_AQ_StorageTankInfo.StorageTankCode AS MonitorPointName,
        30 type
        from T_AQ_StorageTankAreaInfo JOIN T_AQ_StorageTankInfo on T_AQ_StorageTankAreaInfo.PK_ID =
        T_AQ_StorageTankInfo.FK_StorageTankAreaID
        join T_BAS_Pollution on T_BAS_Pollution.PK_Pollutionid = T_AQ_StorageTankAreaInfo.fk_pollutionid
        union
        select
        T_BAS_Pollution.PK_Pollutionid
        Pollutionid,T_BAS_Pollution.PollutionName,T_BAS_Pollution.ShorterName,T_AQ_RiskAreaMonitorPoint.PK_MonitorPointID
        parentid,
        T_AQ_RiskAreaMonitorPoint.PK_MonitorPointID MonitorPointID,
        T_AQ_RiskAreaMonitorPoint.DGIMN,
        T_AQ_RiskAreaMonitorPoint.MonitorPointName,
        T_AQ_RiskAreaMonitorPoint.FK_MonitorPointTypeCode type
        from T_AQ_RiskAreaMonitorPoint JOIN T_BAS_Pollution on T_BAS_Pollution.PK_Pollutionid =
        T_AQ_RiskAreaMonitorPoint.fk_pollutionid
        )datas JOIN T_BAS_DeviceStatus ON datas.DGIMN = T_BAS_DeviceStatus.DGIMN AND
        T_BAS_DeviceStatus.FK_MonitorPointTypeCode = datas.type
        <trim prefix="where" prefixOverrides="AND|OR">
            <if test="pollutions != null and pollutions.size>0 ">
                and datas.Pollutionid in
                <foreach item="item" index="index" collection="pollutions"
                         open="(" separator="," close=")">
                    #{item}
                </foreach>
            </if>
            <if test="monitorpointtype!=null and monitorpointtype!='' ">
                and datas.type = #{monitorpointtype}
            </if>
            <if test="monitorpointtypes != null and monitorpointtypes.size>0 ">
                and datas.type in
                <foreach item="item" index="index" collection="monitorpointtypes"
                         open="(" separator="," close=")">
                    #{item}
                </foreach>
            </if>
            <if test="dgimns != null and dgimns.size>0 ">
                and datas.DGIMN in
                <foreach item="item" index="index" collection="dgimns"
                         open="(" separator="," close=")">
                    #{item}
                </foreach>
            </if>
            <if test="pollutionid!=null and pollutionid!='' ">
                and datas.Pollutionid = #{pollutionid}
            </if>
            <if test="pollutionname!=null and pollutionname!='' ">
                and datas.PollutionName like concat('%',#{pollutionname},'%')
            </if>
            <if test="dgimn!=null and dgimn!='' ">
                and datas.DGIMN = #{dgimn}
            </if>
        </trim>
        ORDER BY datas.Pollutionid
    </select>


    <!-- author:xsm description: 根据任务主键ID获取关联的运维任务的所有点位信息 date: 2019/07/16 13:20-->
    <select id="getAllSecurityMonitorPointInfoByTaskIds" parameterType="map" resultType="map">
        SELECT tt.* FROM
        (SELECT t.PK_TaskID,
        t.TaskCreateTime,
        t.FK_Pollutionid Pollutionid,
        t.FK_MonitorPointTypeCode,
        alltype.parentid,
        alltype.DGIMN,
        alltype.MonitorPointID,
        alltype.MonitorPointName
        FROM T_BAS_TaskDisposeManagement t
        LEFT JOIN (
        select
        T_BAS_Pollution.PK_Pollutionid
        Pollutionid,T_BAS_Pollution.PollutionName,T_BAS_Pollution.ShorterName,T_AQ_MajorHazardSources.PK_ID parentid,
        T_AQ_HazardSourceProductDevice.PK_ID MonitorPointID,T_AQ_HazardSourceProductDevice.DGIMN,
        T_AQ_HazardSourceProductDevice.DeviceName AS MonitorPointName, 57 type
        from T_AQ_MajorHazardSources JOIN T_AQ_HazardSourceProductDevice on T_AQ_MajorHazardSources.PK_ID =
        T_AQ_HazardSourceProductDevice.FK_MajorHazardSourcesId
        join T_BAS_Pollution on T_BAS_Pollution.PK_Pollutionid = T_AQ_MajorHazardSources.fk_pollutionid
        union
        select
        T_BAS_Pollution.PK_Pollutionid
        Pollutionid,T_BAS_Pollution.PollutionName,T_BAS_Pollution.ShorterName,T_AQ_StorageTankAreaInfo.PK_ID parentid,
        T_AQ_StorageTankInfo.PK_ID MonitorPointID,
        T_AQ_StorageTankInfo.DGIMN,
        T_AQ_StorageTankInfo.StorageTankCode AS MonitorPointName,
        30 type
        from T_AQ_StorageTankAreaInfo JOIN T_AQ_StorageTankInfo on T_AQ_StorageTankAreaInfo.PK_ID =
        T_AQ_StorageTankInfo.FK_StorageTankAreaID
        join T_BAS_Pollution on T_BAS_Pollution.PK_Pollutionid = T_AQ_StorageTankAreaInfo.fk_pollutionid
        union
        select
        T_BAS_Pollution.PK_Pollutionid
        Pollutionid,T_BAS_Pollution.PollutionName,T_BAS_Pollution.ShorterName,T_AQ_RiskAreaMonitorPoint.PK_MonitorPointID
        parentid,
        T_AQ_RiskAreaMonitorPoint.PK_MonitorPointID MonitorPointID,
        T_AQ_RiskAreaMonitorPoint.DGIMN,
        T_AQ_RiskAreaMonitorPoint.MonitorPointName,
        T_AQ_RiskAreaMonitorPoint.FK_MonitorPointTypeCode type
        from T_AQ_RiskAreaMonitorPoint JOIN T_BAS_Pollution on T_BAS_Pollution.PK_Pollutionid =
        T_AQ_RiskAreaMonitorPoint.fk_pollutionid
        ) alltype
        ON t.FK_Pollutionid = alltype.MonitorPointID AND alltype.type = t.FK_MonitorPointTypeCode
        <trim prefix="where" prefixOverrides="AND||OR">
            t.FK_TaskType = 8
            <if test="taskids != null and taskids.size>0 ">
                and t.PK_TaskID in
                <foreach item="item" index="index" collection="taskids"
                         open="(" separator="," close=")">
                    #{item}
                </foreach>
            </if>
        </trim>
        ) tt
        <trim prefix="where" prefixOverrides="AND||OR">
            tt.DGIMN IS NOT NULL
            <if test="dgimn != null and dgimn !=''">
                AND tt.DGIMN = #{dgimn}
            </if>
            <if test="starttime != null and starttime !=''">
                AND CONVERT (VARCHAR (10),tt.TaskCreateTime,120) >= #{starttime}
            </if>
            <if test="endtime != null and endtime !=''">
                AND CONVERT (VARCHAR (10),tt.TaskCreateTime,120) <![CDATA[<=]]> #{endtime}
            </if>
        </trim>
    </select>

    <!-- author:xsm description: 根据自定义参数获取点位报警任务信息 date: 2020/02/26 13:15-->
    <select id="getSecurityAlarmTaskByDgimnAndTimes" parameterType="map" resultType="map">
        SELECT PK_TaskID,TaskStatus,FK_ProblemType,FeedbackResults,FK_Pollutionid,CONVERT (VARCHAR
        (10),TaskCreateTime,120) TaskCreateTime, FileID,DGIMN,monitorpointid,monitorpointname
        FROM (SELECT t.PK_TaskID,
        t.FK_Pollutionid,
        t.TaskStatus,
        t.TaskCreateTime,
        t.FK_ProblemType,
        t.FeedbackResults,
        t.FileID,
        t.FK_Pollutionid Pollutionid,
        t1.DGIMN,
        t1.monitorpointid,
        t1.monitorpointname
        FROM T_BAS_TaskDisposeManagement t
        LEFT JOIN ( select
        T_BAS_Pollution.PK_Pollutionid
        Pollutionid,T_BAS_Pollution.PollutionName,T_BAS_Pollution.ShorterName,T_AQ_MajorHazardSources.PK_ID parentid,
        T_AQ_HazardSourceProductDevice.PK_ID MonitorPointID,T_AQ_HazardSourceProductDevice.DGIMN,
        T_AQ_HazardSourceProductDevice.DeviceName AS MonitorPointName, 57 type
        from T_AQ_MajorHazardSources JOIN T_AQ_HazardSourceProductDevice on T_AQ_MajorHazardSources.PK_ID =
        T_AQ_HazardSourceProductDevice.FK_MajorHazardSourcesId
        join T_BAS_Pollution on T_BAS_Pollution.PK_Pollutionid = T_AQ_MajorHazardSources.fk_pollutionid
        union
        select
        T_BAS_Pollution.PK_Pollutionid
        Pollutionid,T_BAS_Pollution.PollutionName,T_BAS_Pollution.ShorterName,T_AQ_StorageTankAreaInfo.PK_ID parentid,
        T_AQ_StorageTankInfo.PK_ID MonitorPointID,
        T_AQ_StorageTankInfo.DGIMN,
        T_AQ_StorageTankInfo.StorageTankCode AS MonitorPointName,
        30 type
        from T_AQ_StorageTankAreaInfo JOIN T_AQ_StorageTankInfo on T_AQ_StorageTankAreaInfo.PK_ID =
        T_AQ_StorageTankInfo.FK_StorageTankAreaID
        join T_BAS_Pollution on T_BAS_Pollution.PK_Pollutionid = T_AQ_StorageTankAreaInfo.fk_pollutionid
        union
        select
        T_BAS_Pollution.PK_Pollutionid
        Pollutionid,T_BAS_Pollution.PollutionName,T_BAS_Pollution.ShorterName,T_AQ_RiskAreaMonitorPoint.PK_MonitorPointID
        parentid,
        T_AQ_RiskAreaMonitorPoint.PK_MonitorPointID MonitorPointID,
        T_AQ_RiskAreaMonitorPoint.DGIMN,
        T_AQ_RiskAreaMonitorPoint.MonitorPointName,
        T_AQ_RiskAreaMonitorPoint.FK_MonitorPointTypeCode type
        from T_AQ_RiskAreaMonitorPoint JOIN T_BAS_Pollution on T_BAS_Pollution.PK_Pollutionid =
        T_AQ_RiskAreaMonitorPoint.fk_pollutionid
        ) t1 ON t.FK_Pollutionid = t1.MonitorPointID
        LEFT JOIN T_BAS_Pollution p ON t1.Pollutionid = p.PK_PollutionID
        WHERE
        t.FK_TaskType = 6) tasktable
        <trim prefix="where" prefixOverrides="AND|OR">
            <if test="monitorpointid != null and monitorpointid !=''">
                AND tasktable.MonitorPointID= #{monitorpointid}
            </if>
            <if test="dgimn != null and dgimn !=''">
                AND tasktable.DGIMN= #{dgimn}
            </if>
            <if test="starttime != null and starttime !=''">
                AND CONVERT (VARCHAR (10),tasktable.TaskCreateTime,120) >= #{starttime}
            </if>
            <if test="endtime != null and endtime !=''">
                AND CONVERT (VARCHAR (10),tasktable.TaskCreateTime,120) <![CDATA[<=]]> #{endtime}
            </if>
        </trim>
    </select>

    <!-- author:xsm description: 根据自定义参数获取点位运维信息 date: 2020/02/26 13:15-->
    <select id="getSecurityMonitorPointDevOpsTaskDataByParamMap" parameterType="map" resultType="map">
        SELECT PK_TaskID,TaskStatus,FK_Pollutionid,CONVERT (VARCHAR
        (10),TaskCreateTime,120) TaskCreateTime,FK_MonitorPointTypeCode,FK_ProblemType,FeedbackResults,
        FileID,DevOpsPeople,DevOpsUnit,DGIMN,outputid,outputname
        FROM (SELECT t.PK_TaskID,
        t.TaskStatus,
        t.FK_Pollutionid,
        t.TaskCreateTime,
        t.FK_ProblemType,
        t.FeedbackResults,
        t.FileID,
        t.FK_Pollutionid Pollutionid,
        t.FK_MonitorPointTypeCode,
        ent.DevOpsPeople,
        ent.DevOpsUnit,
        alltype.DGIMN,
        alltype.MonitorPointID outputid,
        alltype.MonitorPointName outputname
        FROM T_BAS_TaskDisposeManagement t
        LEFT JOIN (
        select
        T_BAS_Pollution.PK_Pollutionid
        Pollutionid,T_BAS_Pollution.PollutionName,T_BAS_Pollution.ShorterName,T_AQ_MajorHazardSources.PK_ID parentid,
        T_AQ_HazardSourceProductDevice.PK_ID MonitorPointID,T_AQ_HazardSourceProductDevice.DGIMN,
        T_AQ_HazardSourceProductDevice.DeviceName AS MonitorPointName, 57 type
        from T_AQ_MajorHazardSources JOIN T_AQ_HazardSourceProductDevice on T_AQ_MajorHazardSources.PK_ID =
        T_AQ_HazardSourceProductDevice.FK_MajorHazardSourcesId
        join T_BAS_Pollution on T_BAS_Pollution.PK_Pollutionid = T_AQ_MajorHazardSources.fk_pollutionid
        union
        select
        T_BAS_Pollution.PK_Pollutionid
        Pollutionid,T_BAS_Pollution.PollutionName,T_BAS_Pollution.ShorterName,T_AQ_StorageTankAreaInfo.PK_ID parentid,
        T_AQ_StorageTankInfo.PK_ID MonitorPointID,
        T_AQ_StorageTankInfo.DGIMN,
        T_AQ_StorageTankInfo.StorageTankCode AS MonitorPointName,
        30 type
        from T_AQ_StorageTankAreaInfo JOIN T_AQ_StorageTankInfo on T_AQ_StorageTankAreaInfo.PK_ID =
        T_AQ_StorageTankInfo.FK_StorageTankAreaID
        join T_BAS_Pollution on T_BAS_Pollution.PK_Pollutionid = T_AQ_StorageTankAreaInfo.fk_pollutionid
        union
        select
        T_BAS_Pollution.PK_Pollutionid
        Pollutionid,T_BAS_Pollution.PollutionName,T_BAS_Pollution.ShorterName,T_AQ_RiskAreaMonitorPoint.PK_MonitorPointID
        parentid,
        T_AQ_RiskAreaMonitorPoint.PK_MonitorPointID MonitorPointID,
        T_AQ_RiskAreaMonitorPoint.DGIMN,
        T_AQ_RiskAreaMonitorPoint.MonitorPointName,
        T_AQ_RiskAreaMonitorPoint.FK_MonitorPointTypeCode type
        from T_AQ_RiskAreaMonitorPoint JOIN T_BAS_Pollution on T_BAS_Pollution.PK_Pollutionid =
        T_AQ_RiskAreaMonitorPoint.fk_pollutionid
        ) alltype
        ON t.FK_Pollutionid = alltype.Pollutionid AND alltype.type = t.FK_MonitorPointTypeCode
        <if test="userid != null and userid !=''">
            JOIN (
            SELECT
            FK_PollutionID
            FROM
            (select FK_PollutionID,FK_UserID FROM T_BAS_UserMonitorPointRelationData WHERE
            T_BAS_UserMonitorPointRelationData.FK_PollutionID is NOT NULL UNION
            select FK_MonitorPointID as FK_PollutionID,FK_UserID FROM T_BAS_UserMonitorPointRelationData WHERE
            T_BAS_UserMonitorPointRelationData.FK_PollutionID IS NULL
            ) usertable
            WHERE
            usertable.FK_UserID = #{userid}
            GROUP BY
            FK_PollutionID
            ) relation ON t.FK_Pollutionid = relation.Pollutionid
        </if>
        LEFT JOIN (SELECT
        T_BAS_EntDevOpsInfo.DevOpsPeople,T_BAS_EntDevOpsInfo.DevOpsUnit,T_BAS_EntDevOpsInfo.FK_PollutionID,T_BAS_EntDevOpsInfo.FK_MonitorPointTypeCode
        FROM T_BAS_EntDevOpsInfo WHERE (T_BAS_EntDevOpsInfo.FK_PollutionID IS NOT NULL AND
        T_BAS_EntDevOpsInfo.FK_PollutionID!='') UNION SELECT
        T_BAS_EntDevOpsInfo.DevOpsPeople,T_BAS_EntDevOpsInfo.DevOpsUnit,T_BAS_EntDevOpsInfo.FK_MonitorPointId
        FK_PollutionID,T_BAS_EntDevOpsInfo.FK_MonitorPointTypeCode FROM T_BAS_EntDevOpsInfo WHERE
        (T_BAS_EntDevOpsInfo.FK_MonitorPointId IS NOT NULL AND T_BAS_EntDevOpsInfo.FK_MonitorPointId!='')) ent
        on ent.FK_MonitorPointTypeCode=t.FK_MonitorPointTypeCode AND ent.FK_PollutionID= t.FK_Pollutionid
        WHERE
        t.FK_TaskType = 8) tasktable
        <trim prefix="where" prefixOverrides="AND|OR">
            tasktable.DGIMN IS NOT NULL
            <if test="monitorpointtype != null and monitorpointtype !=''">
                AND tasktable.FK_MonitorPointTypeCode= #{monitorpointtype}
            </if>
            <if test="monitorpointid != null and monitorpointid !=''">
                AND tasktable.outputid= #{monitorpointid}
            </if>
            <if test="dgimn != null and dgimn !=''">
                AND tasktable.DGIMN= #{dgimn}
            </if>
            <if test="starttime != null and starttime !=''">
                AND CONVERT (VARCHAR (10),tasktable.TaskCreateTime,120) >= #{starttime}
            </if>
            <if test="endtime != null and endtime !=''">
                AND CONVERT (VARCHAR (10),tasktable.TaskCreateTime,120) <![CDATA[<=]]> #{endtime}
            </if>
        </trim>
    </select>


    <!--
        author:chengzq
        description: 获取其他监测点任务信息
        param:
        date: 2021/01/27 15:06
    -->
    <select id="getMonitrpointTaskInfoByParamMap" parameterType="map" resultMap="MonitorTaskResultMap">
        SELECT
        t3.MonitorPointName,
        convert(varchar(19),t1.TaskCreateTime,120) TaskCreateTime,
        t3.dgimn,
        t3.FK_MonitorPointTypeCode,
        t4.User_Name,
        t1.PK_TaskID,
        t1.TaskStatus,
        case t1.TaskStatus when 1 then '待处理' when 2 then '已完成' end TaskStatusName,
        t1.FK_Pollutionid monitorpointid,
        t2.FK_TaskHandleUserID
        FROM
        T_BAS_TaskDisposeManagement t1
        LEFT JOIN T_BAS_TaskFlowRecordInfo t2 on t1.PK_TaskID=t2.FK_TaskID and t1.FK_TaskType=t2.FK_TaskType
        left join T_BAS_OtherMonitorPoint t3 on t1.FK_Pollutionid=t3.PK_MonitorPointID and
        t1.FK_MonitorPointTypeCode=t3.FK_MonitorPointTypeCode
        left join Base_UserInfo t4 on t2.FK_TaskHandleUserID=t4.User_ID
        WHERE
        t1.FK_TaskType =9 and t1.TaskStatus in (1,2)
        <if test="monitorpointname != null and monitorpointname !=''">
            AND t3.MonitorPointName like concat('%',#{monitorpointname},'%')
        </if>
        <if test="taskstatus != null and taskstatus !=''">
            AND t1.TaskStatus = #{taskstatus}
        </if>
        <if test="starttime != null and starttime !=''">
            AND CONVERT (VARCHAR (10),t1.TaskCreateTime,120) >= #{starttime}
        </if>
        <if test="endtime != null and endtime !=''">
            AND CONVERT (VARCHAR (10),t1.TaskCreateTime,120) <![CDATA[<=]]> #{endtime}
        </if>
        order by t1.TaskStatus, TaskCreateTime desc
    </select>

    <!--
       author:xsm
       description: 统计某类型任务未分派数量
       param:
       date: 2021/03/10 14:43
   -->
    <select id="countUnassignedTaskDataNum" parameterType="map" resultType="map">
        SELECT COUNT(tt.PK_TaskID) num,tt.TaskStatus,tt.FK_TaskType FROM
        T_BAS_TaskDisposeManagement tt
        <trim prefix="where" prefixOverrides="AND|OR">
            tt.TaskStatus = 0
            <if test="starttime != null and starttime !=''">
                AND CONVERT (VARCHAR (10),tt.TaskCreateTime,120) >= #{starttime}
            </if>
            <if test="endtime != null and endtime !=''">
                AND CONVERT (VARCHAR (10),tt.TaskCreateTime,120) <![CDATA[<=]]> #{endtime}
            </if>
            <if test="tasktypes != null and tasktypes.size>0 ">
                and tt.FK_TaskType in
                <foreach item="item" index="index" collection="tasktypes"
                         open="(" separator="," close=")">
                    #{item}
                </foreach>
            </if>
        </trim>
        GROUP BY tt.TaskStatus,tt.FK_TaskType
    </select>

    <!--
      author:xsm
      description: 统计报警、运维任务抄送给我的任务数量（未读）
      param:
      date: 2021/12/13 14:43
  -->
    <select id="countCarbonCopyTaskDataNum" parameterType="map" resultType="map">
        SELECT COUNT(tt.PK_TaskID) num,tt.TaskStatus,tt.FK_TaskType FROM
        T_BAS_TaskDisposeManagement tt
        join T_BAS_TaskFlowRecordInfo t2 ON  tt.PK_TaskID = t2.FK_TaskID
        <trim prefix="where" prefixOverrides="AND|OR">
            t2.CurrentTaskStatus IN ('抄送')
            <if test="starttime != null and starttime !=''">
                AND CONVERT (VARCHAR (10),tt.TaskCreateTime,120) >= #{starttime}
            </if>
            <if test="endtime != null and endtime !=''">
                AND CONVERT (VARCHAR (10),tt.TaskCreateTime,120) <![CDATA[<=]]> #{endtime}
            </if>
            <if test="datauserid != null and datauserid !=''">
                AND t2.FK_TaskHandleUserID = #{datauserid}
            </if>
            <if test="tasktypes != null and tasktypes.size>0 ">
                and tt.FK_TaskType in
                <foreach item="item" index="index" collection="tasktypes"
                         open="(" separator="," close=")">
                    #{item}
                </foreach>
            </if>
        </trim>
        GROUP BY tt.TaskStatus,tt.FK_TaskType
    </select>

    <select id="countOtherStatusTaskDataNumForUserID" parameterType="map" resultType="map">
        SELECT COUNT(tt.PK_TaskID) num,tt.TaskStatus,tt.FK_TaskType FROM
        (select
        t1.PK_TaskID,
        t1.TaskStatus,
        t1.FK_TaskType,
        STUFF( ( SELECT ',' + T3.FK_TaskHandleUserID FROM
        T_BAS_TaskFlowRecordInfo T3
        WHERE T3.FK_TaskID = t1.PK_TaskID AND T3.FK_TaskType = t1.FK_TaskType
        and T3.FK_TaskHandleUserID = #{userid}
        FOR XML PATH ('')
        ),1,1,'') iscommentuserid
        FROM T_BAS_TaskDisposeManagement t1
        <trim prefix="where" prefixOverrides="AND|OR">
            t1.TaskStatus != 0
            <if test="starttime != null and starttime !=''">
                AND CONVERT (VARCHAR (10),t1.TaskCreateTime,120) >= #{starttime}
            </if>
            <if test="endtime != null and endtime !=''">
                AND CONVERT (VARCHAR (10),t1.TaskCreateTime,120) <![CDATA[<=]]> #{endtime}
            </if>
            <if test="tasktypes != null and tasktypes.size>0 ">
                and t1.FK_TaskType in
                <foreach item="item" index="index" collection="tasktypes"
                         open="(" separator="," close=")">
                    #{item}
                </foreach>
            </if>
        </trim>
        )tt WHERE tt.iscommentuserid IS NOT NULL
        GROUP BY tt.TaskStatus,tt.FK_TaskType
    </select>

    <select id="countOtherStatusAlarmTaskNumByUserID" parameterType="map" resultType="map">
        select t.* from (
        SELECT COUNT
        ( * ) num,
        TaskStatus,
        FK_TaskType
        FROM
        T_BAS_TaskDisposeManagement
        where
        PK_TaskID in (
       SELECT DISTINCT
        tt.FK_TaskID
        FROM
        T_BAS_TaskFlowRecordInfo tt JOIN
        (SELECT
        fk_taskid,
        MAX (TaskHandleTime) TaskHandleTime
        FROM
        T_BAS_TaskFlowRecordInfo t
        WHERE
        CurrentTaskStatus IN ('待处理','转办')
        and TaskComment is null
        GROUP BY
        t.FK_TaskID) ttt ON tt.FK_TaskID = ttt.fk_taskid AND
        tt.TaskHandleTime = ttt.TaskHandleTime and
        FK_TaskHandleUserID =#{userid}
        )
        and TaskStatus in (1)
        GROUP BY
        TaskStatus,
        FK_TaskType
        UNION all
        SELECT COUNT
        (*) num,
        TaskStatus,
        FK_TaskType
        FROM
        T_BAS_TaskDisposeManagement
        where
        PK_TaskID in (
       SELECT DISTINCT
        tt.FK_TaskID
        FROM
        T_BAS_TaskFlowRecordInfo tt JOIN
        (SELECT
        fk_taskid,
        MAX (TaskHandleTime) TaskHandleTime
        FROM
        T_BAS_TaskFlowRecordInfo t
        WHERE
        CurrentTaskStatus IN ('处理中','转办')
        and TaskComment is null
        GROUP BY
        t.FK_TaskID) ttt ON tt.FK_TaskID = ttt.fk_taskid AND
        tt.TaskHandleTime = ttt.TaskHandleTime and
        FK_TaskHandleUserID =#{userid}
        )
        and TaskStatus in (2)
        GROUP BY
        TaskStatus,
        FK_TaskType
        UNION all
        SELECT COUNT
        (*) num,
        TaskStatus,
        FK_TaskType
        FROM
        T_BAS_TaskDisposeManagement
        where
        PK_TaskID in (
        SELECT DISTINCT
        tt.FK_TaskID
        FROM
        T_BAS_TaskFlowRecordInfo tt JOIN
        (SELECT
        fk_taskid,
        MAX (TaskHandleTime) TaskHandleTime
        FROM
        T_BAS_TaskFlowRecordInfo t
        WHERE
        CurrentTaskStatus IN ('审核')
        GROUP BY
        t.FK_TaskID) ttt ON tt.FK_TaskID = ttt.fk_taskid AND
        tt.TaskHandleTime = ttt.TaskHandleTime and
        FK_TaskHandleUserID =#{userid}
        )
        and TaskStatus in (5)
        GROUP BY
        TaskStatus,
        FK_TaskType
        UNION all
        SELECT COUNT
        ( * ) num,
        case Status when 2 then 1 when 3 then 2 when 4 then 4 end TaskStatus,
        2 FK_TaskType
        FROM
        T_BAS_PetitionInfo
        where
        PK_ID in (
        SELECT
        FK_TaskID
        FROM
        T_BAS_TaskFlowRecordInfo
        where FK_TaskHandleUserID =#{userid} and CurrentTaskStatus in ('待处理','转办') and TaskComment is null
        and fk_taskid not in (select distinct fk_taskid from T_BAS_TaskFlowRecordInfo record where FK_TaskType=2 and
        CurrentTaskStatus ='转办'
        and not exists (select fk_taskid,MAX ( TaskHandleTime ) TaskHandleTime from T_BAS_TaskFlowRecordInfo t where
        t.FK_TaskHandleUserID =#{userid} and FK_TaskType=2 and t.CurrentTaskStatus ='转办' and
        record.fk_taskid=t.fk_taskid and record.TaskHandleTime=t.TaskHandleTime GROUP BY FK_TaskID )
        )
        )
        and Status in (2)
        GROUP BY
        Status
        UNION all
        SELECT COUNT
        ( * ) num,
        case Status when 2 then 1 when 3 then 2 when 4 then 4 end TaskStatus,
        2 FK_TaskType
        FROM
        T_BAS_PetitionInfo
        where
        PK_ID in (
        SELECT
        FK_TaskID
        FROM
        T_BAS_TaskFlowRecordInfo
        where FK_TaskHandleUserID =#{userid} and CurrentTaskStatus in ('处理中','转办') and TaskComment is null and FK_TaskType=2
        and fk_taskid not in (select distinct fk_taskid from T_BAS_TaskFlowRecordInfo record where FK_TaskType=2 and
        CurrentTaskStatus ='转办'
        and not exists (select fk_taskid,MAX ( TaskHandleTime ) TaskHandleTime from T_BAS_TaskFlowRecordInfo t where
        t.FK_TaskHandleUserID =#{userid} and FK_TaskType=2 and t.CurrentTaskStatus ='转办' and
        record.fk_taskid=t.fk_taskid and record.TaskHandleTime=t.TaskHandleTime GROUP BY FK_TaskID )

        )
        )
        and Status in (3)
        GROUP BY
        Status
        ) t
        order by t.FK_TaskType,t.TaskStatus
    </select>

    <select id="countCompletedStatusTaskDataNumForUserID" parameterType="map" resultType="map">
        SELECT COUNT(tt.PK_TaskID) num,tt.TaskStatus,tt.FK_TaskType FROM
        (select
        t1.PK_TaskID,
        t1.TaskStatus,
        t1.FK_TaskType
        FROM T_BAS_TaskDisposeManagement t1
        <trim prefix="where" prefixOverrides="AND|OR">
            t1.TaskStatus = 4
            <if test="starttime != null and starttime !=''">
                AND CONVERT (VARCHAR (10),t1.TaskCreateTime,120) >= #{starttime}
            </if>
            <if test="endtime != null and endtime !=''">
                AND CONVERT (VARCHAR (10),t1.TaskCreateTime,120) <![CDATA[<=]]> #{endtime}
            </if>
            <if test="tasktypes != null and tasktypes.size>0 ">
                and t1.FK_TaskType in
                <foreach item="item" index="index" collection="tasktypes"
                         open="(" separator="," close=")">
                    #{item}
                </foreach>
            </if>
        </trim>
        )tt
        GROUP BY tt.TaskStatus,tt.FK_TaskType
    </select>

    <!--
        author:xsm
        description: 根据任务ID获取报警任务详情
        param:
        date: 2021/03/10 14:43
    -->
    <select id="getAlarmTaskDisposeManagementDetailByID" parameterType="map" resultType="map">
        select
        t1.FK_MonitorPointTypeCode,
        t1.PK_TaskID,
        t1.TaskStatus,
        t1.FK_Pollutionid,
        t1.FK_ProblemType,
        t1.TaskRemark,
        t1.FeedbackResults,
        t1.FileID,
        t1.FK_TaskType,
        CONVERT (VARCHAR
        (5),t1.TaskCreateTime,108) + '-' +CONVERT (VARCHAR
        (5),t1.TaskEndTime,108) overtime ,
        datediff( minute, t1.AlarmStartTime, t1.TaskEndTime) overtimenum,
        CONVERT (VARCHAR
        (19),t1.TaskCreateTime,120) TaskCreateTime,
        CONVERT (VARCHAR
        (19),t1.AlarmStartTime,120) AlarmStartTime,
        CONVERT (VARCHAR
        (19),t1.TaskEndTime,120) TaskEndTime
        FROM T_BAS_TaskDisposeManagement t1
        where t1.PK_TaskID = #{taskid}

    </select>


    <!--
        author:chengzq
        description: 获取点位最新报警任务信息
        param:
        date: 2021/03/11 10:45
    -->
    <select id="getMonitorPointTaskStatusByParams" parameterType="map" resultType="map">
        select
        t.PK_TaskID,
        t.Fk_pollutionID,
        convert(varchar(19),t.TaskCreateTime,120) TaskCreateTime,
        case when TaskEndTime is null then convert(varchar(10),t.TaskCreateTime,120)+' 23:59:59' else
        convert(varchar(19),t.TaskEndTime,120) end TaskEndTime,
        case t.TaskStatus when 0 then '待分派' when 1 then '待处理' when 2 then '处理中' when 3 then '已忽略' when 4 then '已完成' end
        TaskStatus,
        t.FK_TaskType
        from
        T_BAS_TaskDisposeManagement t
        join (
        select
        Fk_pollutionID,
        max(convert(varchar(19),TaskCreateTime,120)) TaskCreateTime,
        TaskStatus,
        FK_TaskType
        from
        T_BAS_TaskDisposeManagement
        <where>
            FK_TaskType in(1,5)
            <if test="monitorpointids!=null and monitorpointids.size>0">
                and FK_Pollutionid in
                <foreach collection="monitorpointids" item="item" separator="," close=")" open="(">
                    #{item}
                </foreach>
            </if>
        </where>
        GROUP BY
        Fk_pollutionID,
        TaskStatus,
        FK_TaskType
        )t1
        on
        t.FK_Pollutionid=t1.Fk_pollutionID
        and t.TaskCreateTime=t1.TaskCreateTime
        and t.TaskStatus=t1.taskStatus
        and t.FK_TaskType=t1.FK_TaskType
    </select>



    <!--
        author:chengzq
        description: 获取自己相关的任务信息包含未分派和抄送任务信息
        param: 注：userid必传
        date: 2021/03/11 19:00
    -->
    <select id="getOwnTaskDisposeInfoByParamMap" parameterType="map" resultMap="TaskFlowRecordMap">
        select * from (
        SELECT
        t1.PK_TaskID,
        case t1.TaskStatus when 0 then '待分派' when 1 then '待处理' when 2 then '处理中' when 4 then '已完成' when 5 then '待审核' end
        TaskStatusName,
        TaskStatus,
        t1.FK_TaskType,
        t1.FK_MonitorPointTypeCode,
        convert(varchar(19),alarmstarttime,120) alarmstarttime,
        t1.FK_Pollutionid monitorpointid,
        convert(varchar(19),t1.TaskCreateTime,120) TaskCreateTime,
        convert(varchar(19),t1.TaskEndTime,120) TaskEndTime,
        t6.CurrentTaskStatus,
        t6.CurrentTaskStatus+'_'+convert(varchar(19),t6.TaskHandleTime,120) statusandtime,
        t6.TaskComment,
        convert(varchar(19),t6.TaskHandleTime,120) TaskHandleTime,
        t7.user_name,
        t8.AlarmType,
        PUB_CODE_AlarmType.name alarmtypename,
        t9.name pollutantname,
        level.name OverLevelname,
        t1.recoverystatus,
        case when t1.RecoveryStatus = 0 THEN  '未恢复' WHEN  t1.RecoveryStatus = 1 then '已恢复' end recoverystatusname,
        convert(varchar(19),t1.RecoveryTime,120) recoverytime,
        PUB_CODE_MonitorPointType.name fkmonitorpointtypename
        from
        T_BAS_TaskDisposeManagement t1
        left join PUB_CODE_MonitorPointType on t1.FK_MonitorPointTypeCode=PUB_CODE_MonitorPointType.Code
        join T_BAS_TaskFlowRecordInfo t6 on (t1.PK_TaskID = t6.FK_TaskID and t1.FK_TaskType=t6.FK_TaskType)
        <if test="taskids!=null and taskids.size>0">
            AND t6.FK_TaskID IN
            <foreach collection="taskids" item="item" separator="," close=")" open="(">
                #{item}
            </foreach>
        </if>
        and t6.TaskComment is null
        left join Base_UserInfo t7 on t6.FK_TaskHandleUserID=t7.User_ID
        left join T_BAS_TaskAlarmPollutantInfo t8 on t1.PK_TaskID=t8.FK_TaskID and t1.FK_TaskType=t8.FK_TaskType
        left join PUB_CODE_AlarmType on t8.AlarmType=PUB_CODE_AlarmType.code
        left join PUB_CODE_AlarmLevel level on level.Code=t1.OverLevelCode
        left join PUB_CODE_PollutantFactor t9 on t8.FK_PolluantCode=t9.code and
        t1.FK_MonitorPointTypeCode=t9.PollutantType
        ) datas
        order by PK_TaskID,TaskHandleTime desc
    </select>

    <!--
        author:xsm
        description: 获取自己相关的任务信息包含未分派和抄送任务信息
        param:
        date: 2021/12/30 13:57
    -->
    <select id="getOwnTaskDisposeIdsByParamMap" parameterType="map" resultType="map">
        select * from (
        SELECT DISTINCT
        t1.PK_TaskID pk_taskid,
        t1.PK_TaskID pk_id,
        t1.taskname,
        t1.taskremark,
        case t1.TaskStatus when 0 then '待分派' when 1 then '待处理' when 2 then '处理中' when 4 then '已完成' when 5 then '待审核' end
        taskstatusname,
        taskstatus,
        t1.FK_TaskType,
        t1.FK_MonitorPointTypeCode fk_monitorpointtypecode,
        convert(varchar(19),alarmstarttime,120) alarmstarttime,
        case when t1.FK_MonitorPointTypeCode in (1,37) then ShorterName+'-'+t2.OutputName
        when t1.FK_MonitorPointTypeCode in(2,22) then ShorterName+'-'+t3.outputname
        when t1.FK_MonitorPointTypeCode in (40,41,38) then ShorterName+'-'+t4.MonitorPointName
        when t1.FK_MonitorPointTypeCode in (9,10,33) then t5.MonitorPointName
        when t1.FK_MonitorPointTypeCode =5 then tair.MonitorPointName
        when t1.FK_MonitorPointTypeCode =6 then tsz.MonitorPointName
        else '' end monitorpointname,
        case when t1.FK_MonitorPointTypeCode in (1,37) then t2.OutputName
        when t1.FK_MonitorPointTypeCode in(2,22) then t3.outputname
        when t1.FK_MonitorPointTypeCode in (40,41,38) then t4.MonitorPointName
        when t1.FK_MonitorPointTypeCode in (9,10,33) then t5.MonitorPointName
        when t1.FK_MonitorPointTypeCode =5 then tair.MonitorPointName
        when t1.FK_MonitorPointTypeCode =6 then tsz.MonitorPointName
        else '' end pointname,
        case when t1.FK_MonitorPointTypeCode in (1,37) then t2.dgimn
        when t1.FK_MonitorPointTypeCode in(2,22) then t3.dgimn
        when t1.FK_MonitorPointTypeCode in (40,41,38) then t4.dgimn
        when t1.FK_MonitorPointTypeCode in (9,10,33) then t5.dgimn
        when t1.FK_MonitorPointTypeCode =5 then tair.dgimn
        when t1.FK_MonitorPointTypeCode =6 then tsz.dgimn
        else '' end dgimn,
        t1.FK_Pollutionid monitorpointid,
        pollutionname,
        convert(varchar(19),t1.TaskCreateTime,120) taskcreatetime,
        convert(varchar(19),t1.TaskEndTime,120) taskendtime,
        PK_PollutionID fk_pollutionid,
        PK_PollutionID pollutionid,
        level.name overlevelname,
        t1.recoverystatus,
        case when t1.RecoveryStatus = 0 THEN  '未恢复' WHEN  t1.RecoveryStatus = 1 then '已恢复' end recoverystatusname,
        convert(varchar(19),t1.RecoveryTime,120) recoverytime,
        PUB_CODE_MonitorPointType.name fkmonitorpointtypename
        from
        T_BAS_TaskDisposeManagement t1
        LEFT JOIN T_BAS_WaterOutputInfo t2 on t1.FK_Pollutionid=t2.PK_ID
        left join T_BAS_GASOutPutInfo t3 on t1.FK_Pollutionid=t3.PK_ID
        left join T_BAS_UnorganizedMonitorPointInfo t4 on t1.FK_Pollutionid=t4.PK_ID
        left join T_BAS_Pollution on t2.FK_Pollutionid=PK_PollutionID or t3.FK_PollutionID=PK_PollutionID or
        t4.FK_Pollutionid=PK_PollutionID
        left join PUB_CODE_MonitorPointType on t1.FK_MonitorPointTypeCode=PUB_CODE_MonitorPointType.Code
        left join T_BAS_OtherMonitorPoint t5 on t1.FK_Pollutionid=t5.PK_MonitorPointID
        left join T_BAS_AirMonitorStation tair on t1.FK_Pollutionid=tair.PK_AirID
        left join T_BAS_WaterStationInfo tsz on t1.FK_Pollutionid=tsz.PK_WaterStationID
        right join
        (select
        *
        from
        T_BAS_TaskFlowRecordInfo
        where FK_TaskID in (
        SELECT DISTINCT
        tt.FK_TaskID
        FROM
        T_BAS_TaskFlowRecordInfo tt JOIN
        <choose>
            <when test='currenttaskstatuslist!=null and currenttaskstatuslist.contains("抄送")'>
                (SELECT
                fk_taskid,
                MAX (TaskHandleTime) TaskHandleTime
                FROM
                T_BAS_TaskFlowRecordInfo t
                WHERE
                CurrentTaskStatus IN ('抄送','抄送已读')
                GROUP BY
                t.FK_TaskID) ttt ON tt.FK_TaskID = ttt.fk_taskid AND
                tt.TaskHandleTime = ttt.TaskHandleTime
                <if test="userid!=null and userid!=''">
                    and FK_TaskHandleUserID =#{userid}
                </if>
            </when>
            <when test='currenttaskstatuslist!=null and currenttaskstatuslist.contains("审核")'>
                (SELECT
                fk_taskid,
                MAX (TaskHandleTime) TaskHandleTime
                FROM
                T_BAS_TaskFlowRecordInfo t
                WHERE
                CurrentTaskStatus IN ('审核')
                GROUP BY
                t.FK_TaskID) ttt ON tt.FK_TaskID = ttt.fk_taskid AND
                tt.TaskHandleTime = ttt.TaskHandleTime
                <if test="userid!=null and userid!=''">
                    and FK_TaskHandleUserID =#{userid}
                </if>
            </when>
            <when test='currenttaskstatuslist!=null and currenttaskstatuslist.contains("处理中")'>
                (SELECT
                fk_taskid,
                MAX (TaskHandleTime) TaskHandleTime
                FROM
                T_BAS_TaskFlowRecordInfo t
                WHERE
                CurrentTaskStatus IN ('处理中','转办')
                and TaskComment is null
                GROUP BY
                t.FK_TaskID) ttt ON tt.FK_TaskID = ttt.fk_taskid AND
                tt.TaskHandleTime = ttt.TaskHandleTime
                <if test="userid!=null and userid!=''">
                    and FK_TaskHandleUserID =#{userid}
                </if>
            </when>
            <when test='currenttaskstatuslist!=null and currenttaskstatuslist.contains("已完成")'>
                (SELECT
                fk_taskid,
                MAX (TaskHandleTime) TaskHandleTime
                FROM
                T_BAS_TaskFlowRecordInfo t
                WHERE
                CurrentTaskStatus IN ('反馈信息')
                GROUP BY
                t.FK_TaskID) ttt ON tt.FK_TaskID = ttt.fk_taskid AND
                tt.TaskHandleTime = ttt.TaskHandleTime
                <if test="userid!=null and userid!=''">
                    and FK_TaskHandleUserID =#{userid}
                </if>
            </when>
            <otherwise>
                (SELECT
                fk_taskid,
                MAX (TaskHandleTime) TaskHandleTime
                FROM
                T_BAS_TaskFlowRecordInfo t
                WHERE
                CurrentTaskStatus IN ('待处理','转办')
                and TaskComment is null
                GROUP BY
                t.FK_TaskID) ttt ON tt.FK_TaskID = ttt.fk_taskid AND
                tt.TaskHandleTime = ttt.TaskHandleTime
                <if test="userid!=null and userid!=''">
                    and FK_TaskHandleUserID =#{userid}
                </if>
            </otherwise>
        </choose>
        )) t6
        on (t1.PK_TaskID = t6.FK_TaskID and t1.FK_TaskType=t6.FK_TaskType)
        left join PUB_CODE_AlarmLevel level on level.Code=t1.OverLevelCode
        <where>
            <if test="statuslist!=null and statuslist.size>0">
                and t1.TaskStatus in
                <foreach collection="statuslist" item="item" separator="," close=")" open="(">
                    #{item}
                </foreach>
            </if>
            <if test="fktasktype!=null and fktasktype!=''">
                and t1.FK_TaskType =#{fktasktype}
            </if>
        </where>
        ) datas
        <where>
            <if test="statuslist!=null and statuslist.size>0">
                and taskstatus in
                <foreach collection="statuslist" item="item" separator="," close=")" open="(">
                    #{item}
                </foreach>
            </if>
            <if test="recoverystatuslist!=null and recoverystatuslist.size>0">
                and recoverystatus in
                <foreach collection="recoverystatuslist" item="item" separator="," close=")" open="(">
                    #{item}
                </foreach>
            </if>
            <if test="fk_pollutionid!=null and fk_pollutionid!=''">
                and pk_pollutionid =#{fk_pollutionid}
            </if>
            <if test="fktasktype!=null and fktasktype!=''">
                and FK_TaskType =#{fktasktype}
            </if>
            <if test="starttime != null and starttime !=''">
                AND CONVERT (VARCHAR (10),datas.taskcreatetime,120) >= #{starttime}
            </if>
            <if test="endtime != null and endtime !=''">
                AND CONVERT (VARCHAR (10),datas.taskcreatetime,120) <![CDATA[<=]]> #{endtime}
            </if>
            <if test="monitorpointname != null and monitorpointname !=''">
                AND monitorpointname like concat('%',#{monitorpointname},'%')
            </if>
            <if test="monitorpointtypes != null and monitorpointtypes.size>0">
                AND fk_monitorpointtypecode in
                <foreach collection="monitorpointtypes" item="item" separator="," close=")" open="(">
                    #{item}
                </foreach>
            </if>

        </where>
        order by taskendtime desc,taskcreatetime desc,monitorpointname
    </select>

    <!--
           author:xsm
           description: 获取未分派任务信息
           param:
           date: 2021/12/30 09:37
       -->
    <select id="getUnassignedTaskDisposeInfoByParamMap" parameterType="map" resultMap="TaskManagementResultMap">
        select * from (
        SELECT
        t1.PK_TaskID,
        t1.TaskName,
        t1.TaskRemark,
        case t1.TaskStatus when 0 then '待分派' when 1 then '待处理' when 2 then '处理中' when 4 then '已完成' when 5 then '待审核' end
        TaskStatusName,
        TaskStatus,
        t1.FK_TaskType,
        t1.FK_MonitorPointTypeCode,
        convert(varchar(19),alarmstarttime,120) alarmstarttime,
        case when t1.FK_MonitorPointTypeCode in (1,37) then ShorterName+'-'+t2.OutputName
        when t1.FK_MonitorPointTypeCode in(2,22) then ShorterName+'-'+t3.outputname
        when t1.FK_MonitorPointTypeCode in (40,41,38) then ShorterName+'-'+t4.MonitorPointName
        when t1.FK_MonitorPointTypeCode in (9,10,33) then t5.MonitorPointName
        when t1.FK_MonitorPointTypeCode =5 then tair.MonitorPointName
        when t1.FK_MonitorPointTypeCode =6 then tsz.MonitorPointName
        else '' end outputname,
        case when t1.FK_MonitorPointTypeCode in (1,37) then t2.OutputName
        when t1.FK_MonitorPointTypeCode in(2,22) then t3.outputname
        when t1.FK_MonitorPointTypeCode in (40,41,38) then t4.MonitorPointName
        when t1.FK_MonitorPointTypeCode in (9,10,33) then t5.MonitorPointName
        when t1.FK_MonitorPointTypeCode =5 then tair.MonitorPointName
        when t1.FK_MonitorPointTypeCode =6 then tsz.MonitorPointName
        else '' end PointName,
        case when t1.FK_MonitorPointTypeCode in (1,37) then t2.dgimn
        when t1.FK_MonitorPointTypeCode in(2,22) then t3.dgimn
        when t1.FK_MonitorPointTypeCode in (40,41,38) then t4.dgimn
        when t1.FK_MonitorPointTypeCode in (9,10,33) then t5.dgimn
        when t1.FK_MonitorPointTypeCode =5 then tair.dgimn
        when t1.FK_MonitorPointTypeCode =6 then tsz.dgimn
        else '' end dgimn,
        t1.FK_Pollutionid monitorpointid,
        PollutionName,
        convert(varchar(19),t1.TaskCreateTime,120) TaskCreateTime,
        convert(varchar(19),t1.TaskEndTime,120) TaskEndTime,
        '' CurrentTaskStatus,
        '' statusandtime,
        '' TaskComment,
        '' TaskHandleTime,
        '' user_name,
        PK_PollutionID,
        level.name OverLevelname,
        t1.recoverystatus,
        case when t1.RecoveryStatus = 0 THEN  '未恢复' WHEN  t1.RecoveryStatus = 1 then '已恢复' end recoverystatusname,
        convert(varchar(19),t1.RecoveryTime,120) recoverytime,
        PUB_CODE_MonitorPointType.name fkmonitorpointtypename
        FROM
        T_BAS_TaskDisposeManagement t1
        LEFT JOIN T_BAS_WaterOutputInfo t2 on t1.FK_Pollutionid=t2.PK_ID
        left join T_BAS_GASOutPutInfo t3 on t1.FK_Pollutionid=t3.PK_ID
        left join T_BAS_UnorganizedMonitorPointInfo t4 on t1.FK_Pollutionid=t4.PK_ID
        left join T_BAS_Pollution on t2.FK_Pollutionid=PK_PollutionID or t3.FK_PollutionID=PK_PollutionID or
        t4.FK_Pollutionid=PK_PollutionID
        left join PUB_CODE_MonitorPointType on t1.FK_MonitorPointTypeCode=PUB_CODE_MonitorPointType.Code
        left join T_BAS_OtherMonitorPoint t5 on t1.FK_Pollutionid=t5.PK_MonitorPointID
        left join T_BAS_AirMonitorStation tair on t1.FK_Pollutionid=tair.PK_AirID
        left join T_BAS_WaterStationInfo tsz on t1.FK_Pollutionid=tsz.PK_WaterStationID
        left join PUB_CODE_AlarmLevel level on level.Code=t1.OverLevelCode
        <where>
            t1.TaskStatus =0
            <if test="fktasktype!=null and fktasktype!=''">
                and t1.FK_TaskType =#{fktasktype}
            </if>
        </where>
        ) datas
        <where>
            <if test="recoverystatuslist!=null and recoverystatuslist.size>0">
                and RecoveryStatus in
                <foreach collection="recoverystatuslist" item="item" separator="," close=")" open="(">
                    #{item}
                </foreach>
            </if>
            <if test="fk_pollutionid!=null and fk_pollutionid!=''">
                and PK_PollutionID =#{fk_pollutionid}
            </if>
            <if test="starttime != null and starttime !=''">
                AND CONVERT (VARCHAR (10),datas.TaskCreateTime,120) >= #{starttime}
            </if>
            <if test="endtime != null and endtime !=''">
                AND CONVERT (VARCHAR (10),datas.TaskCreateTime,120) <![CDATA[<=]]> #{endtime}
            </if>
            <if test="monitorpointname != null and monitorpointname !=''">
                AND outputname like concat('%',#{monitorpointname},'%')
            </if>
            <if test="monitorpointtypes != null and monitorpointtypes.size>0">
                AND FK_MonitorPointTypeCode in
                <foreach collection="monitorpointtypes" item="item" separator="," close=")" open="(">
                    #{item}
                </foreach>
            </if>
        </where>
        order by TaskEndTime desc,TaskCreateTime desc,outputname
    </select>

    <!--
           author:xsm
           description: 获取未分派任务的污染物信息
           param:
           date: 2021/12/30 09:37
       -->
    <select id="getUnassignedTaskPollutantDataByParamMap" parameterType="map" resultMap="TaskPollutantMap">
        SELECT
        t1.PK_TaskID,
        convert(varchar(19),alarmstarttime,120) alarmstarttime,
        convert(varchar(19),t1.TaskCreateTime,120) TaskCreateTime,
        convert(varchar(19),t1.TaskEndTime,120) TaskEndTime,
        t8.AlarmType,
        PUB_CODE_AlarmType.name alarmtypename,
        t9.name pollutantname,
        level.name OverLevelname
        FROM
        T_BAS_TaskDisposeManagement t1
        left join T_BAS_TaskAlarmPollutantInfo t8 on t1.PK_TaskID=t8.FK_TaskID and t1.FK_TaskType=t8.FK_TaskType
        left join PUB_CODE_AlarmType on t8.AlarmType=PUB_CODE_AlarmType.code
        left join PUB_CODE_AlarmLevel level on level.Code=t1.OverLevelCode
        left join PUB_CODE_PollutantFactor t9 on t8.FK_PolluantCode=t9.code and
        t1.FK_MonitorPointTypeCode=t9.PollutantType
        <where>
            <if test="taskids!=null and taskids.size>0">
                AND t1.PK_TaskID IN
                <foreach collection="taskids" item="item" separator="," close=")" open="(">
                    #{item}
                </foreach>
            </if>
        </where>
        order by t1.TaskEndTime desc,t1.TaskCreateTime desc
    </select>

    <!--
        author:chengzq
        description: 获取自己投诉任务包含未分派和抄送任务信息
        param: 注：userid必传
        date: 2021/03/12 11:37
    -->
    <select id="getOwnPetitionByParamMap" parameterType="map" resultMap="TaskManagementResultMap">
        select * from(
        SELECT
        t1.pk_id PK_TaskID,
        t1.PetitionTitle TaskName,
        CONVERT ( VARCHAR ( 16 ), t1.PolluteStartTime, 120 ) PolluteStartTime,
        CONVERT ( VARCHAR ( 16 ), t1.PolluteEndTime, 120 ) PolluteEndTime,
        t1.Duration,
        CASE
        t1.Status
        WHEN 1 THEN
        '待分派'
        WHEN 2 THEN
        '待处理'
        WHEN 3 THEN
        '处理中'
        WHEN 4 THEN
        '已完成' else ''
        END TaskStatusName,
        t6.TaskComment,
        Status TaskStatus,
        t6.FK_TaskType,
        '' pollutantname,
        CONVERT ( VARCHAR ( 10 ), t1.SubmitTime, 120 ) TaskCreateTime,
        t6.CurrentTaskStatus,
        t6.CurrentTaskStatus+'_'+CONVERT ( VARCHAR ( 16 ), t6.TaskHandleTime, 120 ) statusandtime,
        CONVERT ( VARCHAR ( 16 ), t6.TaskHandleTime, 120 ) TaskHandleTime,
        t7.user_name
        FROM
        T_BAS_PetitionInfo t1
        JOIN (
        SELECT
        *
        FROM
        T_BAS_TaskFlowRecordInfo
        WHERE
        FK_TaskID IN ( SELECT FK_TaskID FROM T_BAS_TaskFlowRecordInfo
        <where>
            FK_TaskType =2
            <if test="userid!=null and userid!='' ">
                and FK_TaskHandleUserID = #{userid}
            </if>
            <if test="currenttaskstatuslist!=null and currenttaskstatuslist.size>0">
                and CurrentTaskStatus in
                <foreach collection="currenttaskstatuslist" item="item" separator="," close=")" open="(">
                    #{item}
                </foreach>
            </if>
            and fk_taskid not in (select distinct fk_taskid from T_BAS_TaskFlowRecordInfo record where CurrentTaskStatus
            ='转办' and CurrentTaskStatus in ('抄送', '抄送已读')
            and not exists (select fk_taskid,MAX ( TaskHandleTime ) TaskHandleTime from T_BAS_TaskFlowRecordInfo t where
            t.FK_TaskHandleUserID =#{userid} and t.CurrentTaskStatus ='转办' and record.fk_taskid=t.fk_taskid and
            record.TaskHandleTime=t.TaskHandleTime GROUP BY FK_TaskID )
            )
        </where>
        )) t6 ON t1.pk_id = t6.FK_TaskID
        LEFT JOIN Base_UserInfo t7 ON t6.FK_TaskHandleUserID= t7.User_ID
        <where>
            <if test="statuslist!=null and statuslist.size>0">
                and t1.Status in
                <foreach collection="statuslist" item="item" separator="," close=")" open="(">
                    #{item}
                </foreach>
            </if>
        </where>

        union
        SELECT
        t1.pk_id PK_TaskID,
        t1.PetitionTitle TaskName,
        CONVERT ( VARCHAR ( 16 ), t1.PolluteStartTime, 120 ) PolluteStartTime,
        CONVERT ( VARCHAR ( 16 ), t1.PolluteEndTime, 120 ) PolluteEndTime,
        t1.Duration,
        CASE
        t1.Status
        WHEN 1 THEN
        '待分派'
        WHEN 2 THEN
        '待处理'
        WHEN 3 THEN
        '处理中'
        WHEN 4 THEN
        '已完成' else ''
        END TaskStatusName,
        '' TaskComment,
        Status TaskStatus,
        '2' FK_TaskType,
        '' pollutantname,
        CONVERT ( VARCHAR ( 10 ), t1.SubmitTime, 120 ) TaskCreateTime,
        '' CurrentTaskStatus,
        '' statusandtime,
        '' TaskHandleTime,
        '' user_name
        FROM
        T_BAS_PetitionInfo t1
        <where>
            t1.Status =1

        </where>
        )datas

        <where>
            <if test="statuslist!=null and statuslist.size>0">
                and datas.TaskStatus in
                <foreach collection="statuslist" item="item" separator="," close=")" open="(">
                    #{item}
                </foreach>
            </if>
            <if test="starttime != null and starttime !=''">
                AND CONVERT (VARCHAR (10),datas.TaskCreateTime,120) >= #{starttime}
            </if>
            <if test="endtime != null and endtime !=''">
                AND CONVERT (VARCHAR (10),datas.TaskCreateTime,120) <![CDATA[<=]]> #{endtime}
            </if>

        </where>
        order by TaskCreateTime desc,TaskName,datas.TaskStatus
    </select>


    <select id="countAlarmTaskByParamMap" parameterType="map" resultType="map">
        select * from (
        <if test='ishaveassignbutton!=null and ishaveassignbutton=="1"'>
            SELECT COUNT
            ( case FK_TaskType when 3 then '' end ) num,
            TaskStatus,
            case FK_TaskType when 6 then 1 when 8 then 5 else FK_TaskType end FK_TaskType,
            '待分派' statusname
            FROM
            T_BAS_TaskDisposeManagement
            WHERE
            TaskStatus = 0
            GROUP BY
            TaskStatus,
            FK_TaskType
            UNION all
            SELECT COUNT
            ( case when FK_TaskType!=3 then '' end ) num,
            TaskStatus,
        <choose>
            <when test='categorys!=null and categorys.contains("2")'>
                case FK_TaskType when 6 then 1 when 8 then 5 else FK_TaskType end FK_TaskType,
            </when>
            <otherwise>
                FK_TaskType,
            </otherwise>
        </choose>

            '待分派' statusname
            FROM
            T_BAS_TaskDisposeManagement
            WHERE
            TaskStatus = 0
            GROUP BY
            TaskStatus,
            FK_TaskType
            UNION all
        </if>
        SELECT COUNT
        ( case when FK_TaskType != 3 then '' end ) num,
        TaskStatus,
    <choose>
        <when test='categorys!=null and categorys.contains("2")'>
            case FK_TaskType when 6 then 1 when 8 then 5 else FK_TaskType end FK_TaskType,
        </when>
        <otherwise>
            FK_TaskType,
        </otherwise>
    </choose>
        case TaskStatus when 1 then '待处理' when 2 then '处理中' when 4 then '已完成' end statusname
        FROM
        T_BAS_TaskDisposeManagement
        where
        PK_TaskID in (
        SELECT DISTINCT
        tt.FK_TaskID
        FROM
        T_BAS_TaskFlowRecordInfo tt JOIN
        (SELECT
        fk_taskid,
        MAX (TaskHandleTime) TaskHandleTime
        FROM
        T_BAS_TaskFlowRecordInfo t
        WHERE
        CurrentTaskStatus IN ('待处理','转办')
        and TaskComment is null
        GROUP BY
        t.FK_TaskID) ttt ON tt.FK_TaskID = ttt.fk_taskid AND
        tt.TaskHandleTime = ttt.TaskHandleTime and
        FK_TaskHandleUserID =#{userid}
        )
        and TaskStatus in (1)

        GROUP BY
        TaskStatus,
        FK_TaskType
        UNION all
        SELECT COUNT
        (case when FK_TaskType!=3 then '' end ) num,
        TaskStatus,
    <choose>
        <when test='categorys!=null and categorys.contains("2")'>
            case FK_TaskType when 6 then 1 when 8 then 5 else FK_TaskType end FK_TaskType,
        </when>
        <otherwise>
            FK_TaskType,
        </otherwise>
    </choose>
        case TaskStatus when 1 then '待处理' when 2 then '处理中' when 4 then '已完成' end statusname
        FROM
        T_BAS_TaskDisposeManagement
        where
        PK_TaskID in (
        SELECT DISTINCT
        tt.FK_TaskID
        FROM
        T_BAS_TaskFlowRecordInfo tt JOIN
        (SELECT
        fk_taskid,
        MAX (TaskHandleTime) TaskHandleTime
        FROM
        T_BAS_TaskFlowRecordInfo t
        WHERE
        CurrentTaskStatus IN ('处理中','转办')
        and TaskComment is null
        GROUP BY
        t.FK_TaskID) ttt ON tt.FK_TaskID = ttt.fk_taskid AND
        tt.TaskHandleTime = ttt.TaskHandleTime and
        FK_TaskHandleUserID =#{userid}
        )
        and TaskStatus in (2)

        GROUP BY
        TaskStatus,
        FK_TaskType
        UNION all
        SELECT COUNT
        ( case when FK_TaskType!=3 then '' end ) num,
        TaskStatus,
    <choose>
        <when test='categorys!=null and categorys.contains("2")'>
            case FK_TaskType when 6 then 1 when 8 then 5 else FK_TaskType end FK_TaskType,
        </when>
        <otherwise>
            FK_TaskType,
        </otherwise>
    </choose>
        case TaskStatus when 1 then '待处理' when 2 then '处理中' when 4 then '已完成' end statusname
        FROM
        T_BAS_TaskDisposeManagement
        where
        PK_TaskID in (
        SELECT
        FK_TaskID
        FROM
        T_BAS_TaskFlowRecordInfo
        where FK_TaskHandleUserID =#{userid} and CurrentTaskStatus ='已完成'
        )
        and TaskStatus in (4)

        GROUP BY
        TaskStatus,
        FK_TaskType

        UNION all
        SELECT COUNT
        ( case when FK_TaskType in(1,5,9) then '' end ) num,
        7 TaskStatus,
        FK_TaskType,
        case TaskStatus when 1 then '待处理' when 2 then '处理中' when 4 then '已完成' when 5 then '待审核' end statusname
        FROM
        T_BAS_TaskDisposeManagement
        where
        PK_TaskID in (
        SELECT
        FK_TaskID
        FROM
        T_BAS_TaskFlowRecordInfo
        where FK_TaskHandleUserID =#{userid} and CurrentTaskStatus in ('审核')
        )
        and TaskStatus in (5)

        GROUP BY
        TaskStatus,
        FK_TaskType

        UNION all
        SELECT
        COUNT ( case when FK_TaskType!=3 then '' end ) num,
        6 TaskStatus,
    <choose>
        <when test='categorys!=null and categorys.contains("2")'>
            case FK_TaskType when 6 then 1 when 8 then 5 else FK_TaskType end FK_TaskType,
        </when>
        <otherwise>
            FK_TaskType,
        </otherwise>
    </choose>
        '抄送' statusname
        FROM
        T_BAS_TaskDisposeManagement
        where
        PK_TaskID in (
        SELECT
        FK_TaskID
        FROM
        T_BAS_TaskFlowRecordInfo
        where FK_TaskHandleUserID =#{userid} and (CurrentTaskStatus ='抄送')

        )
        and TaskStatus in (1,2,4,5)
        GROUP BY
        FK_TaskType

        UNION all
        SELECT COUNT
        ( case FK_TaskType when 3 then '' end ) num,
        TaskStatus,
        case FK_TaskType when 6 then 1 when 8 then 5 else FK_TaskType end FK_TaskType,
        case TaskStatus when 1 then '待处理' when 2 then '处理中' when 4 then '已完成' end statusname
        FROM
        T_BAS_TaskDisposeManagement
        where
        PK_TaskID in (
        SELECT DISTINCT
        tt.FK_TaskID
        FROM
        T_BAS_TaskFlowRecordInfo tt JOIN
        (SELECT
        fk_taskid,
        MAX (TaskHandleTime) TaskHandleTime
        FROM
        T_BAS_TaskFlowRecordInfo t
        WHERE
        CurrentTaskStatus IN ('待处理','转办')
        and TaskComment is null
        GROUP BY
        t.FK_TaskID) ttt ON tt.FK_TaskID = ttt.fk_taskid AND
        tt.TaskHandleTime = ttt.TaskHandleTime and
        FK_TaskHandleUserID =#{userid}
        )
        and TaskStatus in (1)

        GROUP BY
        TaskStatus,
        FK_TaskType
        UNION all
        SELECT COUNT
        ( case FK_TaskType when 3 then '' end ) num,
        TaskStatus,
        case FK_TaskType when 6 then 1 when 8 then 5 else FK_TaskType end FK_TaskType,
        case TaskStatus when 1 then '待处理' when 2 then '处理中' when 4 then '已完成' end statusname
        FROM
        T_BAS_TaskDisposeManagement
        where
        PK_TaskID in (
        SELECT DISTINCT
        tt.FK_TaskID
        FROM
        T_BAS_TaskFlowRecordInfo tt JOIN
        (SELECT
        fk_taskid,
        MAX (TaskHandleTime) TaskHandleTime
        FROM
        T_BAS_TaskFlowRecordInfo t
        WHERE
        CurrentTaskStatus IN ('处理中','转办')
        and TaskComment is null
        GROUP BY
        t.FK_TaskID) ttt ON tt.FK_TaskID = ttt.fk_taskid AND
        tt.TaskHandleTime = ttt.TaskHandleTime and
        FK_TaskHandleUserID =#{userid}
        )
        and TaskStatus in (2)

        GROUP BY
        TaskStatus,
        FK_TaskType
        UNION all
        SELECT COUNT
        ( case FK_TaskType when 3 then '' end ) num,
        TaskStatus,
        case FK_TaskType when 6 then 1 when 8 then 5 else FK_TaskType end FK_TaskType,
        case TaskStatus when 1 then '待处理' when 2 then '处理中' when 4 then '已完成' end statusname
        FROM
        T_BAS_TaskDisposeManagement
        where
        PK_TaskID in (
        SELECT
        FK_TaskID
        FROM
        T_BAS_TaskFlowRecordInfo
        where FK_TaskHandleUserID =#{userid} and CurrentTaskStatus ='已完成'
        )
        and TaskStatus in (4)

        GROUP BY
        TaskStatus,
        FK_TaskType

        UNION all
        SELECT
        COUNT ( case FK_TaskType when 3 then '' end ) num,
        6 TaskStatus,
        case FK_TaskType when 6 then 1 when 8 then 5 else FK_TaskType end FK_TaskType,
        '抄送' statusname
        FROM
        T_BAS_TaskDisposeManagement
        where
        PK_TaskID in (
        SELECT
        FK_TaskID
        FROM
        T_BAS_TaskFlowRecordInfo
        where FK_TaskHandleUserID =#{userid} and (CurrentTaskStatus ='抄送')
        )
        and TaskStatus in (1,2,4,5)
        GROUP BY
        FK_TaskType
        <if test='ishaveassignbutton!=null and ishaveassignbutton=="1"'>
            UNION all
            SELECT COUNT
            ( * ) num,
            case Status when 1 then 0 end Status,
            2 FK_TaskType,
            '待分派' statusname
            FROM
            T_BAS_PetitionInfo
            WHERE
            Status = 1
            GROUP BY
            Status
        </if>
        UNION all

        SELECT COUNT
        ( * ) num,
        case Status when 2 then 1 when 3 then 2 when 4 then 4 end Status,
        2 FK_TaskType,
        case Status when 2 then '待处理' when 3 then '处理中' when 4 then '已完成' end statusname
        FROM
        T_BAS_PetitionInfo
        where
        PK_ID in (
        SELECT DISTINCT
        tt.FK_TaskID
        FROM
        T_BAS_TaskFlowRecordInfo tt JOIN
        (SELECT
        fk_taskid,
        MAX (TaskHandleTime) TaskHandleTime
        FROM
        T_BAS_TaskFlowRecordInfo t
        WHERE
        CurrentTaskStatus IN ('待处理','转办')
        and TaskComment is null
        GROUP BY
        t.FK_TaskID) ttt ON tt.FK_TaskID = ttt.fk_taskid AND
        tt.TaskHandleTime = ttt.TaskHandleTime and
        FK_TaskHandleUserID =#{userid}
        )
        and Status in (2)
        GROUP BY
        Status
        UNION all
        SELECT COUNT
        ( * ) num,
        case Status when 2 then 1 when 3 then 2 when 4 then 4 end Status,
        2 FK_TaskType,
        case Status when 2 then '待处理' when 3 then '处理中' when 4 then '已完成' end statusname
        FROM
        T_BAS_PetitionInfo
        where
        PK_ID in (
        SELECT DISTINCT
        tt.FK_TaskID
        FROM
        T_BAS_TaskFlowRecordInfo tt JOIN
        (SELECT
        fk_taskid,
        MAX (TaskHandleTime) TaskHandleTime
        FROM
        T_BAS_TaskFlowRecordInfo t
        WHERE
        CurrentTaskStatus IN ('处理中','转办')
        and TaskComment is null
        GROUP BY
        t.FK_TaskID) ttt ON tt.FK_TaskID = ttt.fk_taskid AND
        tt.TaskHandleTime = ttt.TaskHandleTime and
        FK_TaskHandleUserID =#{userid}
        )
        and Status in (3)
        GROUP BY
        Status
        UNION all
        SELECT COUNT
        ( * ) num,
        case Status when 2 then 1 when 3 then 2 when 4 then 4 end Status,
        2 FK_TaskType,
        case Status when 2 then '待处理' when 3 then '处理中' when 4 then '已完成' end statusname
        FROM
        T_BAS_PetitionInfo
        where
        PK_ID in (
        SELECT
        FK_TaskID
        FROM
        T_BAS_TaskFlowRecordInfo
        where FK_TaskHandleUserID =#{userid} and CurrentTaskStatus ='已完成'
        )
        and Status in (4)
        GROUP BY
        Status

        UNION all
        SELECT
        COUNT ( * ) num,
        6 Status,
        2 FK_TaskType,
        '抄送' statusname
        FROM
        T_BAS_PetitionInfo
        where
        PK_ID in (
        SELECT
        FK_TaskID
        FROM
        T_BAS_TaskFlowRecordInfo
        where FK_TaskHandleUserID =#{userid} and (CurrentTaskStatus ='抄送')
        )
        and Status in (2,3,4)
        )t
        where t.FK_TaskType in (1,2,3,5,9
        <if test='categorys!=null and categorys.contains("2")'>
            ,6,8,7
        </if>
        )
        order by t.FK_TaskType,t.TaskStatus
    </select>

    <update id="updateByUseridAndTaskid" parameterType="map">
        update T_BAS_TaskFlowRecordInfo set CurrentTaskStatus = '抄送已读' where CurrentTaskStatus=#{currenttaskstatus} and FK_TaskHandleUserID=#{userid} and fk_taskid=#{taskid}
    </update>


    <select id="getUseridsByTaskid" parameterType="string" resultType="string">
        select FK_TaskHandleUserID from T_BAS_TaskFlowRecordInfo where FK_TaskID=#{fktaskid}
    </select>

    <select id="getTaskDisposeDataListByParam" parameterType="map" resultType="map">
      select
        t.pk_taskid,
        t.fk_tasktype,
        t.taskstatus,
        t1.currenttaskstatus,
        t1.fk_taskhandleuserid,
        convert (varchar (19),t1.taskhandletime,120)taskhandletime
    from
        t_bas_taskdisposemanagement t
        left join t_bas_taskflowrecordinfo t1 on t1.fk_taskid = t.pk_taskid
        <if test='isHave==true'>
            and  t1.fk_taskhandleuserid = #{userid}
        </if>
     where
        t.fk_tasktype = #{tasktype}
        <if test='isHave==false'>
            and  t1.fk_taskhandleuserid = #{userid}
        </if>
    </select>

    <select id="getLastFlowDataListByParam" parameterType="map" resultType="map">
        select
        t.fk_taskid,
        t.fk_taskhandleuserid,
        t.currenttaskstatus
        from
        t_bas_taskflowrecordinfo t
        join ( select fk_taskid, max ( taskhandletime ) taskhandletime from t_bas_taskflowrecordinfo group by fk_taskid ) lastd on t.fk_taskid = lastd.fk_taskid
        and t.taskhandletime = lastd.taskhandletime
     where
        t.fk_tasktype = #{tasktype}

    </select>

    <select id="countUserTaskInfoByParamMap" parameterType="map" resultType="map">
        select
        FK_TaskHandleUserID,
        case when sum(case TaskStatus when 4 then count end) is null then 0 else sum(case TaskStatus when 4 then count
        end) end complatecount,
        case when sum(case when TaskStatus != 4 then count end) is null then 0 else sum(case when TaskStatus != 4 then
        count end) end uncomplatecount,
        round(Convert(FLOAT,round(case when sum(case TaskStatus when 4 then count end) is null then 0 else sum(case
        TaskStatus when 4 then count end) end,2))/Convert(FLOAT,round(sum(count),2)),2) prop,
        Base_UserInfo.User_Name username
        from (
        select
        FK_TaskHandleUserID,
        TaskStatus,
        count(FK_TaskID) count
        from (
        <!--报警任务 -->
        SELECT
        t1.TaskStatus,
        t2.FK_TaskID,
        t2.fk_taskhandleuserid
        FROM
        T_BAS_TaskDisposeManagement t1
        JOIN T_BAS_TaskFlowRecordInfo t2 on t1.PK_TaskID=t2.FK_TaskID
        <where>
            <if test="fktasktypes!=null and fktasktypes.size>0">
                and t1.FK_TaskType IN
                <foreach collection="fktasktypes" item="item" separator="," close=")" open="(">
                    #{item}
                </foreach>
            </if>
            <if test="starttime != null and starttime !=''">
                AND CONVERT (VARCHAR (10),t1.TaskCreateTime,120) >= #{starttime}
            </if>
            <if test="endtime != null and endtime !=''">
                AND CONVERT (VARCHAR (10),t1.TaskCreateTime,120) <![CDATA[<=]]> #{endtime}
            </if>
            and
            CurrentTaskStatus not in ('抄送','抄送已读','分派任务')
            and len(FK_Pollutionid)>0
            and t1.PK_TaskID not in (select FK_TaskID from T_BAS_TaskFlowRecordInfo where CurrentTaskStatus in
            ('转办','转办任务'))
        </where>
        <!--单独统计转办任务（由于可以多次转办，所以需要获取最新的转办人） -->
        union
        select
        t3.TaskStatus,
        t1.FK_TaskID,
        t1.fk_taskhandleuserid
        from
        T_BAS_TaskFlowRecordInfo t1
        join T_BAS_TaskDisposeManagement t3 on t3.PK_TaskID=t1.FK_TaskID
        where
        exists (
        select
        *
        from (
        SELECT
        FK_TaskID,
        MAX ( TaskHandleTime ) TaskHandleTime
        FROM
        T_BAS_TaskFlowRecordInfo
        JOIN T_BAS_TaskDisposeManagement on T_BAS_TaskFlowRecordInfo.FK_TaskID=T_BAS_TaskDisposeManagement.PK_TaskID
        where
        CurrentTaskStatus = '转办'
        and len(FK_Pollutionid)>0
        <if test="fktasktypes!=null and fktasktypes.size>0">
            and T_BAS_TaskFlowRecordInfo.FK_TaskType IN
            <foreach collection="fktasktypes" item="item" separator="," close=")" open="(">
                #{item}
            </foreach>
        </if>
        <if test="starttime != null and starttime !=''">
            AND CONVERT (VARCHAR (10),TaskCreateTime,120) >= #{starttime}
        </if>
        <if test="endtime != null and endtime !=''">
            AND CONVERT (VARCHAR (10),TaskCreateTime,120) <![CDATA[<=]]> #{endtime}
        </if>
        GROUP BY
        FK_TaskID
        ) t2 where t1.FK_TaskID=t2.FK_TaskID and t1.TaskHandleTime=t2.TaskHandleTime
        )
        <!--投诉任务 -->
        <if test="fktasktypes.contains(2)">
            union
            SELECT
            t1.Status TaskStatus,
            t2.FK_TaskID,
            t2.fk_taskhandleuserid
            FROM
            T_BAS_PetitionInfo t1
            JOIN T_BAS_TaskFlowRecordInfo t2 on t1.PK_ID=t2.FK_TaskID
            WHERE
            CurrentTaskStatus not in ('抄送','抄送已读','分派任务')
            and t1.PK_ID not in (select FK_TaskID from T_BAS_TaskFlowRecordInfo where CurrentTaskStatus in
            ('转办','转办任务'))
            <if test="starttime != null and starttime !=''">
                AND CONVERT (VARCHAR (10),t1.submittime,120) >= #{starttime}
            </if>
            <if test="endtime != null and endtime !=''">
                AND CONVERT (VARCHAR (10),t1.submittime,120) <![CDATA[<=]]> #{endtime}
            </if>
            <!--单独统计转办任务（由于可以多次转办，所以需要获取最新的转办人） -->
            union
            select
            t3.Status TaskStatus,
            t1.FK_TaskID,
            t1.fk_taskhandleuserid
            from
            T_BAS_TaskFlowRecordInfo t1
            join T_BAS_PetitionInfo t3 on t3.PK_ID=t1.FK_TaskID
            where
            exists (
            select
            *
            from (
            SELECT
            FK_TaskID,
            MAX ( TaskHandleTime ) TaskHandleTime
            FROM
            T_BAS_TaskFlowRecordInfo
            JOIN T_BAS_PetitionInfo on T_BAS_TaskFlowRecordInfo.FK_TaskID=T_BAS_PetitionInfo.pk_id
            where
            CurrentTaskStatus = '转办'
            <if test="starttime != null and starttime !=''">
                AND CONVERT (VARCHAR (10),submittime,120) >= #{starttime}
            </if>
            <if test="endtime != null and endtime !=''">
                AND CONVERT (VARCHAR (10),submittime,120) <![CDATA[<=]]> #{endtime}
            </if>
            GROUP BY
            FK_TaskID
            ) t2 where t1.FK_TaskID=t2.FK_TaskID and t1.TaskHandleTime=t2.TaskHandleTime
            )
        </if>
        )t
        GROUP BY
        FK_TaskHandleUserID,
        TaskStatus
        )t
        left join Base_UserInfo on t.FK_TaskHandleUserID= Base_UserInfo.User_ID
        GROUP BY
        FK_TaskHandleUserID,
        User_Name
    </select>


    <select id="countSecurityAlarmTaskByParamMap" parameterType="map" resultType="map">
        select * from (
        <if test='ishaveassignbutton!=null and ishaveassignbutton=="1"'>
            SELECT COUNT
            ( case FK_TaskType when 3 then '' end ) num,
            TaskStatus,
            FK_TaskType,
            '待分派' statusname
            FROM
            T_BAS_TaskDisposeManagement
            WHERE
            TaskStatus = 0
            GROUP BY
            TaskStatus,
            FK_TaskType
            UNION all
            SELECT COUNT
            ( case when FK_TaskType!=3 then '' end ) num,
            TaskStatus,
            FK_TaskType,
            '待分派' statusname
            FROM
            T_BAS_TaskDisposeManagement
            WHERE
            TaskStatus = 0

            GROUP BY
            TaskStatus,
            FK_TaskType
            UNION all
        </if>
        SELECT COUNT
        ( case when FK_TaskType != 3 then '' end ) num,
        TaskStatus,
        FK_TaskType,
        case TaskStatus when 1 then '待处理' when 2 then '处理中' when 4 then '已完成' end statusname
        FROM
        T_BAS_TaskDisposeManagement
        where
        PK_TaskID in (
        SELECT
        FK_TaskID
        FROM
        T_BAS_TaskFlowRecordInfo
        where FK_TaskHandleUserID =#{userid} and CurrentTaskStatus in ('待处理','转办') and TaskComment is null
        and fk_taskid not in (select distinct fk_taskid from T_BAS_TaskFlowRecordInfo record where CurrentTaskStatus
        ='转办'
        and not exists (select fk_taskid,MAX ( TaskHandleTime ) TaskHandleTime from T_BAS_TaskFlowRecordInfo t where
        t.FK_TaskHandleUserID =#{userid} and t.CurrentTaskStatus ='转办' and record.fk_taskid=t.fk_taskid and
        record.TaskHandleTime=t.TaskHandleTime GROUP BY FK_TaskID )
        )
        )
        and TaskStatus in (1)

        GROUP BY
        TaskStatus,
        FK_TaskType
        UNION all
        SELECT COUNT
        (case when FK_TaskType!=3 then '' end ) num,
        TaskStatus,
        FK_TaskType,
        case TaskStatus when 1 then '待处理' when 2 then '处理中' when 4 then '已完成' end statusname
        FROM
        T_BAS_TaskDisposeManagement
        where
        PK_TaskID in (
        SELECT
        FK_TaskID
        FROM
        T_BAS_TaskFlowRecordInfo
        where FK_TaskHandleUserID =#{userid} and CurrentTaskStatus in ('处理中','转办') and TaskComment is null
        and fk_taskid not in (select distinct fk_taskid from T_BAS_TaskFlowRecordInfo record where CurrentTaskStatus
        ='转办'
        and not exists (select fk_taskid,MAX ( TaskHandleTime ) TaskHandleTime from T_BAS_TaskFlowRecordInfo t where
        t.FK_TaskHandleUserID =#{userid} and t.CurrentTaskStatus ='转办' and record.fk_taskid=t.fk_taskid and
        record.TaskHandleTime=t.TaskHandleTime GROUP BY FK_TaskID )
        )
        )
        and TaskStatus in (2)

        GROUP BY
        TaskStatus,
        FK_TaskType
        UNION all
        SELECT COUNT
        ( case when FK_TaskType!=3 then '' end ) num,
        TaskStatus,
        FK_TaskType,
        case TaskStatus when 1 then '待处理' when 2 then '处理中' when 4 then '已完成' end statusname
        FROM
        T_BAS_TaskDisposeManagement
        where
        PK_TaskID in (
        SELECT
        FK_TaskID
        FROM
        T_BAS_TaskFlowRecordInfo
        where FK_TaskHandleUserID =#{userid} and CurrentTaskStatus ='已完成'
        )
        and TaskStatus in (4)

        GROUP BY
        TaskStatus,
        FK_TaskType

        UNION all
        SELECT
        COUNT ( case when FK_TaskType!=3 then '' end ) num,
        6 TaskStatus,
        FK_TaskType,
        '抄送' statusname
        FROM
        T_BAS_TaskDisposeManagement
        where
        PK_TaskID in (
        SELECT
        FK_TaskID
        FROM
        T_BAS_TaskFlowRecordInfo
        where FK_TaskHandleUserID =#{userid} and (CurrentTaskStatus ='抄送')

        )
        and TaskStatus in (1,2,4)
        GROUP BY
        FK_TaskType

        UNION all
        SELECT COUNT
        ( case FK_TaskType when 3 then '' end ) num,
        TaskStatus,
        FK_TaskType,
        case TaskStatus when 1 then '待处理' when 2 then '处理中' when 4 then '已完成' end statusname
        FROM
        T_BAS_TaskDisposeManagement
        where
        PK_TaskID in (
        SELECT
        FK_TaskID
        FROM
        T_BAS_TaskFlowRecordInfo
        where FK_TaskHandleUserID =#{userid} and CurrentTaskStatus in ('待处理','转办') and TaskComment is null
        and fk_taskid not in (select distinct fk_taskid from T_BAS_TaskFlowRecordInfo record where CurrentTaskStatus
        ='转办'
        and not exists (select fk_taskid,MAX ( TaskHandleTime ) TaskHandleTime from T_BAS_TaskFlowRecordInfo t where
        t.FK_TaskHandleUserID =#{userid} and t.CurrentTaskStatus ='转办' and record.fk_taskid=t.fk_taskid and
        record.TaskHandleTime=t.TaskHandleTime GROUP BY FK_TaskID )
        )
        )
        and TaskStatus in (1)

        GROUP BY
        TaskStatus,
        FK_TaskType
        UNION all
        SELECT COUNT
        ( case FK_TaskType when 3 then '' end ) num,
        TaskStatus,
        FK_TaskType,
        case TaskStatus when 1 then '待处理' when 2 then '处理中' when 4 then '已完成' end statusname
        FROM
        T_BAS_TaskDisposeManagement
        where
        PK_TaskID in (
        SELECT
        FK_TaskID
        FROM
        T_BAS_TaskFlowRecordInfo
        where FK_TaskHandleUserID =#{userid} and CurrentTaskStatus in ('处理中','转办') and TaskComment is null
        and fk_taskid not in (select distinct fk_taskid from T_BAS_TaskFlowRecordInfo record where CurrentTaskStatus
        ='转办'
        and not exists (select fk_taskid,MAX ( TaskHandleTime ) TaskHandleTime from T_BAS_TaskFlowRecordInfo t where
        t.FK_TaskHandleUserID =#{userid} and t.CurrentTaskStatus ='转办' and record.fk_taskid=t.fk_taskid and
        record.TaskHandleTime=t.TaskHandleTime GROUP BY FK_TaskID )
        )
        )
        and TaskStatus in (2)

        GROUP BY
        TaskStatus,
        FK_TaskType
        UNION all
        SELECT COUNT
        ( case FK_TaskType when 3 then '' end ) num,
        TaskStatus,
        FK_TaskType,
        case TaskStatus when 1 then '待处理' when 2 then '处理中' when 4 then '已完成' end statusname
        FROM
        T_BAS_TaskDisposeManagement
        where
        PK_TaskID in (
        SELECT
        FK_TaskID
        FROM
        T_BAS_TaskFlowRecordInfo
        where FK_TaskHandleUserID =#{userid} and CurrentTaskStatus ='已完成'
        )
        and TaskStatus in (4)

        GROUP BY
        TaskStatus,
        FK_TaskType

        UNION all
        SELECT
        COUNT ( case FK_TaskType when 3 then '' end ) num,
        6 TaskStatus,
        FK_TaskType,
        '抄送' statusname
        FROM
        T_BAS_TaskDisposeManagement
        where
        PK_TaskID in (
        SELECT
        FK_TaskID
        FROM
        T_BAS_TaskFlowRecordInfo
        where FK_TaskHandleUserID =#{userid} and (CurrentTaskStatus ='抄送')
        )
        and TaskStatus in (1,2,4)
        GROUP BY
        FK_TaskType
        <if test='ishaveassignbutton!=null and ishaveassignbutton=="1"'>
            UNION all
            SELECT COUNT
            ( * ) num,
            case Status when 1 then 0 end Status,
            2 FK_TaskType,
            '待分派' statusname
            FROM
            T_BAS_PetitionInfo
            WHERE
            Status = 1
            GROUP BY
            Status
        </if>
        UNION all

        SELECT COUNT
        ( * ) num,
        case Status when 2 then 1 when 3 then 2 when 4 then 4 end Status,
        2 FK_TaskType,
        case Status when 2 then '待处理' when 3 then '处理中' when 4 then '已完成' end statusname
        FROM
        T_BAS_PetitionInfo
        where
        PK_ID in (
        SELECT
        FK_TaskID
        FROM
        T_BAS_TaskFlowRecordInfo
        where FK_TaskHandleUserID =#{userid} and CurrentTaskStatus in ('待处理','转办') and TaskComment is null
        and fk_taskid not in (select distinct fk_taskid from T_BAS_TaskFlowRecordInfo record where FK_TaskType=2 and
        CurrentTaskStatus ='转办'
        and not exists (select fk_taskid,MAX ( TaskHandleTime ) TaskHandleTime from T_BAS_TaskFlowRecordInfo t where
        t.FK_TaskHandleUserID =#{userid} and FK_TaskType=2 and t.CurrentTaskStatus ='转办' and
        record.fk_taskid=t.fk_taskid and record.TaskHandleTime=t.TaskHandleTime GROUP BY FK_TaskID )
        )
        )
        and Status in (2)
        GROUP BY
        Status
        UNION all
        SELECT COUNT
        ( * ) num,
        case Status when 2 then 1 when 3 then 2 when 4 then 4 end Status,
        2 FK_TaskType,
        case Status when 2 then '待处理' when 3 then '处理中' when 4 then '已完成' end statusname
        FROM
        T_BAS_PetitionInfo
        where
        PK_ID in (
        SELECT
        FK_TaskID
        FROM
        T_BAS_TaskFlowRecordInfo
        where FK_TaskHandleUserID =#{userid} and CurrentTaskStatus in ('处理中','转办') and TaskComment is null  and FK_TaskType=2
        and fk_taskid not in (select distinct fk_taskid from T_BAS_TaskFlowRecordInfo record where FK_TaskType=2 and
        CurrentTaskStatus ='转办'
        and not exists (select fk_taskid,MAX ( TaskHandleTime ) TaskHandleTime from T_BAS_TaskFlowRecordInfo t where
        t.FK_TaskHandleUserID =#{userid} and FK_TaskType=2 and t.CurrentTaskStatus ='转办' and
        record.fk_taskid=t.fk_taskid and record.TaskHandleTime=t.TaskHandleTime GROUP BY FK_TaskID )

        )
        )
        and Status in (3)
        GROUP BY
        Status
        UNION all
        SELECT COUNT
        ( * ) num,
        case Status when 2 then 1 when 3 then 2 when 4 then 4 end Status,
        2 FK_TaskType,
        case Status when 2 then '待处理' when 3 then '处理中' when 4 then '已完成' end statusname
        FROM
        T_BAS_PetitionInfo
        where
        PK_ID in (
        SELECT
        FK_TaskID
        FROM
        T_BAS_TaskFlowRecordInfo
        where FK_TaskHandleUserID =#{userid} and CurrentTaskStatus ='已完成'
        )
        and Status in (4)
        GROUP BY
        Status

        UNION all
        SELECT
        COUNT ( * ) num,
        6 Status,
        2 FK_TaskType,
        '抄送' statusname
        FROM
        T_BAS_PetitionInfo
        where
        PK_ID in (
        SELECT
        FK_TaskID
        FROM
        T_BAS_TaskFlowRecordInfo
        where FK_TaskHandleUserID =#{userid} and (CurrentTaskStatus ='抄送')
        )
        and Status in (2,3,4)
        )t
        where t.FK_TaskType in (6,8,7)
        order by t.FK_TaskType,t.TaskStatus
    </select>



    <!-- author:xsm description: 根据自定义查询条件统计安全报警任务条数（安全报警、安全运维） date: 2019/07/16 13:20-->
    <select id="countAllSecurityAlarmTaskInfoNumByParams" resultType="Long">
        SELECT
        COUNT (1) num
        FROM (select
        ttwo.* from
        T_BAS_TaskDisposeManagement ttwo
        where ttwo.TaskStatus != 0
        <if test="tasktype !=null">
            AND ttwo.FK_TaskType = #{tasktype}
        </if>
        <if test="hasauthor!=null and hasauthor=='0'.toString() ">
            <choose>
                <when test="statuslist!=null">
                    and ttwo.PK_TaskID IN (SELECT distinct FK_TaskID FROM T_BAS_TaskFlowRecordInfo
                    WHERE T_BAS_TaskFlowRecordInfo.FK_TaskHandleUserID = #{feedbackuserid}
                </when>
                <otherwise>
                    and ttwo.PK_TaskID IN (SELECT distinct FK_TaskID FROM T_BAS_TaskFlowRecordInfo
                    WHERE T_BAS_TaskFlowRecordInfo.FK_TaskHandleUserID = #{feedbackuserid}
                    and T_BAS_TaskFlowRecordInfo.CurrentTaskStatus not in ('反馈信息','忽略任务')
                </otherwise>
            </choose>
            <if test="tasktype !=null">
                AND T_BAS_TaskFlowRecordInfo.FK_TaskType = #{tasktype}
            </if>
            )
        </if>
        <if test="hasauthor!=null and hasauthor=='1'.toString() ">
            <choose>
                <when test="statuslist!=null">
                    union
                    select
                    tone.* from
                    T_BAS_TaskDisposeManagement tone
                    where tone.TaskStatus = 0
                </when>
                <otherwise>
                    union
                    select
                    tone.* from
                    T_BAS_TaskDisposeManagement tone
                    where tone.TaskStatus in (0,3,4)
                </otherwise>
            </choose>
            <if test="tasktype !=null">
                AND tone.FK_TaskType = #{tasktype}
            </if>
        </if>
        ) t1
        <if test="datauserid != null and datauserid !=''">
            JOIN (
            SELECT
            FK_MonitorPointID
            FROM
            T_BAS_UserMonitorPointRelationData
            WHERE
            T_BAS_UserMonitorPointRelationData.FK_UserID = #{datauserid}
            GROUP BY
            FK_MonitorPointID
            ) relation ON t1.FK_Pollutionid = relation.FK_MonitorPointID
        </if>
        JOIN (
            SELECT
            T_BAS_Pollution.PollutionName,
            T_AQ_HazardSourceProductDevice.PK_ID MonitorPointID,
            T_AQ_HazardSourceProductDevice.DeviceName AS pointname,
            T_AQ_HazardSourceProductDevice.DGIMN,
            T_BAS_Pollution.ShorterName+ '_' + T_AQ_HazardSourceProductDevice.DeviceName monitorpointname,
            T_AQ_MajorHazardSources.fk_pollutionid,
            57 FK_MonitorPointType
            FROM
            T_AQ_MajorHazardSources
            JOIN T_AQ_HazardSourceProductDevice ON T_AQ_MajorHazardSources.PK_ID =
            T_AQ_HazardSourceProductDevice.FK_MajorHazardSourcesId
            JOIN T_BAS_Pollution ON T_BAS_Pollution.PK_Pollutionid = T_AQ_MajorHazardSources.fk_pollutionid UNION
            SELECT
            T_BAS_Pollution.PollutionName,
            T_AQ_StorageTankInfo.PK_ID MonitorPointID,
            T_AQ_StorageTankInfo.StorageTankCode AS pointname,
            T_AQ_StorageTankInfo.DGIMN,
            T_BAS_Pollution.ShorterName+ '_' +T_AQ_StorageTankInfo.StorageTankCode AS monitorpointname,
            T_AQ_StorageTankAreaInfo.fk_pollutionid,
            30 FK_MonitorPointType
            FROM
            T_AQ_StorageTankAreaInfo
            JOIN T_AQ_StorageTankInfo ON T_AQ_StorageTankAreaInfo.PK_ID = T_AQ_StorageTankInfo.FK_StorageTankAreaID
            JOIN T_BAS_Pollution ON T_BAS_Pollution.PK_Pollutionid = T_AQ_StorageTankAreaInfo.fk_pollutionid UNION
            SELECT
            T_BAS_Pollution.PollutionName,
            T_AQ_RiskAreaMonitorPoint.PK_MonitorPointID MonitorPointID,
            T_AQ_RiskAreaMonitorPoint.MonitorPointName AS pointname,
            T_AQ_RiskAreaMonitorPoint.DGIMN,
            T_BAS_Pollution.ShorterName+ '_' +T_AQ_RiskAreaMonitorPoint.MonitorPointName AS monitorpointname,
            T_AQ_RiskAreaMonitorPoint.fk_pollutionid,
            T_AQ_RiskAreaMonitorPoint.FK_MonitorPointTypeCode FK_MonitorPointType
            FROM
            T_AQ_RiskAreaMonitorPoint
            JOIN T_BAS_Pollution ON T_BAS_Pollution.PK_Pollutionid = T_AQ_RiskAreaMonitorPoint.fk_pollutionid UNION
            SELECT
            T_BAS_Pollution.PollutionName,
            T_BAS_VideoCamera.PK_VedioCameraID MonitorPointID,
            T_BAS_VideoCamera.VedioCameraName AS pointname,
            '' DGIMN,
            T_BAS_Pollution.ShorterName+ '_' +T_BAS_VideoCamera.VedioCameraName AS monitorpointname,
            T_BAS_VideoCamera.fk_pollutionid,
            39 FK_MonitorPointType
            FROM
            T_BAS_VideoCamera
            JOIN T_BAS_Pollution ON T_BAS_Pollution.PK_Pollutionid = T_BAS_VideoCamera.fk_pollutionid
        ) pointtable ON t1.FK_Pollutionid = pointtable.monitorpointid AND t1.FK_MonitorPointTypeCode =
        pointtable.monitorpointtype
        LEFT JOIN PUB_CODE_MonitorPointType mt ON t1.FK_MonitorPointTypeCode = mt.Code
        LEFT JOIN (SELECT * FROM T_BAS_TaskFlowRecordInfo where T_BAS_TaskFlowRecordInfo.CurrentTaskStatus = '分派任务') t7
        on t7.FK_TaskID = t1.PK_TaskID AND T7.FK_TaskType = t1.FK_TaskType
        <trim prefix="where" prefixOverrides="AND|OR">
            <if test="monitorpointid != null and monitorpointid !=''">
                AND pointtable.monitorpointid= #{monitorpointid}
            </if>
            <if test="dgimn != null and dgimn !=''">
                AND pointtable.DGIMN= #{dgimn}
            </if>
            <if test="tasktype !=null">
                AND t1.FK_TaskType = #{tasktype}
            </if>
            <if test="searchname!=null and searchname!='' ">
                and pointtable.PollutionName like concat('%',#{searchname},'%')
            </if>
            <if test="pollutionname!=null and pollutionname!='' ">
                and pointtable.PollutionName like concat('%',#{pollutionname},'%')
            </if>
            <if test="monitorpointname!=null and monitorpointname!='' ">
                and pointtable.monitorpointname like concat('%',#{monitorpointname},'%')
            </if>
            <if test="starttime != null and starttime !=''">
                AND CONVERT (VARCHAR (10),t1.TaskCreateTime,120) >= #{starttime}
            </if>
            <if test="endtime != null and endtime !=''">
                AND CONVERT (VARCHAR (10),t1.TaskCreateTime,120) <![CDATA[<=]]> #{endtime}
            </if>
            <if test="taskstarttime != null and taskstarttime !=''">
                AND CONVERT (VARCHAR (19),t1.TaskCreateTime,120) >= #{taskstarttime}
            </if>
            <if test="taskendtime != null and taskendtime !=''">
                AND CONVERT (VARCHAR (19),t1.TaskCreateTime,120) <![CDATA[<=]]> #{taskendtime}
            </if>
            <if test="tasktypes != null and tasktypes.size>0 ">
                and t1.FK_TaskType in
                <foreach item="item" index="index" collection="tasktypes"
                         open="(" separator="," close=")">
                    #{item}
                </foreach>
            </if>
            <if test="statuslist != null and statuslist.size>0 ">
                and t1.TaskStatus in
                <foreach item="item" index="index" collection="statuslist"
                         open="(" separator="," close=")">
                    #{item}
                </foreach>
            </if>
        </trim>
    </select>


    <!-- author:xsm description: 根据自定义查询条件获取报警任务信息(有分派按钮权限用户） date: 2019/07/16 13:20-->
    <select id="getAllSecurityAlarmTaskInfoByParams" parameterType="map" resultType="map">
        SELECT
        <if test="pagesize!=null and pagesize!='' ">
            TOP ${pagesize}
        </if>
        *
        FROM
        (
        SELECT distinct ROW_NUMBER() OVER (ORDER BY t1.TaskStatus,CONVERT (
        VARCHAR (19),
        t1.TaskCreateTime,
        120
        ) DESC) AS RowNumber,
        t1.PK_TaskID,
        t1.TaskStatus,
        t1.FK_Pollutionid,
        t1.FK_MonitorPointTypeCode,
        mt.Name monitorpointtypename,
        pointtable.monitorpointname,
        pointtable.Longitude,
        pointtable.Latitude,
        t_bas_devicestatus.AlarmLevel onlineAlarmLevel,
        t_bas_devicestatus.status onlinestatus,
        pointtable.MonitorPointCategory,
        case WHEN t1.OverLevelCode = '-1' THEN '超标' ELSE pcal.Name END overlevelname,
        case t1.TaskStatus when 0 then '待分派' when 1 then '待处理' when 2 then '处理中' when 3 then '已忽略' when 4 then '已完成' end
        TaskStatusName,
        pointtable.DGIMN,
        pointtable.pointname,
        pointtable.monitorpointid,
        pointtable.FK_Pollutionid pollutionid,
        pointtable.PollutionName,
        t1.FK_TaskType,
        CONVERT (VARCHAR(19),t7.TaskHandleTime,120) assignmenttime,
        CONVERT (VARCHAR(19),t8.TaskHandleTime,120) completetime,
        CONVERT (VARCHAR(19),t1.TaskCreateTime,120) TaskCreateTime,
        CONVERT (VARCHAR(19),t1.AlarmStartTime,120) AlarmStartTime,
        CONVERT (VARCHAR(19),t1.TaskEndTime,120) TaskEndTime,
        mt.Category,
        datediff( minute, t1.AlarmStartTime, t1.TaskEndTime) overtimenum,
        CASE t1.TaskStatus WHEN 0 then datediff( minute, t1.TaskCreateTime, GETDATE() ) else 0 end unallocatednum,
        CASE WHEN t1.TaskStatus in(1,2) then datediff( minute, t7.TaskHandleTime, GETDATE() ) else 0 end uncompletenum,
        STUFF( ( SELECT ',' + pf.Name FROM
        T_BAS_TaskAlarmPollutantInfo T2,PUB_CODE_PollutantFactor pf
        WHERE T2.FK_TaskID = t1.PK_TaskID
        AND T2.FK_PolluantCode = pf.Code
        AND pf.PollutantType = t1.FK_MonitorPointTypeCode
        FOR XML PATH ('')
        ),1,1,'') pollutantname
        FROM (select
        ttwo.* from
        T_BAS_TaskDisposeManagement ttwo
        where ttwo.TaskStatus != 0
        <if test="tasktype !=null">
            AND ttwo.FK_TaskType = #{tasktype}
        </if>
        <if test="hasauthor!=null and hasauthor=='0'.toString() ">
            <choose>
                <when test="statuslist!=null">
                    and ttwo.PK_TaskID IN (SELECT distinct FK_TaskID FROM T_BAS_TaskFlowRecordInfo
                    WHERE T_BAS_TaskFlowRecordInfo.FK_TaskHandleUserID = #{feedbackuserid}
                </when>
                <otherwise>
                    and ttwo.PK_TaskID IN (SELECT distinct FK_TaskID FROM T_BAS_TaskFlowRecordInfo
                    WHERE T_BAS_TaskFlowRecordInfo.FK_TaskHandleUserID = #{feedbackuserid}
                    and T_BAS_TaskFlowRecordInfo.CurrentTaskStatus not in ('反馈信息','忽略任务')
                </otherwise>
            </choose>
            <if test="tasktype !=null">
                AND T_BAS_TaskFlowRecordInfo.FK_TaskType = #{tasktype}
            </if>
            )
        </if>
        <if test="hasauthor!=null and hasauthor=='1'.toString() ">
            <choose>
                <when test="statuslist!=null">
                    union
                    select
                    tone.* from
                    T_BAS_TaskDisposeManagement tone
                    where tone.TaskStatus = 0
                </when>
                <otherwise>
                    union
                    select
                    tone.* from
                    T_BAS_TaskDisposeManagement tone
                    where tone.TaskStatus in (0,3,4)
                </otherwise>
            </choose>
            <if test="tasktype !=null">
                AND tone.FK_TaskType = #{tasktype}
            </if>
        </if>
        ) t1
        <if test="datauserid != null and datauserid !=''">
            JOIN (
            SELECT
            FK_MonitorPointID
            FROM
            T_BAS_UserMonitorPointRelationData
            WHERE
            T_BAS_UserMonitorPointRelationData.FK_UserID = #{datauserid}
            GROUP BY
            FK_MonitorPointID
            ) relation ON t1.FK_Pollutionid = relation.FK_MonitorPointID
        </if>
        JOIN (
            SELECT
            T_BAS_Pollution.PollutionName,
            T_AQ_HazardSourceProductDevice.PK_ID MonitorPointID,
            T_AQ_HazardSourceProductDevice.DeviceName AS pointname,
            T_AQ_HazardSourceProductDevice.DGIMN,
            T_BAS_Pollution.ShorterName+ '_' +MajorHazardSourcesName+ '_' + T_AQ_HazardSourceProductDevice.DeviceName monitorpointname,
            T_AQ_MajorHazardSources.fk_pollutionid,
            57 FK_MonitorPointType,
            T_AQ_HazardSourceProductDevice.Longitude,
            T_AQ_HazardSourceProductDevice.Latitude,
            null MonitorPointCategory
            FROM
            T_AQ_MajorHazardSources
            JOIN T_AQ_HazardSourceProductDevice ON T_AQ_MajorHazardSources.PK_ID =
            T_AQ_HazardSourceProductDevice.FK_MajorHazardSourcesId
            JOIN T_BAS_Pollution ON T_BAS_Pollution.PK_Pollutionid = T_AQ_MajorHazardSources.fk_pollutionid UNION
            SELECT
            T_BAS_Pollution.PollutionName,
            T_AQ_StorageTankInfo.PK_ID MonitorPointID,
            T_AQ_StorageTankInfo.StorageTankCode AS pointname,
            T_AQ_StorageTankInfo.DGIMN,
            T_BAS_Pollution.ShorterName+ '_' + StorageTankAreaName + '_' +T_AQ_StorageTankInfo.StorageTankCode AS monitorpointname,
            T_AQ_StorageTankAreaInfo.fk_pollutionid,
            30 FK_MonitorPointType,
            T_AQ_StorageTankInfo.Longitude,
            T_AQ_StorageTankInfo.Latitude,
            null MonitorPointCategory
            FROM
            T_AQ_StorageTankAreaInfo
            JOIN T_AQ_StorageTankInfo ON T_AQ_StorageTankAreaInfo.PK_ID = T_AQ_StorageTankInfo.FK_StorageTankAreaID
            JOIN T_BAS_Pollution ON T_BAS_Pollution.PK_Pollutionid = T_AQ_StorageTankAreaInfo.fk_pollutionid UNION
            SELECT
            T_BAS_Pollution.PollutionName,
            T_AQ_RiskAreaMonitorPoint.PK_MonitorPointID MonitorPointID,
            T_AQ_RiskAreaMonitorPoint.MonitorPointName AS pointname,
            T_AQ_RiskAreaMonitorPoint.DGIMN,
            T_BAS_Pollution.ShorterName+ '_' +RiskAreaName+ '_' +T_AQ_RiskAreaMonitorPoint.MonitorPointName AS monitorpointname,
            T_AQ_RiskAreaMonitorPoint.fk_pollutionid,
            T_AQ_RiskAreaMonitorPoint.FK_MonitorPointTypeCode FK_MonitorPointType,
            T_AQ_RiskAreaMonitorPoint.Longitude,
            T_AQ_RiskAreaMonitorPoint.Latitude,
            null MonitorPointCategory
            FROM
            T_AQ_RiskAreaMonitorPoint
            join T_AQ_RiskArea on T_AQ_RiskAreaMonitorPoint.FK_RiskAreaID = T_AQ_RiskArea.PK_ID
            JOIN T_BAS_Pollution ON T_BAS_Pollution.PK_Pollutionid = T_AQ_RiskAreaMonitorPoint.fk_pollutionid UNION
            SELECT
            T_BAS_Pollution.PollutionName,
            T_BAS_VideoCamera.FK_MonitorPointOrOutPutID MonitorPointID,
            T_BAS_VideoCamera.VedioCameraName AS pointname,
            '' DGIMN,
            T_BAS_Pollution.ShorterName+ '_' +T_BAS_VideoCamera.VedioCameraName AS monitorpointname,
            T_BAS_VideoCamera.fk_pollutionid,
            39 FK_MonitorPointType,
            null Longitude,
            null Latitude,
            null MonitorPointCategory
            FROM
            T_BAS_VideoCamera
            JOIN T_BAS_Pollution ON T_BAS_Pollution.PK_Pollutionid = T_BAS_VideoCamera.fk_pollutionid
        ) pointtable ON t1.FK_Pollutionid = pointtable.monitorpointid AND t1.FK_MonitorPointTypeCode =
        pointtable.monitorpointtype
        LEFT JOIN PUB_CODE_MonitorPointType mt ON t1.FK_MonitorPointTypeCode = mt.Code
        LEFT JOIN (SELECT * FROM T_BAS_TaskFlowRecordInfo where T_BAS_TaskFlowRecordInfo.CurrentTaskStatus = '分派任务') t7
        on t7.FK_TaskID = t1.PK_TaskID AND t7.FK_TaskType = t1.FK_TaskType
        LEFT JOIN (SELECT * FROM T_BAS_TaskFlowRecordInfo where T_BAS_TaskFlowRecordInfo.CurrentTaskStatus in(
        '反馈信息','忽略任务')) t8 on t8.FK_TaskID = t1.PK_TaskID AND t8.FK_TaskType = t1.FK_TaskType
        left join PUB_CODE_AlarmLevel pcal on t1.OverLevelCode =pcal.Code
        left join t_bas_devicestatus  ON pointtable.DGIMN = t_bas_devicestatus.dgimn
        <trim prefix="where" prefixOverrides="AND|OR">
            <if test="monitorpointid != null and monitorpointid !=''">
                AND pointtable.monitorpointid= #{monitorpointid}
            </if>
            <if test="taskid != null and taskid !=''">
                AND t1.PK_TaskID= #{taskid}
            </if>
            <if test="dgimn != null and dgimn !=''">
                AND pointtable.DGIMN= #{dgimn}
            </if>
            <if test="tasktype !=null">
                AND t1.FK_TaskType = #{tasktype}
            </if>
            <if test="searchname!=null and searchname!='' ">
                and pointtable.PollutionName like concat('%',#{searchname},'%')
            </if>
            <if test="pollutionname!=null and pollutionname!='' ">
                and pointtable.PollutionName like concat('%',#{pollutionname},'%')
            </if>
            <if test="monitorpointname!=null and monitorpointname!='' ">
                and pointtable.monitorpointname like concat('%',#{monitorpointname},'%')
            </if>
            <if test="starttime != null and starttime !=''">
                AND CONVERT (VARCHAR (10),t1.TaskCreateTime,120) >= #{starttime}
            </if>
            <if test="endtime != null and endtime !=''">
                AND CONVERT (VARCHAR (10),t1.TaskCreateTime,120) <![CDATA[<=]]> #{endtime}
            </if>
            <if test="taskstarttime != null and taskstarttime !=''">
                AND CONVERT (VARCHAR (19),t1.TaskCreateTime,120) >= #{taskstarttime}
            </if>
            <if test="taskendtime != null and taskendtime !=''">
                AND CONVERT (VARCHAR (19),t1.TaskCreateTime,120) <![CDATA[<=]]> #{taskendtime}
            </if>
            <if test="tasktypes != null and tasktypes.size>0 ">
                and t1.FK_TaskType in
                <foreach item="item" index="index" collection="tasktypes"
                         open="(" separator="," close=")">
                    #{item}
                </foreach>
            </if>
            <if test="statuslist != null and statuslist.size>0 ">
                and t1.TaskStatus in
                <foreach item="item" index="index" collection="statuslist"
                         open="(" separator="," close=")">
                    #{item}
                </foreach>
            </if>
        </trim>
        ) as A
        <if test="pagesize!=null and pagesize!='' ">
            WHERE RowNumber > ${(pagenum-1)*pagesize}
        </if>
        ORDER BY A.TaskStatus,CONVERT (VARCHAR (19),A.TaskCreateTime,120) DESC
    </select>



    <!-- author:xsm description: 根据任务ID获取相关任务信息 date: 2021/07/27 13:52-->
    <select id="getTaskInfoDataByTaskID" parameterType="map" resultType="map">
        SELECT
        <if test="pointdataflag != null and pointdataflag =='1'.toString()">
        pointtable.monitorpointname,
        </if>
        CONVERT (VARCHAR(19),t1.TaskCreateTime,120) TaskCreateTime,
        case WHEN t1.OverLevelCode = '-1' THEN '超标' WHEN t1.OverLevelCode = '1' THEN '超标(一级)'
        WHEN t1.OverLevelCode = '2' THEN '超标(二级)' WHEN t1.OverLevelCode = '3' THEN '超标(三级)' END overlevelname
        from
        T_BAS_TaskDisposeManagement t1
        left join PUB_CODE_AlarmLevel pcal on t1.OverLevelCode =pcal.Code
        <if test="pointdataflag != null and pointdataflag =='1'.toString()">
        LEFT JOIN (
        SELECT t2.PK_ID monitorpointid,p.PollutionName+'_'+t2.OutputName
        monitorpointname,'1' monitorpointtype from T_BAS_WaterOutputInfo t2
        LEFT JOIN T_BAS_Pollution p ON t2.FK_Pollutionid = p.PK_PollutionID
        WHERE (t2.OutPutType !=3 or t2.OutPutType is null)
        UNION
        SELECT t3.PK_ID monitorpointid,p.PollutionName+'_'+t3.OutputName
        monitorpointname,'37' monitorpointtype from T_BAS_WaterOutputInfo t3
        LEFT JOIN T_BAS_Pollution p ON t3.FK_Pollutionid = p.PK_PollutionID
        WHERE t3.OutPutType =3
        UNION
        SELECT t4.PK_ID monitorpointid,p.PollutionName+'_'+t4.OutputName
        monitorpointname,t4.FK_MonitorPointTypeCode monitorpointtype from T_BAS_GASOutPutInfo t4
        LEFT JOIN T_BAS_Pollution p ON t4.FK_Pollutionid = p.PK_PollutionID
        UNION
        SELECT t5.PK_ID monitorpointid,p.PollutionName+'_'+t5.MonitorPointName monitorpointname,t5.FK_MonitorPointTypeCode monitorpointtype from
        T_BAS_UnorganizedMonitorPointInfo t5
        LEFT JOIN T_BAS_Pollution p ON t5.FK_Pollutionid = p.PK_PollutionID
        WHERE t5.FK_MonitorPointTypeCode in(40,41)
        UNION
        SELECT t6.PK_MonitorPointID monitorpointid,t6.MonitorPointName monitorpointname,t6.FK_MonitorPointTypeCode
        monitorpointtype from T_BAS_OtherMonitorPoint t6 WHERE t6.FK_MonitorPointTypeCode in(9,10,33,12)
        <!--安全监测点 -->
        <if test='categorys!=null and categorys.contains("2")'>
            UNION
            SELECT
            T_AQ_HazardSourceProductDevice.PK_ID MonitorPointID,
            T_BAS_Pollution.PollutionName+ '_' +MajorHazardSourcesName+ '_' + T_AQ_HazardSourceProductDevice.DeviceName monitorpointname,
            '57' FK_MonitorPointType
            FROM
            T_AQ_MajorHazardSources
            JOIN T_AQ_HazardSourceProductDevice ON T_AQ_MajorHazardSources.PK_ID =
            T_AQ_HazardSourceProductDevice.FK_MajorHazardSourcesId
            JOIN T_BAS_Pollution ON T_BAS_Pollution.PK_Pollutionid = T_AQ_MajorHazardSources.fk_pollutionid UNION
            SELECT
            T_AQ_StorageTankInfo.PK_ID MonitorPointID,
            T_BAS_Pollution.PollutionName+ '_' + StorageTankAreaName + '_' +T_AQ_StorageTankInfo.StorageTankCode AS monitorpointname,
            '30' FK_MonitorPointType
            FROM
            T_AQ_StorageTankAreaInfo
            JOIN T_AQ_StorageTankInfo ON T_AQ_StorageTankAreaInfo.PK_ID = T_AQ_StorageTankInfo.FK_StorageTankAreaID
            JOIN T_BAS_Pollution ON T_BAS_Pollution.PK_Pollutionid = T_AQ_StorageTankAreaInfo.fk_pollutionid UNION
            SELECT
            T_AQ_RiskAreaMonitorPoint.PK_MonitorPointID MonitorPointID,
            T_BAS_Pollution.PollutionName+ '_' +RiskAreaName+ '_' +T_AQ_RiskAreaMonitorPoint.MonitorPointName AS monitorpointname,
            T_AQ_RiskAreaMonitorPoint.FK_MonitorPointTypeCode FK_MonitorPointType
            FROM
            T_AQ_RiskAreaMonitorPoint
            join T_AQ_RiskArea on T_AQ_RiskAreaMonitorPoint.FK_RiskAreaID = T_AQ_RiskArea.PK_ID
            JOIN T_BAS_Pollution ON T_BAS_Pollution.PK_Pollutionid = T_AQ_RiskAreaMonitorPoint.fk_pollutionid
        </if>
        ) pointtable ON t1.FK_Pollutionid = pointtable.monitorpointid AND t1.FK_MonitorPointTypeCode =
        pointtable.monitorpointtype
        </if>
        <trim prefix="where" prefixOverrides="AND|OR">
            <if test="taskid != null and taskid !=''">
                AND t1.PK_TaskID= #{taskid}
            </if>
            <if test="tasktype !=null">
                AND t1.FK_TaskType = #{tasktype}
            </if>
        </trim>

    </select>


    <!-- author:xsm description: 根据任务ID获取分派人信息 date: 2021/07/27 13:52-->
    <select id="getAssignmentTaskUserInfo" parameterType="map" resultType="map">
        SELECT  Base_UserInfo.User_ID,Base_UserInfo.User_Name,User_Account,Phone
        FROM T_BAS_TaskFlowRecordInfo
        JOIN Base_UserInfo ON T_BAS_TaskFlowRecordInfo.FK_TaskHandleUserID = Base_UserInfo.User_ID
        WHERE T_BAS_TaskFlowRecordInfo.CurrentTaskStatus = '分派任务'
        <if test="taskid != null and taskid !=''">
                AND T_BAS_TaskFlowRecordInfo.FK_TaskID= #{taskid}
        </if>
    </select>


    <!-- author:xsm description: 根据任务IDs获取相关报警污染物信息 date: 2021/11/08 10:40-->
    <select id="getAllAlarmTaskPollutantDataByParams" parameterType="map" resultType="map">
        SELECT DISTINCT t1.FK_TaskID taskid,t3.code,t3.name,t3.orderindex,t3.pollutantunit
        FROM T_BAS_TaskAlarmPollutantInfo t1
        JOIN T_BAS_TaskDisposeManagement t2 ON  t1.FK_TaskID =t2.PK_TaskID AND  t1.FK_TaskType = t2.FK_TaskType
        JOIN PUB_CODE_PollutantFactor t3 ON  t1.FK_PolluantCode = t3.Code AND  t2.FK_MonitorPointTypeCode = t3.PollutantType
        <if test="taskids != null and taskids.size>0 ">
            and t1.FK_TaskID in
            <foreach item="item" index="index" collection="taskids"
                     open="(" separator="," close=")">
                #{item}
            </foreach>
        </if>
        order by t3.orderindex
    </select>


    <!-- author:xsm description: 获取当月报警任务处置情况 date: 2022/01/13 08:50-->
    <select id="getLastMonthAlarmTaskDisposalByParam" parameterType="map" resultType="map">
            SELECT COUNT (t.PK_TaskID) totalnum,
            sum(case when t.TaskStatus=4 then 1 else 0 end) ywcnum
            FROM
            T_BAS_TaskDisposeManagement t
        <if test="userid != null and userid !=''">
            JOIN (
            SELECT
            FK_MonitorPointID
            FROM
            T_BAS_UserMonitorPointRelationData
            WHERE
            T_BAS_UserMonitorPointRelationData.FK_UserID = #{userid}
            GROUP BY
            FK_MonitorPointID
            ) relation ON t.FK_Pollutionid = relation.FK_MonitorPointID
        </if>
            <trim prefix="where" prefixOverrides="AND|OR">
                <if test="monthdate != null and monthdate !=''">
                    AND CONVERT (VARCHAR (7),t.TaskCreateTime,120) = #{monthdate}
                </if>
                <if test="tasktype != null and tasktype !=''">
                    AND t.FK_TaskType = #{tasktype}
                </if>
                <if test="monitorpointtype != null and monitorpointtype !=''">
                    AND t.FK_MonitorPointTypeCode = #{monitorpointtype}
                </if>
                <if test="monitorpointtypes != null and monitorpointtypes.size>0 ">
                    and t.FK_MonitorPointTypeCode in
                    <foreach item="item" index="index" collection="monitorpointtypes"
                             open="(" separator="," close=")">
                        #{item}
                    </foreach>
                </if>
            </trim>
    </select>


    <select id="countTaskCompletionDataByParamMap" resultType="map" parameterType="map">
        SELECT
        COUNT (PK_TaskID) totalnum,
        sum(case when t.TaskStatus IN (0,1,2,5) then 1 else 0 end) as uncompleted,
        sum(case when t.TaskStatus IN (3,4) then 1 else 0 end) as completed,
        convert(varchar(10),TaskCreateTime,120)TaskCreateTime,
        FK_TaskType
        FROM
        T_BAS_TaskDisposeManagement t
        <if test="userid != null and userid !=''">
            JOIN
            (
            SELECT
            FK_MonitorPointID
            FROM
            T_BAS_UserMonitorPointRelationData
            WHERE
            T_BAS_UserMonitorPointRelationData.FK_UserID = #{userid}
            GROUP BY
            FK_MonitorPointID
            ) relation ON t.FK_Pollutionid =relation.FK_MonitorPointID
        </if>
        left join PUB_CODE_MonitorPointType on t.FK_MonitorPointTypeCode = PUB_CODE_MonitorPointType.Code
        <where>
            <if test="fktasktypes!=null and fktasktypes.size>0">
                and fk_TaskType IN
                <foreach collection="fktasktypes" item="item" open="(" close=")" separator=",">
                    #{item}
                </foreach>
            </if>
            <if test="category!=null and category!='' ">
                and PUB_CODE_MonitorPointType.category = #{category}
            </if>
            <if test="starttime != null and starttime !=''">
                AND CONVERT (VARCHAR (10),TaskCreateTime,120) >= #{starttime}
            </if>
            <if test="endtime != null and endtime !=''">
                AND CONVERT (VARCHAR (10),TaskCreateTime,120) <![CDATA[<=]]> #{endtime}
            </if>
        </where>
        group by convert(varchar(10),TaskCreateTime,120), FK_TaskType
    </select>

</mapper>
